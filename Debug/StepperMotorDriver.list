
StepperMotorDriver.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00008bbc  08000110  08000110  00001110  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000007a0  08008cd0  08008cd0  00009cd0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08009470  08009470  0000b1e8  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  08009470  08009470  0000a470  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08009478  08009478  0000b1e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08009478  08009478  0000a478  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800947c  0800947c  0000a47c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001e8  20000000  08009480  0000b000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000055c  200001e8  08009668  0000b1e8  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000744  08009668  0000b744  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0000b1e8  2**0
                  CONTENTS, READONLY
 12 .debug_info   00015b39  00000000  00000000  0000b211  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00003233  00000000  00000000  00020d4a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001478  00000000  00000000  00023f80  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000fd6  00000000  00000000  000253f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001a619  00000000  00000000  000263ce  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00013c85  00000000  00000000  000409e7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00098174  00000000  00000000  0005466c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000ec7e0  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000066c0  00000000  00000000  000ec824  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000060  00000000  00000000  000f2ee4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	@ (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	@ (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	@ (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	200001e8 	.word	0x200001e8
 800012c:	00000000 	.word	0x00000000
 8000130:	08008cb4 	.word	0x08008cb4

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	@ (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	@ (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	@ (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	200001ec 	.word	0x200001ec
 800014c:	08008cb4 	.word	0x08008cb4

08000150 <strlen>:
 8000150:	4603      	mov	r3, r0
 8000152:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000156:	2a00      	cmp	r2, #0
 8000158:	d1fb      	bne.n	8000152 <strlen+0x2>
 800015a:	1a18      	subs	r0, r3, r0
 800015c:	3801      	subs	r0, #1
 800015e:	4770      	bx	lr

08000160 <__aeabi_drsub>:
 8000160:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000164:	e002      	b.n	800016c <__adddf3>
 8000166:	bf00      	nop

08000168 <__aeabi_dsub>:
 8000168:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800016c <__adddf3>:
 800016c:	b530      	push	{r4, r5, lr}
 800016e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000172:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000176:	ea94 0f05 	teq	r4, r5
 800017a:	bf08      	it	eq
 800017c:	ea90 0f02 	teqeq	r0, r2
 8000180:	bf1f      	itttt	ne
 8000182:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000186:	ea55 0c02 	orrsne.w	ip, r5, r2
 800018a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800018e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000192:	f000 80e2 	beq.w	800035a <__adddf3+0x1ee>
 8000196:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800019a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800019e:	bfb8      	it	lt
 80001a0:	426d      	neglt	r5, r5
 80001a2:	dd0c      	ble.n	80001be <__adddf3+0x52>
 80001a4:	442c      	add	r4, r5
 80001a6:	ea80 0202 	eor.w	r2, r0, r2
 80001aa:	ea81 0303 	eor.w	r3, r1, r3
 80001ae:	ea82 0000 	eor.w	r0, r2, r0
 80001b2:	ea83 0101 	eor.w	r1, r3, r1
 80001b6:	ea80 0202 	eor.w	r2, r0, r2
 80001ba:	ea81 0303 	eor.w	r3, r1, r3
 80001be:	2d36      	cmp	r5, #54	@ 0x36
 80001c0:	bf88      	it	hi
 80001c2:	bd30      	pophi	{r4, r5, pc}
 80001c4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80001c8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001cc:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 80001d0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80001d4:	d002      	beq.n	80001dc <__adddf3+0x70>
 80001d6:	4240      	negs	r0, r0
 80001d8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001dc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 80001e0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80001e4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80001e8:	d002      	beq.n	80001f0 <__adddf3+0x84>
 80001ea:	4252      	negs	r2, r2
 80001ec:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80001f0:	ea94 0f05 	teq	r4, r5
 80001f4:	f000 80a7 	beq.w	8000346 <__adddf3+0x1da>
 80001f8:	f1a4 0401 	sub.w	r4, r4, #1
 80001fc:	f1d5 0e20 	rsbs	lr, r5, #32
 8000200:	db0d      	blt.n	800021e <__adddf3+0xb2>
 8000202:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000206:	fa22 f205 	lsr.w	r2, r2, r5
 800020a:	1880      	adds	r0, r0, r2
 800020c:	f141 0100 	adc.w	r1, r1, #0
 8000210:	fa03 f20e 	lsl.w	r2, r3, lr
 8000214:	1880      	adds	r0, r0, r2
 8000216:	fa43 f305 	asr.w	r3, r3, r5
 800021a:	4159      	adcs	r1, r3
 800021c:	e00e      	b.n	800023c <__adddf3+0xd0>
 800021e:	f1a5 0520 	sub.w	r5, r5, #32
 8000222:	f10e 0e20 	add.w	lr, lr, #32
 8000226:	2a01      	cmp	r2, #1
 8000228:	fa03 fc0e 	lsl.w	ip, r3, lr
 800022c:	bf28      	it	cs
 800022e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000232:	fa43 f305 	asr.w	r3, r3, r5
 8000236:	18c0      	adds	r0, r0, r3
 8000238:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800023c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000240:	d507      	bpl.n	8000252 <__adddf3+0xe6>
 8000242:	f04f 0e00 	mov.w	lr, #0
 8000246:	f1dc 0c00 	rsbs	ip, ip, #0
 800024a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800024e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000252:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000256:	d31b      	bcc.n	8000290 <__adddf3+0x124>
 8000258:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800025c:	d30c      	bcc.n	8000278 <__adddf3+0x10c>
 800025e:	0849      	lsrs	r1, r1, #1
 8000260:	ea5f 0030 	movs.w	r0, r0, rrx
 8000264:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000268:	f104 0401 	add.w	r4, r4, #1
 800026c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000270:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000274:	f080 809a 	bcs.w	80003ac <__adddf3+0x240>
 8000278:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 800027c:	bf08      	it	eq
 800027e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000282:	f150 0000 	adcs.w	r0, r0, #0
 8000286:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800028a:	ea41 0105 	orr.w	r1, r1, r5
 800028e:	bd30      	pop	{r4, r5, pc}
 8000290:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000294:	4140      	adcs	r0, r0
 8000296:	eb41 0101 	adc.w	r1, r1, r1
 800029a:	3c01      	subs	r4, #1
 800029c:	bf28      	it	cs
 800029e:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80002a2:	d2e9      	bcs.n	8000278 <__adddf3+0x10c>
 80002a4:	f091 0f00 	teq	r1, #0
 80002a8:	bf04      	itt	eq
 80002aa:	4601      	moveq	r1, r0
 80002ac:	2000      	moveq	r0, #0
 80002ae:	fab1 f381 	clz	r3, r1
 80002b2:	bf08      	it	eq
 80002b4:	3320      	addeq	r3, #32
 80002b6:	f1a3 030b 	sub.w	r3, r3, #11
 80002ba:	f1b3 0220 	subs.w	r2, r3, #32
 80002be:	da0c      	bge.n	80002da <__adddf3+0x16e>
 80002c0:	320c      	adds	r2, #12
 80002c2:	dd08      	ble.n	80002d6 <__adddf3+0x16a>
 80002c4:	f102 0c14 	add.w	ip, r2, #20
 80002c8:	f1c2 020c 	rsb	r2, r2, #12
 80002cc:	fa01 f00c 	lsl.w	r0, r1, ip
 80002d0:	fa21 f102 	lsr.w	r1, r1, r2
 80002d4:	e00c      	b.n	80002f0 <__adddf3+0x184>
 80002d6:	f102 0214 	add.w	r2, r2, #20
 80002da:	bfd8      	it	le
 80002dc:	f1c2 0c20 	rsble	ip, r2, #32
 80002e0:	fa01 f102 	lsl.w	r1, r1, r2
 80002e4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80002e8:	bfdc      	itt	le
 80002ea:	ea41 010c 	orrle.w	r1, r1, ip
 80002ee:	4090      	lslle	r0, r2
 80002f0:	1ae4      	subs	r4, r4, r3
 80002f2:	bfa2      	ittt	ge
 80002f4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80002f8:	4329      	orrge	r1, r5
 80002fa:	bd30      	popge	{r4, r5, pc}
 80002fc:	ea6f 0404 	mvn.w	r4, r4
 8000300:	3c1f      	subs	r4, #31
 8000302:	da1c      	bge.n	800033e <__adddf3+0x1d2>
 8000304:	340c      	adds	r4, #12
 8000306:	dc0e      	bgt.n	8000326 <__adddf3+0x1ba>
 8000308:	f104 0414 	add.w	r4, r4, #20
 800030c:	f1c4 0220 	rsb	r2, r4, #32
 8000310:	fa20 f004 	lsr.w	r0, r0, r4
 8000314:	fa01 f302 	lsl.w	r3, r1, r2
 8000318:	ea40 0003 	orr.w	r0, r0, r3
 800031c:	fa21 f304 	lsr.w	r3, r1, r4
 8000320:	ea45 0103 	orr.w	r1, r5, r3
 8000324:	bd30      	pop	{r4, r5, pc}
 8000326:	f1c4 040c 	rsb	r4, r4, #12
 800032a:	f1c4 0220 	rsb	r2, r4, #32
 800032e:	fa20 f002 	lsr.w	r0, r0, r2
 8000332:	fa01 f304 	lsl.w	r3, r1, r4
 8000336:	ea40 0003 	orr.w	r0, r0, r3
 800033a:	4629      	mov	r1, r5
 800033c:	bd30      	pop	{r4, r5, pc}
 800033e:	fa21 f004 	lsr.w	r0, r1, r4
 8000342:	4629      	mov	r1, r5
 8000344:	bd30      	pop	{r4, r5, pc}
 8000346:	f094 0f00 	teq	r4, #0
 800034a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800034e:	bf06      	itte	eq
 8000350:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000354:	3401      	addeq	r4, #1
 8000356:	3d01      	subne	r5, #1
 8000358:	e74e      	b.n	80001f8 <__adddf3+0x8c>
 800035a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800035e:	bf18      	it	ne
 8000360:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000364:	d029      	beq.n	80003ba <__adddf3+0x24e>
 8000366:	ea94 0f05 	teq	r4, r5
 800036a:	bf08      	it	eq
 800036c:	ea90 0f02 	teqeq	r0, r2
 8000370:	d005      	beq.n	800037e <__adddf3+0x212>
 8000372:	ea54 0c00 	orrs.w	ip, r4, r0
 8000376:	bf04      	itt	eq
 8000378:	4619      	moveq	r1, r3
 800037a:	4610      	moveq	r0, r2
 800037c:	bd30      	pop	{r4, r5, pc}
 800037e:	ea91 0f03 	teq	r1, r3
 8000382:	bf1e      	ittt	ne
 8000384:	2100      	movne	r1, #0
 8000386:	2000      	movne	r0, #0
 8000388:	bd30      	popne	{r4, r5, pc}
 800038a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800038e:	d105      	bne.n	800039c <__adddf3+0x230>
 8000390:	0040      	lsls	r0, r0, #1
 8000392:	4149      	adcs	r1, r1
 8000394:	bf28      	it	cs
 8000396:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 800039a:	bd30      	pop	{r4, r5, pc}
 800039c:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80003a0:	bf3c      	itt	cc
 80003a2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80003a6:	bd30      	popcc	{r4, r5, pc}
 80003a8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80003ac:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80003b0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80003b4:	f04f 0000 	mov.w	r0, #0
 80003b8:	bd30      	pop	{r4, r5, pc}
 80003ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003be:	bf1a      	itte	ne
 80003c0:	4619      	movne	r1, r3
 80003c2:	4610      	movne	r0, r2
 80003c4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003c8:	bf1c      	itt	ne
 80003ca:	460b      	movne	r3, r1
 80003cc:	4602      	movne	r2, r0
 80003ce:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80003d2:	bf06      	itte	eq
 80003d4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80003d8:	ea91 0f03 	teqeq	r1, r3
 80003dc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 80003e0:	bd30      	pop	{r4, r5, pc}
 80003e2:	bf00      	nop

080003e4 <__aeabi_ui2d>:
 80003e4:	f090 0f00 	teq	r0, #0
 80003e8:	bf04      	itt	eq
 80003ea:	2100      	moveq	r1, #0
 80003ec:	4770      	bxeq	lr
 80003ee:	b530      	push	{r4, r5, lr}
 80003f0:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80003f4:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80003f8:	f04f 0500 	mov.w	r5, #0
 80003fc:	f04f 0100 	mov.w	r1, #0
 8000400:	e750      	b.n	80002a4 <__adddf3+0x138>
 8000402:	bf00      	nop

08000404 <__aeabi_i2d>:
 8000404:	f090 0f00 	teq	r0, #0
 8000408:	bf04      	itt	eq
 800040a:	2100      	moveq	r1, #0
 800040c:	4770      	bxeq	lr
 800040e:	b530      	push	{r4, r5, lr}
 8000410:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000414:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000418:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800041c:	bf48      	it	mi
 800041e:	4240      	negmi	r0, r0
 8000420:	f04f 0100 	mov.w	r1, #0
 8000424:	e73e      	b.n	80002a4 <__adddf3+0x138>
 8000426:	bf00      	nop

08000428 <__aeabi_f2d>:
 8000428:	0042      	lsls	r2, r0, #1
 800042a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800042e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000432:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000436:	bf1f      	itttt	ne
 8000438:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800043c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000440:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000444:	4770      	bxne	lr
 8000446:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800044a:	bf08      	it	eq
 800044c:	4770      	bxeq	lr
 800044e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000452:	bf04      	itt	eq
 8000454:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000458:	4770      	bxeq	lr
 800045a:	b530      	push	{r4, r5, lr}
 800045c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000460:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000464:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000468:	e71c      	b.n	80002a4 <__adddf3+0x138>
 800046a:	bf00      	nop

0800046c <__aeabi_ul2d>:
 800046c:	ea50 0201 	orrs.w	r2, r0, r1
 8000470:	bf08      	it	eq
 8000472:	4770      	bxeq	lr
 8000474:	b530      	push	{r4, r5, lr}
 8000476:	f04f 0500 	mov.w	r5, #0
 800047a:	e00a      	b.n	8000492 <__aeabi_l2d+0x16>

0800047c <__aeabi_l2d>:
 800047c:	ea50 0201 	orrs.w	r2, r0, r1
 8000480:	bf08      	it	eq
 8000482:	4770      	bxeq	lr
 8000484:	b530      	push	{r4, r5, lr}
 8000486:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 800048a:	d502      	bpl.n	8000492 <__aeabi_l2d+0x16>
 800048c:	4240      	negs	r0, r0
 800048e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000492:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000496:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 800049a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800049e:	f43f aed8 	beq.w	8000252 <__adddf3+0xe6>
 80004a2:	f04f 0203 	mov.w	r2, #3
 80004a6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004aa:	bf18      	it	ne
 80004ac:	3203      	addne	r2, #3
 80004ae:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004b2:	bf18      	it	ne
 80004b4:	3203      	addne	r2, #3
 80004b6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004ba:	f1c2 0320 	rsb	r3, r2, #32
 80004be:	fa00 fc03 	lsl.w	ip, r0, r3
 80004c2:	fa20 f002 	lsr.w	r0, r0, r2
 80004c6:	fa01 fe03 	lsl.w	lr, r1, r3
 80004ca:	ea40 000e 	orr.w	r0, r0, lr
 80004ce:	fa21 f102 	lsr.w	r1, r1, r2
 80004d2:	4414      	add	r4, r2
 80004d4:	e6bd      	b.n	8000252 <__adddf3+0xe6>
 80004d6:	bf00      	nop

080004d8 <__aeabi_dmul>:
 80004d8:	b570      	push	{r4, r5, r6, lr}
 80004da:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80004de:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80004e2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80004e6:	bf1d      	ittte	ne
 80004e8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80004ec:	ea94 0f0c 	teqne	r4, ip
 80004f0:	ea95 0f0c 	teqne	r5, ip
 80004f4:	f000 f8de 	bleq	80006b4 <__aeabi_dmul+0x1dc>
 80004f8:	442c      	add	r4, r5
 80004fa:	ea81 0603 	eor.w	r6, r1, r3
 80004fe:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000502:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000506:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800050a:	bf18      	it	ne
 800050c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000510:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000514:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000518:	d038      	beq.n	800058c <__aeabi_dmul+0xb4>
 800051a:	fba0 ce02 	umull	ip, lr, r0, r2
 800051e:	f04f 0500 	mov.w	r5, #0
 8000522:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000526:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800052a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800052e:	f04f 0600 	mov.w	r6, #0
 8000532:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000536:	f09c 0f00 	teq	ip, #0
 800053a:	bf18      	it	ne
 800053c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000540:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000544:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000548:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800054c:	d204      	bcs.n	8000558 <__aeabi_dmul+0x80>
 800054e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000552:	416d      	adcs	r5, r5
 8000554:	eb46 0606 	adc.w	r6, r6, r6
 8000558:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800055c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000560:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000564:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000568:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800056c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000570:	bf88      	it	hi
 8000572:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000576:	d81e      	bhi.n	80005b6 <__aeabi_dmul+0xde>
 8000578:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 800057c:	bf08      	it	eq
 800057e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000582:	f150 0000 	adcs.w	r0, r0, #0
 8000586:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800058a:	bd70      	pop	{r4, r5, r6, pc}
 800058c:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 8000590:	ea46 0101 	orr.w	r1, r6, r1
 8000594:	ea40 0002 	orr.w	r0, r0, r2
 8000598:	ea81 0103 	eor.w	r1, r1, r3
 800059c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80005a0:	bfc2      	ittt	gt
 80005a2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80005a6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005aa:	bd70      	popgt	{r4, r5, r6, pc}
 80005ac:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80005b0:	f04f 0e00 	mov.w	lr, #0
 80005b4:	3c01      	subs	r4, #1
 80005b6:	f300 80ab 	bgt.w	8000710 <__aeabi_dmul+0x238>
 80005ba:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80005be:	bfde      	ittt	le
 80005c0:	2000      	movle	r0, #0
 80005c2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80005c6:	bd70      	pople	{r4, r5, r6, pc}
 80005c8:	f1c4 0400 	rsb	r4, r4, #0
 80005cc:	3c20      	subs	r4, #32
 80005ce:	da35      	bge.n	800063c <__aeabi_dmul+0x164>
 80005d0:	340c      	adds	r4, #12
 80005d2:	dc1b      	bgt.n	800060c <__aeabi_dmul+0x134>
 80005d4:	f104 0414 	add.w	r4, r4, #20
 80005d8:	f1c4 0520 	rsb	r5, r4, #32
 80005dc:	fa00 f305 	lsl.w	r3, r0, r5
 80005e0:	fa20 f004 	lsr.w	r0, r0, r4
 80005e4:	fa01 f205 	lsl.w	r2, r1, r5
 80005e8:	ea40 0002 	orr.w	r0, r0, r2
 80005ec:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 80005f0:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005f4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80005f8:	fa21 f604 	lsr.w	r6, r1, r4
 80005fc:	eb42 0106 	adc.w	r1, r2, r6
 8000600:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000604:	bf08      	it	eq
 8000606:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800060a:	bd70      	pop	{r4, r5, r6, pc}
 800060c:	f1c4 040c 	rsb	r4, r4, #12
 8000610:	f1c4 0520 	rsb	r5, r4, #32
 8000614:	fa00 f304 	lsl.w	r3, r0, r4
 8000618:	fa20 f005 	lsr.w	r0, r0, r5
 800061c:	fa01 f204 	lsl.w	r2, r1, r4
 8000620:	ea40 0002 	orr.w	r0, r0, r2
 8000624:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000628:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800062c:	f141 0100 	adc.w	r1, r1, #0
 8000630:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000634:	bf08      	it	eq
 8000636:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800063a:	bd70      	pop	{r4, r5, r6, pc}
 800063c:	f1c4 0520 	rsb	r5, r4, #32
 8000640:	fa00 f205 	lsl.w	r2, r0, r5
 8000644:	ea4e 0e02 	orr.w	lr, lr, r2
 8000648:	fa20 f304 	lsr.w	r3, r0, r4
 800064c:	fa01 f205 	lsl.w	r2, r1, r5
 8000650:	ea43 0302 	orr.w	r3, r3, r2
 8000654:	fa21 f004 	lsr.w	r0, r1, r4
 8000658:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800065c:	fa21 f204 	lsr.w	r2, r1, r4
 8000660:	ea20 0002 	bic.w	r0, r0, r2
 8000664:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000668:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800066c:	bf08      	it	eq
 800066e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000672:	bd70      	pop	{r4, r5, r6, pc}
 8000674:	f094 0f00 	teq	r4, #0
 8000678:	d10f      	bne.n	800069a <__aeabi_dmul+0x1c2>
 800067a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 800067e:	0040      	lsls	r0, r0, #1
 8000680:	eb41 0101 	adc.w	r1, r1, r1
 8000684:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000688:	bf08      	it	eq
 800068a:	3c01      	subeq	r4, #1
 800068c:	d0f7      	beq.n	800067e <__aeabi_dmul+0x1a6>
 800068e:	ea41 0106 	orr.w	r1, r1, r6
 8000692:	f095 0f00 	teq	r5, #0
 8000696:	bf18      	it	ne
 8000698:	4770      	bxne	lr
 800069a:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 800069e:	0052      	lsls	r2, r2, #1
 80006a0:	eb43 0303 	adc.w	r3, r3, r3
 80006a4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80006a8:	bf08      	it	eq
 80006aa:	3d01      	subeq	r5, #1
 80006ac:	d0f7      	beq.n	800069e <__aeabi_dmul+0x1c6>
 80006ae:	ea43 0306 	orr.w	r3, r3, r6
 80006b2:	4770      	bx	lr
 80006b4:	ea94 0f0c 	teq	r4, ip
 80006b8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80006bc:	bf18      	it	ne
 80006be:	ea95 0f0c 	teqne	r5, ip
 80006c2:	d00c      	beq.n	80006de <__aeabi_dmul+0x206>
 80006c4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006c8:	bf18      	it	ne
 80006ca:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ce:	d1d1      	bne.n	8000674 <__aeabi_dmul+0x19c>
 80006d0:	ea81 0103 	eor.w	r1, r1, r3
 80006d4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80006d8:	f04f 0000 	mov.w	r0, #0
 80006dc:	bd70      	pop	{r4, r5, r6, pc}
 80006de:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006e2:	bf06      	itte	eq
 80006e4:	4610      	moveq	r0, r2
 80006e6:	4619      	moveq	r1, r3
 80006e8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ec:	d019      	beq.n	8000722 <__aeabi_dmul+0x24a>
 80006ee:	ea94 0f0c 	teq	r4, ip
 80006f2:	d102      	bne.n	80006fa <__aeabi_dmul+0x222>
 80006f4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80006f8:	d113      	bne.n	8000722 <__aeabi_dmul+0x24a>
 80006fa:	ea95 0f0c 	teq	r5, ip
 80006fe:	d105      	bne.n	800070c <__aeabi_dmul+0x234>
 8000700:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000704:	bf1c      	itt	ne
 8000706:	4610      	movne	r0, r2
 8000708:	4619      	movne	r1, r3
 800070a:	d10a      	bne.n	8000722 <__aeabi_dmul+0x24a>
 800070c:	ea81 0103 	eor.w	r1, r1, r3
 8000710:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000714:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000718:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800071c:	f04f 0000 	mov.w	r0, #0
 8000720:	bd70      	pop	{r4, r5, r6, pc}
 8000722:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000726:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800072a:	bd70      	pop	{r4, r5, r6, pc}

0800072c <__aeabi_ddiv>:
 800072c:	b570      	push	{r4, r5, r6, lr}
 800072e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000732:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000736:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800073a:	bf1d      	ittte	ne
 800073c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000740:	ea94 0f0c 	teqne	r4, ip
 8000744:	ea95 0f0c 	teqne	r5, ip
 8000748:	f000 f8a7 	bleq	800089a <__aeabi_ddiv+0x16e>
 800074c:	eba4 0405 	sub.w	r4, r4, r5
 8000750:	ea81 0e03 	eor.w	lr, r1, r3
 8000754:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000758:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800075c:	f000 8088 	beq.w	8000870 <__aeabi_ddiv+0x144>
 8000760:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000764:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000768:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800076c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000770:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000774:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000778:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800077c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000780:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 8000784:	429d      	cmp	r5, r3
 8000786:	bf08      	it	eq
 8000788:	4296      	cmpeq	r6, r2
 800078a:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 800078e:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 8000792:	d202      	bcs.n	800079a <__aeabi_ddiv+0x6e>
 8000794:	085b      	lsrs	r3, r3, #1
 8000796:	ea4f 0232 	mov.w	r2, r2, rrx
 800079a:	1ab6      	subs	r6, r6, r2
 800079c:	eb65 0503 	sbc.w	r5, r5, r3
 80007a0:	085b      	lsrs	r3, r3, #1
 80007a2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007a6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80007aa:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80007ae:	ebb6 0e02 	subs.w	lr, r6, r2
 80007b2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007b6:	bf22      	ittt	cs
 80007b8:	1ab6      	subcs	r6, r6, r2
 80007ba:	4675      	movcs	r5, lr
 80007bc:	ea40 000c 	orrcs.w	r0, r0, ip
 80007c0:	085b      	lsrs	r3, r3, #1
 80007c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007c6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007ca:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007ce:	bf22      	ittt	cs
 80007d0:	1ab6      	subcs	r6, r6, r2
 80007d2:	4675      	movcs	r5, lr
 80007d4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80007d8:	085b      	lsrs	r3, r3, #1
 80007da:	ea4f 0232 	mov.w	r2, r2, rrx
 80007de:	ebb6 0e02 	subs.w	lr, r6, r2
 80007e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007e6:	bf22      	ittt	cs
 80007e8:	1ab6      	subcs	r6, r6, r2
 80007ea:	4675      	movcs	r5, lr
 80007ec:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80007f0:	085b      	lsrs	r3, r3, #1
 80007f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007fe:	bf22      	ittt	cs
 8000800:	1ab6      	subcs	r6, r6, r2
 8000802:	4675      	movcs	r5, lr
 8000804:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000808:	ea55 0e06 	orrs.w	lr, r5, r6
 800080c:	d018      	beq.n	8000840 <__aeabi_ddiv+0x114>
 800080e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000812:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000816:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800081a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800081e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000822:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000826:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800082a:	d1c0      	bne.n	80007ae <__aeabi_ddiv+0x82>
 800082c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000830:	d10b      	bne.n	800084a <__aeabi_ddiv+0x11e>
 8000832:	ea41 0100 	orr.w	r1, r1, r0
 8000836:	f04f 0000 	mov.w	r0, #0
 800083a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800083e:	e7b6      	b.n	80007ae <__aeabi_ddiv+0x82>
 8000840:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000844:	bf04      	itt	eq
 8000846:	4301      	orreq	r1, r0
 8000848:	2000      	moveq	r0, #0
 800084a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800084e:	bf88      	it	hi
 8000850:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000854:	f63f aeaf 	bhi.w	80005b6 <__aeabi_dmul+0xde>
 8000858:	ebb5 0c03 	subs.w	ip, r5, r3
 800085c:	bf04      	itt	eq
 800085e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000862:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000866:	f150 0000 	adcs.w	r0, r0, #0
 800086a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800086e:	bd70      	pop	{r4, r5, r6, pc}
 8000870:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000874:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000878:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800087c:	bfc2      	ittt	gt
 800087e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000882:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000886:	bd70      	popgt	{r4, r5, r6, pc}
 8000888:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 800088c:	f04f 0e00 	mov.w	lr, #0
 8000890:	3c01      	subs	r4, #1
 8000892:	e690      	b.n	80005b6 <__aeabi_dmul+0xde>
 8000894:	ea45 0e06 	orr.w	lr, r5, r6
 8000898:	e68d      	b.n	80005b6 <__aeabi_dmul+0xde>
 800089a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800089e:	ea94 0f0c 	teq	r4, ip
 80008a2:	bf08      	it	eq
 80008a4:	ea95 0f0c 	teqeq	r5, ip
 80008a8:	f43f af3b 	beq.w	8000722 <__aeabi_dmul+0x24a>
 80008ac:	ea94 0f0c 	teq	r4, ip
 80008b0:	d10a      	bne.n	80008c8 <__aeabi_ddiv+0x19c>
 80008b2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008b6:	f47f af34 	bne.w	8000722 <__aeabi_dmul+0x24a>
 80008ba:	ea95 0f0c 	teq	r5, ip
 80008be:	f47f af25 	bne.w	800070c <__aeabi_dmul+0x234>
 80008c2:	4610      	mov	r0, r2
 80008c4:	4619      	mov	r1, r3
 80008c6:	e72c      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008c8:	ea95 0f0c 	teq	r5, ip
 80008cc:	d106      	bne.n	80008dc <__aeabi_ddiv+0x1b0>
 80008ce:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008d2:	f43f aefd 	beq.w	80006d0 <__aeabi_dmul+0x1f8>
 80008d6:	4610      	mov	r0, r2
 80008d8:	4619      	mov	r1, r3
 80008da:	e722      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008dc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008e0:	bf18      	it	ne
 80008e2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008e6:	f47f aec5 	bne.w	8000674 <__aeabi_dmul+0x19c>
 80008ea:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80008ee:	f47f af0d 	bne.w	800070c <__aeabi_dmul+0x234>
 80008f2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80008f6:	f47f aeeb 	bne.w	80006d0 <__aeabi_dmul+0x1f8>
 80008fa:	e712      	b.n	8000722 <__aeabi_dmul+0x24a>

080008fc <__gedf2>:
 80008fc:	f04f 3cff 	mov.w	ip, #4294967295	@ 0xffffffff
 8000900:	e006      	b.n	8000910 <__cmpdf2+0x4>
 8000902:	bf00      	nop

08000904 <__ledf2>:
 8000904:	f04f 0c01 	mov.w	ip, #1
 8000908:	e002      	b.n	8000910 <__cmpdf2+0x4>
 800090a:	bf00      	nop

0800090c <__cmpdf2>:
 800090c:	f04f 0c01 	mov.w	ip, #1
 8000910:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000914:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000918:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800091c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000920:	bf18      	it	ne
 8000922:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000926:	d01b      	beq.n	8000960 <__cmpdf2+0x54>
 8000928:	b001      	add	sp, #4
 800092a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 800092e:	bf0c      	ite	eq
 8000930:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000934:	ea91 0f03 	teqne	r1, r3
 8000938:	bf02      	ittt	eq
 800093a:	ea90 0f02 	teqeq	r0, r2
 800093e:	2000      	moveq	r0, #0
 8000940:	4770      	bxeq	lr
 8000942:	f110 0f00 	cmn.w	r0, #0
 8000946:	ea91 0f03 	teq	r1, r3
 800094a:	bf58      	it	pl
 800094c:	4299      	cmppl	r1, r3
 800094e:	bf08      	it	eq
 8000950:	4290      	cmpeq	r0, r2
 8000952:	bf2c      	ite	cs
 8000954:	17d8      	asrcs	r0, r3, #31
 8000956:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800095a:	f040 0001 	orr.w	r0, r0, #1
 800095e:	4770      	bx	lr
 8000960:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000964:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000968:	d102      	bne.n	8000970 <__cmpdf2+0x64>
 800096a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 800096e:	d107      	bne.n	8000980 <__cmpdf2+0x74>
 8000970:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000974:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000978:	d1d6      	bne.n	8000928 <__cmpdf2+0x1c>
 800097a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 800097e:	d0d3      	beq.n	8000928 <__cmpdf2+0x1c>
 8000980:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000984:	4770      	bx	lr
 8000986:	bf00      	nop

08000988 <__aeabi_cdrcmple>:
 8000988:	4684      	mov	ip, r0
 800098a:	4610      	mov	r0, r2
 800098c:	4662      	mov	r2, ip
 800098e:	468c      	mov	ip, r1
 8000990:	4619      	mov	r1, r3
 8000992:	4663      	mov	r3, ip
 8000994:	e000      	b.n	8000998 <__aeabi_cdcmpeq>
 8000996:	bf00      	nop

08000998 <__aeabi_cdcmpeq>:
 8000998:	b501      	push	{r0, lr}
 800099a:	f7ff ffb7 	bl	800090c <__cmpdf2>
 800099e:	2800      	cmp	r0, #0
 80009a0:	bf48      	it	mi
 80009a2:	f110 0f00 	cmnmi.w	r0, #0
 80009a6:	bd01      	pop	{r0, pc}

080009a8 <__aeabi_dcmpeq>:
 80009a8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009ac:	f7ff fff4 	bl	8000998 <__aeabi_cdcmpeq>
 80009b0:	bf0c      	ite	eq
 80009b2:	2001      	moveq	r0, #1
 80009b4:	2000      	movne	r0, #0
 80009b6:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ba:	bf00      	nop

080009bc <__aeabi_dcmplt>:
 80009bc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009c0:	f7ff ffea 	bl	8000998 <__aeabi_cdcmpeq>
 80009c4:	bf34      	ite	cc
 80009c6:	2001      	movcc	r0, #1
 80009c8:	2000      	movcs	r0, #0
 80009ca:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ce:	bf00      	nop

080009d0 <__aeabi_dcmple>:
 80009d0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009d4:	f7ff ffe0 	bl	8000998 <__aeabi_cdcmpeq>
 80009d8:	bf94      	ite	ls
 80009da:	2001      	movls	r0, #1
 80009dc:	2000      	movhi	r0, #0
 80009de:	f85d fb08 	ldr.w	pc, [sp], #8
 80009e2:	bf00      	nop

080009e4 <__aeabi_dcmpge>:
 80009e4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009e8:	f7ff ffce 	bl	8000988 <__aeabi_cdrcmple>
 80009ec:	bf94      	ite	ls
 80009ee:	2001      	movls	r0, #1
 80009f0:	2000      	movhi	r0, #0
 80009f2:	f85d fb08 	ldr.w	pc, [sp], #8
 80009f6:	bf00      	nop

080009f8 <__aeabi_dcmpgt>:
 80009f8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009fc:	f7ff ffc4 	bl	8000988 <__aeabi_cdrcmple>
 8000a00:	bf34      	ite	cc
 8000a02:	2001      	movcc	r0, #1
 8000a04:	2000      	movcs	r0, #0
 8000a06:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a0a:	bf00      	nop

08000a0c <__aeabi_dcmpun>:
 8000a0c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a10:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a14:	d102      	bne.n	8000a1c <__aeabi_dcmpun+0x10>
 8000a16:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a1a:	d10a      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a1c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a20:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a24:	d102      	bne.n	8000a2c <__aeabi_dcmpun+0x20>
 8000a26:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a2a:	d102      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a2c:	f04f 0000 	mov.w	r0, #0
 8000a30:	4770      	bx	lr
 8000a32:	f04f 0001 	mov.w	r0, #1
 8000a36:	4770      	bx	lr

08000a38 <__aeabi_d2iz>:
 8000a38:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a3c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000a40:	d215      	bcs.n	8000a6e <__aeabi_d2iz+0x36>
 8000a42:	d511      	bpl.n	8000a68 <__aeabi_d2iz+0x30>
 8000a44:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000a48:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a4c:	d912      	bls.n	8000a74 <__aeabi_d2iz+0x3c>
 8000a4e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a52:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000a56:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a5a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000a5e:	fa23 f002 	lsr.w	r0, r3, r2
 8000a62:	bf18      	it	ne
 8000a64:	4240      	negne	r0, r0
 8000a66:	4770      	bx	lr
 8000a68:	f04f 0000 	mov.w	r0, #0
 8000a6c:	4770      	bx	lr
 8000a6e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a72:	d105      	bne.n	8000a80 <__aeabi_d2iz+0x48>
 8000a74:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000a78:	bf08      	it	eq
 8000a7a:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000a7e:	4770      	bx	lr
 8000a80:	f04f 0000 	mov.w	r0, #0
 8000a84:	4770      	bx	lr
 8000a86:	bf00      	nop

08000a88 <ES_enc28j60SpiInit>:
 8000a88:	b580      	push	{r7, lr}
 8000a8a:	b082      	sub	sp, #8
 8000a8c:	af00      	add	r7, sp, #0
 8000a8e:	6078      	str	r0, [r7, #4]
 8000a90:	6878      	ldr	r0, [r7, #4]
 8000a92:	f000 fa23 	bl	8000edc <enc28j60_set_spi>
 8000a96:	bf00      	nop
 8000a98:	3708      	adds	r7, #8
 8000a9a:	46bd      	mov	sp, r7
 8000a9c:	bd80      	pop	{r7, pc}

08000a9e <ES_enc28j60Init>:
 8000a9e:	b580      	push	{r7, lr}
 8000aa0:	b084      	sub	sp, #16
 8000aa2:	af00      	add	r7, sp, #0
 8000aa4:	6078      	str	r0, [r7, #4]
 8000aa6:	6878      	ldr	r0, [r7, #4]
 8000aa8:	f000 fc08 	bl	80012bc <enc28j60Init>
 8000aac:	2002      	movs	r0, #2
 8000aae:	f000 fbf4 	bl	800129a <enc28j60clkout>
 8000ab2:	200a      	movs	r0, #10
 8000ab4:	f002 fa86 	bl	8002fc4 <HAL_Delay>
 8000ab8:	2300      	movs	r3, #0
 8000aba:	60fb      	str	r3, [r7, #12]
 8000abc:	e014      	b.n	8000ae8 <ES_enc28j60Init+0x4a>
 8000abe:	f44f 5162 	mov.w	r1, #14464	@ 0x3880
 8000ac2:	2014      	movs	r0, #20
 8000ac4:	f000 fbbd 	bl	8001242 <enc28j60PhyWrite>
 8000ac8:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 8000acc:	f002 fa7a 	bl	8002fc4 <HAL_Delay>
 8000ad0:	f643 1190 	movw	r1, #14736	@ 0x3990
 8000ad4:	2014      	movs	r0, #20
 8000ad6:	f000 fbb4 	bl	8001242 <enc28j60PhyWrite>
 8000ada:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 8000ade:	f002 fa71 	bl	8002fc4 <HAL_Delay>
 8000ae2:	68fb      	ldr	r3, [r7, #12]
 8000ae4:	3301      	adds	r3, #1
 8000ae6:	60fb      	str	r3, [r7, #12]
 8000ae8:	68fb      	ldr	r3, [r7, #12]
 8000aea:	2b02      	cmp	r3, #2
 8000aec:	dde7      	ble.n	8000abe <ES_enc28j60Init+0x20>
 8000aee:	f243 4176 	movw	r1, #13430	@ 0x3476
 8000af2:	2014      	movs	r0, #20
 8000af4:	f000 fba5 	bl	8001242 <enc28j60PhyWrite>
 8000af8:	2064      	movs	r0, #100	@ 0x64
 8000afa:	f002 fa63 	bl	8002fc4 <HAL_Delay>
 8000afe:	bf00      	nop
 8000b00:	3710      	adds	r7, #16
 8000b02:	46bd      	mov	sp, r7
 8000b04:	bd80      	pop	{r7, pc}

08000b06 <ES_enc28j60Revision>:
 8000b06:	b580      	push	{r7, lr}
 8000b08:	af00      	add	r7, sp, #0
 8000b0a:	f000 fc7d 	bl	8001408 <enc28j60getrev>
 8000b0e:	4603      	mov	r3, r0
 8000b10:	4618      	mov	r0, r3
 8000b12:	bd80      	pop	{r7, pc}

08000b14 <ES_enc28j60PacketReceive>:
 8000b14:	b580      	push	{r7, lr}
 8000b16:	b082      	sub	sp, #8
 8000b18:	af00      	add	r7, sp, #0
 8000b1a:	4603      	mov	r3, r0
 8000b1c:	6039      	str	r1, [r7, #0]
 8000b1e:	80fb      	strh	r3, [r7, #6]
 8000b20:	88fb      	ldrh	r3, [r7, #6]
 8000b22:	6839      	ldr	r1, [r7, #0]
 8000b24:	4618      	mov	r0, r3
 8000b26:	f000 fcd1 	bl	80014cc <enc28j60PacketReceive>
 8000b2a:	4603      	mov	r3, r0
 8000b2c:	4618      	mov	r0, r3
 8000b2e:	3708      	adds	r7, #8
 8000b30:	46bd      	mov	sp, r7
 8000b32:	bd80      	pop	{r7, pc}

08000b34 <ES_init_ip_arp_udp_tcp>:
 8000b34:	b580      	push	{r7, lr}
 8000b36:	b084      	sub	sp, #16
 8000b38:	af00      	add	r7, sp, #0
 8000b3a:	60f8      	str	r0, [r7, #12]
 8000b3c:	60b9      	str	r1, [r7, #8]
 8000b3e:	4613      	mov	r3, r2
 8000b40:	80fb      	strh	r3, [r7, #6]
 8000b42:	88fb      	ldrh	r3, [r7, #6]
 8000b44:	461a      	mov	r2, r3
 8000b46:	68b9      	ldr	r1, [r7, #8]
 8000b48:	68f8      	ldr	r0, [r7, #12]
 8000b4a:	f000 fd87 	bl	800165c <init_ip_arp_udp_tcp>
 8000b4e:	bf00      	nop
 8000b50:	3710      	adds	r7, #16
 8000b52:	46bd      	mov	sp, r7
 8000b54:	bd80      	pop	{r7, pc}

08000b56 <ES_packetloop_icmp_tcp>:
 8000b56:	b580      	push	{r7, lr}
 8000b58:	b082      	sub	sp, #8
 8000b5a:	af00      	add	r7, sp, #0
 8000b5c:	6078      	str	r0, [r7, #4]
 8000b5e:	460b      	mov	r3, r1
 8000b60:	807b      	strh	r3, [r7, #2]
 8000b62:	887b      	ldrh	r3, [r7, #2]
 8000b64:	4619      	mov	r1, r3
 8000b66:	6878      	ldr	r0, [r7, #4]
 8000b68:	f001 fa22 	bl	8001fb0 <packetloop_icmp_tcp>
 8000b6c:	4603      	mov	r3, r0
 8000b6e:	4618      	mov	r0, r3
 8000b70:	3708      	adds	r7, #8
 8000b72:	46bd      	mov	sp, r7
 8000b74:	bd80      	pop	{r7, pc}

08000b76 <ES_readMacAddr>:
 8000b76:	b590      	push	{r4, r7, lr}
 8000b78:	b083      	sub	sp, #12
 8000b7a:	af00      	add	r7, sp, #0
 8000b7c:	6078      	str	r0, [r7, #4]
 8000b7e:	687b      	ldr	r3, [r7, #4]
 8000b80:	2b00      	cmp	r3, #0
 8000b82:	d101      	bne.n	8000b88 <ES_readMacAddr+0x12>
 8000b84:	2301      	movs	r3, #1
 8000b86:	e02d      	b.n	8000be4 <ES_readMacAddr+0x6e>
 8000b88:	20e1      	movs	r0, #225	@ 0xe1
 8000b8a:	f000 fac7 	bl	800111c <enc28j60SetBank>
 8000b8e:	20e4      	movs	r0, #228	@ 0xe4
 8000b90:	f000 faea 	bl	8001168 <enc28j60Read>
 8000b94:	4603      	mov	r3, r0
 8000b96:	461a      	mov	r2, r3
 8000b98:	687b      	ldr	r3, [r7, #4]
 8000b9a:	701a      	strb	r2, [r3, #0]
 8000b9c:	687b      	ldr	r3, [r7, #4]
 8000b9e:	1c5c      	adds	r4, r3, #1
 8000ba0:	20e5      	movs	r0, #229	@ 0xe5
 8000ba2:	f000 fae1 	bl	8001168 <enc28j60Read>
 8000ba6:	4603      	mov	r3, r0
 8000ba8:	7023      	strb	r3, [r4, #0]
 8000baa:	687b      	ldr	r3, [r7, #4]
 8000bac:	1c9c      	adds	r4, r3, #2
 8000bae:	20e2      	movs	r0, #226	@ 0xe2
 8000bb0:	f000 fada 	bl	8001168 <enc28j60Read>
 8000bb4:	4603      	mov	r3, r0
 8000bb6:	7023      	strb	r3, [r4, #0]
 8000bb8:	687b      	ldr	r3, [r7, #4]
 8000bba:	1cdc      	adds	r4, r3, #3
 8000bbc:	20e3      	movs	r0, #227	@ 0xe3
 8000bbe:	f000 fad3 	bl	8001168 <enc28j60Read>
 8000bc2:	4603      	mov	r3, r0
 8000bc4:	7023      	strb	r3, [r4, #0]
 8000bc6:	687b      	ldr	r3, [r7, #4]
 8000bc8:	1d1c      	adds	r4, r3, #4
 8000bca:	20e0      	movs	r0, #224	@ 0xe0
 8000bcc:	f000 facc 	bl	8001168 <enc28j60Read>
 8000bd0:	4603      	mov	r3, r0
 8000bd2:	7023      	strb	r3, [r4, #0]
 8000bd4:	687b      	ldr	r3, [r7, #4]
 8000bd6:	1d5c      	adds	r4, r3, #5
 8000bd8:	20e1      	movs	r0, #225	@ 0xe1
 8000bda:	f000 fac5 	bl	8001168 <enc28j60Read>
 8000bde:	4603      	mov	r3, r0
 8000be0:	7023      	strb	r3, [r4, #0]
 8000be2:	2300      	movs	r3, #0
 8000be4:	4618      	mov	r0, r3
 8000be6:	370c      	adds	r7, #12
 8000be8:	46bd      	mov	sp, r7
 8000bea:	bd90      	pop	{r4, r7, pc}

08000bec <_Z7CS_Highv>:
{
	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
}

void CS_High()
{
 8000bec:	b580      	push	{r7, lr}
 8000bee:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 8000bf0:	2201      	movs	r2, #1
 8000bf2:	2101      	movs	r1, #1
 8000bf4:	4802      	ldr	r0, [pc, #8]	@ (8000c00 <_Z7CS_Highv+0x14>)
 8000bf6:	f002 feaf 	bl	8003958 <HAL_GPIO_WritePin>
}
 8000bfa:	bf00      	nop
 8000bfc:	bd80      	pop	{r7, pc}
 8000bfe:	bf00      	nop
 8000c00:	40010c00 	.word	0x40010c00

08000c04 <_Z9RESET_Lowv>:

void RESET_Low()
{
 8000c04:	b580      	push	{r7, lr}
 8000c06:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);
 8000c08:	2200      	movs	r2, #0
 8000c0a:	2101      	movs	r1, #1
 8000c0c:	4802      	ldr	r0, [pc, #8]	@ (8000c18 <_Z9RESET_Lowv+0x14>)
 8000c0e:	f002 fea3 	bl	8003958 <HAL_GPIO_WritePin>
}
 8000c12:	bf00      	nop
 8000c14:	bd80      	pop	{r7, pc}
 8000c16:	bf00      	nop
 8000c18:	40010800 	.word	0x40010800

08000c1c <_Z10RESET_Highv>:

void RESET_High()
{
 8000c1c:	b580      	push	{r7, lr}
 8000c1e:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_SET);
 8000c20:	2201      	movs	r2, #1
 8000c22:	2101      	movs	r1, #1
 8000c24:	4802      	ldr	r0, [pc, #8]	@ (8000c30 <_Z10RESET_Highv+0x14>)
 8000c26:	f002 fe97 	bl	8003958 <HAL_GPIO_WritePin>
}
 8000c2a:	bf00      	nop
 8000c2c:	bd80      	pop	{r7, pc}
 8000c2e:	bf00      	nop
 8000c30:	40010800 	.word	0x40010800

08000c34 <_Z9http200okv>:
static uint8_t buf[BUFFER_SIZE+1] {0};

#define PSTR(s) s

uint16_t http200ok(void)
{
 8000c34:	b580      	push	{r7, lr}
 8000c36:	af00      	add	r7, sp, #0
	return(fill_tcp_data(buf,0,PSTR("HTTP/1.0 200 OK\r\nContent-Type: text/html\r\nPragma: no-cache\r\n\r\n")));
 8000c38:	4a03      	ldr	r2, [pc, #12]	@ (8000c48 <_Z9http200okv+0x14>)
 8000c3a:	2100      	movs	r1, #0
 8000c3c:	4803      	ldr	r0, [pc, #12]	@ (8000c4c <_Z9http200okv+0x18>)
 8000c3e:	f000 ff99 	bl	8001b74 <fill_tcp_data>
 8000c42:	4603      	mov	r3, r0
}
 8000c44:	4618      	mov	r0, r3
 8000c46:	bd80      	pop	{r7, pc}
 8000c48:	08008d7c 	.word	0x08008d7c
 8000c4c:	20000204 	.word	0x20000204

08000c50 <_Z13print_webpagePh>:
uint16_t print_webpage(uint8_t *buf)
{
 8000c50:	b580      	push	{r7, lr}
 8000c52:	b084      	sub	sp, #16
 8000c54:	af00      	add	r7, sp, #0
 8000c56:	6078      	str	r0, [r7, #4]
  uint16_t plen=0;
 8000c58:	2300      	movs	r3, #0
 8000c5a:	81fb      	strh	r3, [r7, #14]
  plen+=http200ok();
 8000c5c:	f7ff ffea 	bl	8000c34 <_Z9http200okv>
 8000c60:	4603      	mov	r3, r0
 8000c62:	461a      	mov	r2, r3
 8000c64:	89fb      	ldrh	r3, [r7, #14]
 8000c66:	4413      	add	r3, r2
 8000c68:	81fb      	strh	r3, [r7, #14]
  plen+=fill_tcp_data(buf,plen,PSTR("<pre>"));
 8000c6a:	89fb      	ldrh	r3, [r7, #14]
 8000c6c:	4a12      	ldr	r2, [pc, #72]	@ (8000cb8 <_Z13print_webpagePh+0x68>)
 8000c6e:	4619      	mov	r1, r3
 8000c70:	6878      	ldr	r0, [r7, #4]
 8000c72:	f000 ff7f 	bl	8001b74 <fill_tcp_data>
 8000c76:	4603      	mov	r3, r0
 8000c78:	461a      	mov	r2, r3
 8000c7a:	89fb      	ldrh	r3, [r7, #14]
 8000c7c:	4413      	add	r3, r2
 8000c7e:	81fb      	strh	r3, [r7, #14]
  plen+=fill_tcp_data(buf,plen,PSTR("Hi!\nYour web server works great."));
 8000c80:	89fb      	ldrh	r3, [r7, #14]
 8000c82:	4a0e      	ldr	r2, [pc, #56]	@ (8000cbc <_Z13print_webpagePh+0x6c>)
 8000c84:	4619      	mov	r1, r3
 8000c86:	6878      	ldr	r0, [r7, #4]
 8000c88:	f000 ff74 	bl	8001b74 <fill_tcp_data>
 8000c8c:	4603      	mov	r3, r0
 8000c8e:	461a      	mov	r2, r3
 8000c90:	89fb      	ldrh	r3, [r7, #14]
 8000c92:	4413      	add	r3, r2
 8000c94:	81fb      	strh	r3, [r7, #14]
  plen+=fill_tcp_data(buf,plen,PSTR("</pre>\n"));
 8000c96:	89fb      	ldrh	r3, [r7, #14]
 8000c98:	4a09      	ldr	r2, [pc, #36]	@ (8000cc0 <_Z13print_webpagePh+0x70>)
 8000c9a:	4619      	mov	r1, r3
 8000c9c:	6878      	ldr	r0, [r7, #4]
 8000c9e:	f000 ff69 	bl	8001b74 <fill_tcp_data>
 8000ca2:	4603      	mov	r3, r0
 8000ca4:	461a      	mov	r2, r3
 8000ca6:	89fb      	ldrh	r3, [r7, #14]
 8000ca8:	4413      	add	r3, r2
 8000caa:	81fb      	strh	r3, [r7, #14]
  return(plen);
 8000cac:	89fb      	ldrh	r3, [r7, #14]
}
 8000cae:	4618      	mov	r0, r3
 8000cb0:	3710      	adds	r7, #16
 8000cb2:	46bd      	mov	sp, r7
 8000cb4:	bd80      	pop	{r7, pc}
 8000cb6:	bf00      	nop
 8000cb8:	08008dbc 	.word	0x08008dbc
 8000cbc:	08008dc4 	.word	0x08008dc4
 8000cc0:	08008de8 	.word	0x08008de8

08000cc4 <ENC28J60_test>:

extern "C" void ENC28J60_test()
{
 8000cc4:	b580      	push	{r7, lr}
 8000cc6:	b084      	sub	sp, #16
 8000cc8:	af00      	add	r7, sp, #0

	fputs("===============\r\n", stdout);
 8000cca:	4b6b      	ldr	r3, [pc, #428]	@ (8000e78 <ENC28J60_test+0x1b4>)
 8000ccc:	681b      	ldr	r3, [r3, #0]
 8000cce:	689b      	ldr	r3, [r3, #8]
 8000cd0:	2211      	movs	r2, #17
 8000cd2:	2101      	movs	r1, #1
 8000cd4:	4869      	ldr	r0, [pc, #420]	@ (8000e7c <ENC28J60_test+0x1b8>)
 8000cd6:	f006 f897 	bl	8006e08 <fwrite>
	fputs("START\r\n",stdout);
 8000cda:	4b67      	ldr	r3, [pc, #412]	@ (8000e78 <ENC28J60_test+0x1b4>)
 8000cdc:	681b      	ldr	r3, [r3, #0]
 8000cde:	689b      	ldr	r3, [r3, #8]
 8000ce0:	2207      	movs	r2, #7
 8000ce2:	2101      	movs	r1, #1
 8000ce4:	4866      	ldr	r0, [pc, #408]	@ (8000e80 <ENC28J60_test+0x1bc>)
 8000ce6:	f006 f88f 	bl	8006e08 <fwrite>

	CS_High();
 8000cea:	f7ff ff7f 	bl	8000bec <_Z7CS_Highv>

	RESET_Low();
 8000cee:	f7ff ff89 	bl	8000c04 <_Z9RESET_Lowv>
	HAL_Delay(1);
 8000cf2:	2001      	movs	r0, #1
 8000cf4:	f002 f966 	bl	8002fc4 <HAL_Delay>
	RESET_High();
 8000cf8:	f7ff ff90 	bl	8000c1c <_Z10RESET_Highv>

	fputs("Setting SPI: ",stdout);
 8000cfc:	4b5e      	ldr	r3, [pc, #376]	@ (8000e78 <ENC28J60_test+0x1b4>)
 8000cfe:	681b      	ldr	r3, [r3, #0]
 8000d00:	689b      	ldr	r3, [r3, #8]
 8000d02:	220d      	movs	r2, #13
 8000d04:	2101      	movs	r1, #1
 8000d06:	485f      	ldr	r0, [pc, #380]	@ (8000e84 <ENC28J60_test+0x1c0>)
 8000d08:	f006 f87e 	bl	8006e08 <fwrite>

	ES_enc28j60SpiInit(&hspi1);
 8000d0c:	485e      	ldr	r0, [pc, #376]	@ (8000e88 <ENC28J60_test+0x1c4>)
 8000d0e:	f7ff febb 	bl	8000a88 <ES_enc28j60SpiInit>
	fputs("OK\r\n",stdout);
 8000d12:	4b59      	ldr	r3, [pc, #356]	@ (8000e78 <ENC28J60_test+0x1b4>)
 8000d14:	681b      	ldr	r3, [r3, #0]
 8000d16:	689b      	ldr	r3, [r3, #8]
 8000d18:	2204      	movs	r2, #4
 8000d1a:	2101      	movs	r1, #1
 8000d1c:	485b      	ldr	r0, [pc, #364]	@ (8000e8c <ENC28J60_test+0x1c8>)
 8000d1e:	f006 f873 	bl	8006e08 <fwrite>


	uint8_t test_macaddr[6]{
 8000d22:	463b      	mov	r3, r7
 8000d24:	2200      	movs	r2, #0
 8000d26:	601a      	str	r2, [r3, #0]
 8000d28:	809a      	strh	r2, [r3, #4]
	};

	fputs("ENC28J60 Init: ",stdout);
 8000d2a:	4b53      	ldr	r3, [pc, #332]	@ (8000e78 <ENC28J60_test+0x1b4>)
 8000d2c:	681b      	ldr	r3, [r3, #0]
 8000d2e:	689b      	ldr	r3, [r3, #8]
 8000d30:	220f      	movs	r2, #15
 8000d32:	2101      	movs	r1, #1
 8000d34:	4856      	ldr	r0, [pc, #344]	@ (8000e90 <ENC28J60_test+0x1cc>)
 8000d36:	f006 f867 	bl	8006e08 <fwrite>
	ES_enc28j60Init(local_mac);
 8000d3a:	4856      	ldr	r0, [pc, #344]	@ (8000e94 <ENC28J60_test+0x1d0>)
 8000d3c:	f7ff feaf 	bl	8000a9e <ES_enc28j60Init>
	fputs("OK\r\n",stdout);
 8000d40:	4b4d      	ldr	r3, [pc, #308]	@ (8000e78 <ENC28J60_test+0x1b4>)
 8000d42:	681b      	ldr	r3, [r3, #0]
 8000d44:	689b      	ldr	r3, [r3, #8]
 8000d46:	2204      	movs	r2, #4
 8000d48:	2101      	movs	r1, #1
 8000d4a:	4850      	ldr	r0, [pc, #320]	@ (8000e8c <ENC28J60_test+0x1c8>)
 8000d4c:	f006 f85c 	bl	8006e08 <fwrite>

	fputs("MAC addr is now: ", stdout);
 8000d50:	4b49      	ldr	r3, [pc, #292]	@ (8000e78 <ENC28J60_test+0x1b4>)
 8000d52:	681b      	ldr	r3, [r3, #0]
 8000d54:	689b      	ldr	r3, [r3, #8]
 8000d56:	2211      	movs	r2, #17
 8000d58:	2101      	movs	r1, #1
 8000d5a:	484f      	ldr	r0, [pc, #316]	@ (8000e98 <ENC28J60_test+0x1d4>)
 8000d5c:	f006 f854 	bl	8006e08 <fwrite>
	ES_readMacAddr((char*)test_macaddr);
 8000d60:	463b      	mov	r3, r7
 8000d62:	4618      	mov	r0, r3
 8000d64:	f7ff ff07 	bl	8000b76 <ES_readMacAddr>
	for(int i =0; i<6; ++i)
 8000d68:	2300      	movs	r3, #0
 8000d6a:	60fb      	str	r3, [r7, #12]
 8000d6c:	e00a      	b.n	8000d84 <ENC28J60_test+0xc0>
	{
		printf("0x%x:", test_macaddr[i]);
 8000d6e:	463a      	mov	r2, r7
 8000d70:	68fb      	ldr	r3, [r7, #12]
 8000d72:	4413      	add	r3, r2
 8000d74:	781b      	ldrb	r3, [r3, #0]
 8000d76:	4619      	mov	r1, r3
 8000d78:	4848      	ldr	r0, [pc, #288]	@ (8000e9c <ENC28J60_test+0x1d8>)
 8000d7a:	f006 f8b5 	bl	8006ee8 <iprintf>
	for(int i =0; i<6; ++i)
 8000d7e:	68fb      	ldr	r3, [r7, #12]
 8000d80:	3301      	adds	r3, #1
 8000d82:	60fb      	str	r3, [r7, #12]
 8000d84:	68fb      	ldr	r3, [r7, #12]
 8000d86:	2b05      	cmp	r3, #5
 8000d88:	ddf1      	ble.n	8000d6e <ENC28J60_test+0xaa>
	}
	fputs("\r\n",stdout);
 8000d8a:	4b3b      	ldr	r3, [pc, #236]	@ (8000e78 <ENC28J60_test+0x1b4>)
 8000d8c:	681b      	ldr	r3, [r3, #0]
 8000d8e:	689b      	ldr	r3, [r3, #8]
 8000d90:	2202      	movs	r2, #2
 8000d92:	2101      	movs	r1, #1
 8000d94:	4842      	ldr	r0, [pc, #264]	@ (8000ea0 <ENC28J60_test+0x1dc>)
 8000d96:	f006 f837 	bl	8006e08 <fwrite>




	uint8_t enc28j60_rev = ES_enc28j60Revision();
 8000d9a:	f7ff feb4 	bl	8000b06 <ES_enc28j60Revision>
 8000d9e:	4603      	mov	r3, r0
 8000da0:	727b      	strb	r3, [r7, #9]
	printf("Revision: ");
 8000da2:	4840      	ldr	r0, [pc, #256]	@ (8000ea4 <ENC28J60_test+0x1e0>)
 8000da4:	f006 f8a0 	bl	8006ee8 <iprintf>
	if (enc28j60_rev <= 0)
 8000da8:	7a7b      	ldrb	r3, [r7, #9]
 8000daa:	2b00      	cmp	r3, #0
 8000dac:	d105      	bne.n	8000dba <ENC28J60_test+0xf6>
	{
		printf("error\r\n");
 8000dae:	483e      	ldr	r0, [pc, #248]	@ (8000ea8 <ENC28J60_test+0x1e4>)
 8000db0:	f006 f902 	bl	8006fb8 <puts>
		exit(EXIT_FAILURE);
 8000db4:	2001      	movs	r0, #1
 8000db6:	f005 f943 	bl	8006040 <exit>
	}

	printf("%i\r\n", enc28j60_rev);
 8000dba:	7a7b      	ldrb	r3, [r7, #9]
 8000dbc:	4619      	mov	r1, r3
 8000dbe:	483b      	ldr	r0, [pc, #236]	@ (8000eac <ENC28J60_test+0x1e8>)
 8000dc0:	f006 f892 	bl	8006ee8 <iprintf>
	printf("INIT arp udp tcp: ");
 8000dc4:	483a      	ldr	r0, [pc, #232]	@ (8000eb0 <ENC28J60_test+0x1ec>)
 8000dc6:	f006 f88f 	bl	8006ee8 <iprintf>
	ES_init_ip_arp_udp_tcp(local_mac, local_ip, 80);
 8000dca:	2250      	movs	r2, #80	@ 0x50
 8000dcc:	4939      	ldr	r1, [pc, #228]	@ (8000eb4 <ENC28J60_test+0x1f0>)
 8000dce:	4831      	ldr	r0, [pc, #196]	@ (8000e94 <ENC28J60_test+0x1d0>)
 8000dd0:	f7ff feb0 	bl	8000b34 <ES_init_ip_arp_udp_tcp>
	printf("OK\r\n");
 8000dd4:	4838      	ldr	r0, [pc, #224]	@ (8000eb8 <ENC28J60_test+0x1f4>)
 8000dd6:	f006 f8ef 	bl	8006fb8 <puts>
	while(1)
	{

  /* USER CODE END WHILE */
		// read packet, handle ping and wait for a tcp packet:
		dat_p=ES_packetloop_icmp_tcp(buf, ES_enc28j60PacketReceive(BUFFER_SIZE, buf));
 8000dda:	4938      	ldr	r1, [pc, #224]	@ (8000ebc <ENC28J60_test+0x1f8>)
 8000ddc:	f240 2026 	movw	r0, #550	@ 0x226
 8000de0:	f7ff fe98 	bl	8000b14 <ES_enc28j60PacketReceive>
 8000de4:	4603      	mov	r3, r0
 8000de6:	4619      	mov	r1, r3
 8000de8:	4834      	ldr	r0, [pc, #208]	@ (8000ebc <ENC28J60_test+0x1f8>)
 8000dea:	f7ff feb4 	bl	8000b56 <ES_packetloop_icmp_tcp>
 8000dee:	4603      	mov	r3, r0
 8000df0:	817b      	strh	r3, [r7, #10]
		//plen=enc28j60PacketReceive(BUFFER_SIZE, buf);

		if(dat_p==0)
 8000df2:	897b      	ldrh	r3, [r7, #10]
 8000df4:	2b00      	cmp	r3, #0
 8000df6:	d03c      	beq.n	8000e72 <ENC28J60_test+0x1ae>
		//{
		//	printf("%c\r\n", buf[i]);
		//}

		// just one web page in the "root directory" of the web server
		if (strncmp("/ ",(char *)&(buf[TCP_CHECKSUM_L_P+3+4]),2)==0){
 8000df8:	2202      	movs	r2, #2
 8000dfa:	4931      	ldr	r1, [pc, #196]	@ (8000ec0 <ENC28J60_test+0x1fc>)
 8000dfc:	4831      	ldr	r0, [pc, #196]	@ (8000ec4 <ENC28J60_test+0x200>)
 8000dfe:	f006 f8fb 	bl	8006ff8 <strncmp>
 8000e02:	4603      	mov	r3, r0
 8000e04:	2b00      	cmp	r3, #0
 8000e06:	d108      	bne.n	8000e1a <ENC28J60_test+0x156>

			printf("GET /\r\n");
 8000e08:	482f      	ldr	r0, [pc, #188]	@ (8000ec8 <ENC28J60_test+0x204>)
 8000e0a:	f006 f8d5 	bl	8006fb8 <puts>
			dat_p=print_webpage(buf);
 8000e0e:	482b      	ldr	r0, [pc, #172]	@ (8000ebc <ENC28J60_test+0x1f8>)
 8000e10:	f7ff ff1e 	bl	8000c50 <_Z13print_webpagePh>
 8000e14:	4603      	mov	r3, r0
 8000e16:	817b      	strh	r3, [r7, #10]
			//printf("str: %s\r\n", &buf[TCP_CHECKSUM_L_P+3]);
			goto SENDTCP;
 8000e18:	e025      	b.n	8000e66 <ENC28J60_test+0x1a2>
		}

		// tcp port 80 begin
		if (strncmp("GET ",(char *)&(buf[dat_p]),4)==0)
 8000e1a:	897b      	ldrh	r3, [r7, #10]
 8000e1c:	4a27      	ldr	r2, [pc, #156]	@ (8000ebc <ENC28J60_test+0x1f8>)
 8000e1e:	4413      	add	r3, r2
 8000e20:	2204      	movs	r2, #4
 8000e22:	4619      	mov	r1, r3
 8000e24:	4829      	ldr	r0, [pc, #164]	@ (8000ecc <ENC28J60_test+0x208>)
 8000e26:	f006 f8e7 	bl	8006ff8 <strncmp>
 8000e2a:	4603      	mov	r3, r0
 8000e2c:	2b00      	cmp	r3, #0
 8000e2e:	d112      	bne.n	8000e56 <ENC28J60_test+0x192>
		{
			printf("GET\r\n");
 8000e30:	4827      	ldr	r0, [pc, #156]	@ (8000ed0 <ENC28J60_test+0x20c>)
 8000e32:	f006 f8c1 	bl	8006fb8 <puts>
		//	// head, post and other methods:
			dat_p=http200ok();
 8000e36:	f7ff fefd 	bl	8000c34 <_Z9http200okv>
 8000e3a:	4603      	mov	r3, r0
 8000e3c:	817b      	strh	r3, [r7, #10]
			dat_p+=fill_tcp_data(buf,dat_p,PSTR("<h1>200 OK</h1>"));
 8000e3e:	897b      	ldrh	r3, [r7, #10]
 8000e40:	4a24      	ldr	r2, [pc, #144]	@ (8000ed4 <ENC28J60_test+0x210>)
 8000e42:	4619      	mov	r1, r3
 8000e44:	481d      	ldr	r0, [pc, #116]	@ (8000ebc <ENC28J60_test+0x1f8>)
 8000e46:	f000 fe95 	bl	8001b74 <fill_tcp_data>
 8000e4a:	4603      	mov	r3, r0
 8000e4c:	461a      	mov	r2, r3
 8000e4e:	897b      	ldrh	r3, [r7, #10]
 8000e50:	4413      	add	r3, r2
 8000e52:	817b      	strh	r3, [r7, #10]
			//printf("%str: %s", &buf[TCP_CHECKSUM_L_P+3]);
			goto SENDTCP;
 8000e54:	e007      	b.n	8000e66 <ENC28J60_test+0x1a2>
		}


		dat_p=fill_tcp_data(buf,0,PSTR("HTTP/1.0 401 Unauthorized\r\nContent-Type: text/html\r\n\r\n<h1>401 Unauthorized</h1>"));
 8000e56:	4a20      	ldr	r2, [pc, #128]	@ (8000ed8 <ENC28J60_test+0x214>)
 8000e58:	2100      	movs	r1, #0
 8000e5a:	4818      	ldr	r0, [pc, #96]	@ (8000ebc <ENC28J60_test+0x1f8>)
 8000e5c:	f000 fe8a 	bl	8001b74 <fill_tcp_data>
 8000e60:	4603      	mov	r3, r0
 8000e62:	817b      	strh	r3, [r7, #10]
		goto SENDTCP;
 8000e64:	bf00      	nop

SENDTCP:

		www_server_reply(buf,dat_p);
 8000e66:	897b      	ldrh	r3, [r7, #10]
 8000e68:	4619      	mov	r1, r3
 8000e6a:	4814      	ldr	r0, [pc, #80]	@ (8000ebc <ENC28J60_test+0x1f8>)
 8000e6c:	f000 ff3a 	bl	8001ce4 <www_server_reply>
 8000e70:	e7b3      	b.n	8000dda <ENC28J60_test+0x116>
			continue;
 8000e72:	bf00      	nop
		dat_p=ES_packetloop_icmp_tcp(buf, ES_enc28j60PacketReceive(BUFFER_SIZE, buf));
 8000e74:	e7b1      	b.n	8000dda <ENC28J60_test+0x116>
 8000e76:	bf00      	nop
 8000e78:	2000002c 	.word	0x2000002c
 8000e7c:	08008df0 	.word	0x08008df0
 8000e80:	08008e04 	.word	0x08008e04
 8000e84:	08008e0c 	.word	0x08008e0c
 8000e88:	20000470 	.word	0x20000470
 8000e8c:	08008e1c 	.word	0x08008e1c
 8000e90:	08008e24 	.word	0x08008e24
 8000e94:	20000000 	.word	0x20000000
 8000e98:	08008e34 	.word	0x08008e34
 8000e9c:	08008e48 	.word	0x08008e48
 8000ea0:	08008e50 	.word	0x08008e50
 8000ea4:	08008e54 	.word	0x08008e54
 8000ea8:	08008e60 	.word	0x08008e60
 8000eac:	08008e68 	.word	0x08008e68
 8000eb0:	08008e70 	.word	0x08008e70
 8000eb4:	20000008 	.word	0x20000008
 8000eb8:	08008e84 	.word	0x08008e84
 8000ebc:	20000204 	.word	0x20000204
 8000ec0:	2000023e 	.word	0x2000023e
 8000ec4:	08008e88 	.word	0x08008e88
 8000ec8:	08008e8c 	.word	0x08008e8c
 8000ecc:	08008e94 	.word	0x08008e94
 8000ed0:	08008e9c 	.word	0x08008e9c
 8000ed4:	08008ea4 	.word	0x08008ea4
 8000ed8:	08008eb4 	.word	0x08008eb4

08000edc <enc28j60_set_spi>:
 8000edc:	b480      	push	{r7}
 8000ede:	b083      	sub	sp, #12
 8000ee0:	af00      	add	r7, sp, #0
 8000ee2:	6078      	str	r0, [r7, #4]
 8000ee4:	4a03      	ldr	r2, [pc, #12]	@ (8000ef4 <enc28j60_set_spi+0x18>)
 8000ee6:	687b      	ldr	r3, [r7, #4]
 8000ee8:	6013      	str	r3, [r2, #0]
 8000eea:	bf00      	nop
 8000eec:	370c      	adds	r7, #12
 8000eee:	46bd      	mov	sp, r7
 8000ef0:	bc80      	pop	{r7}
 8000ef2:	4770      	bx	lr
 8000ef4:	20000430 	.word	0x20000430

08000ef8 <ENC28J60_SendByte>:
 8000ef8:	b580      	push	{r7, lr}
 8000efa:	b086      	sub	sp, #24
 8000efc:	af02      	add	r7, sp, #8
 8000efe:	4603      	mov	r3, r0
 8000f00:	71fb      	strb	r3, [r7, #7]
 8000f02:	4b10      	ldr	r3, [pc, #64]	@ (8000f44 <ENC28J60_SendByte+0x4c>)
 8000f04:	681b      	ldr	r3, [r3, #0]
 8000f06:	2b00      	cmp	r3, #0
 8000f08:	d101      	bne.n	8000f0e <ENC28J60_SendByte+0x16>
 8000f0a:	2300      	movs	r3, #0
 8000f0c:	e015      	b.n	8000f3a <ENC28J60_SendByte+0x42>
 8000f0e:	2300      	movs	r3, #0
 8000f10:	72fb      	strb	r3, [r7, #11]
 8000f12:	4b0c      	ldr	r3, [pc, #48]	@ (8000f44 <ENC28J60_SendByte+0x4c>)
 8000f14:	6818      	ldr	r0, [r3, #0]
 8000f16:	f107 020b 	add.w	r2, r7, #11
 8000f1a:	1df9      	adds	r1, r7, #7
 8000f1c:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8000f20:	9300      	str	r3, [sp, #0]
 8000f22:	2301      	movs	r3, #1
 8000f24:	f003 f9e6 	bl	80042f4 <HAL_SPI_TransmitReceive>
 8000f28:	4603      	mov	r3, r0
 8000f2a:	60fb      	str	r3, [r7, #12]
 8000f2c:	68fb      	ldr	r3, [r7, #12]
 8000f2e:	2b00      	cmp	r3, #0
 8000f30:	d002      	beq.n	8000f38 <ENC28J60_SendByte+0x40>
 8000f32:	2000      	movs	r0, #0
 8000f34:	f000 fb2a 	bl	800158c <ENC28j60_Error_Handler>
 8000f38:	7afb      	ldrb	r3, [r7, #11]
 8000f3a:	4618      	mov	r0, r3
 8000f3c:	3710      	adds	r7, #16
 8000f3e:	46bd      	mov	sp, r7
 8000f40:	bd80      	pop	{r7, pc}
 8000f42:	bf00      	nop
 8000f44:	20000430 	.word	0x20000430

08000f48 <enc28j60ReadOp>:
 8000f48:	b580      	push	{r7, lr}
 8000f4a:	b084      	sub	sp, #16
 8000f4c:	af00      	add	r7, sp, #0
 8000f4e:	4603      	mov	r3, r0
 8000f50:	460a      	mov	r2, r1
 8000f52:	71fb      	strb	r3, [r7, #7]
 8000f54:	4613      	mov	r3, r2
 8000f56:	71bb      	strb	r3, [r7, #6]
 8000f58:	4b19      	ldr	r3, [pc, #100]	@ (8000fc0 <enc28j60ReadOp+0x78>)
 8000f5a:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 8000f5e:	611a      	str	r2, [r3, #16]
 8000f60:	4b18      	ldr	r3, [pc, #96]	@ (8000fc4 <enc28j60ReadOp+0x7c>)
 8000f62:	2210      	movs	r2, #16
 8000f64:	611a      	str	r2, [r3, #16]
 8000f66:	2001      	movs	r0, #1
 8000f68:	f002 f82c 	bl	8002fc4 <HAL_Delay>
 8000f6c:	f997 3006 	ldrsb.w	r3, [r7, #6]
 8000f70:	f003 031f 	and.w	r3, r3, #31
 8000f74:	b25a      	sxtb	r2, r3
 8000f76:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000f7a:	4313      	orrs	r3, r2
 8000f7c:	b25b      	sxtb	r3, r3
 8000f7e:	b2db      	uxtb	r3, r3
 8000f80:	4618      	mov	r0, r3
 8000f82:	f7ff ffb9 	bl	8000ef8 <ENC28J60_SendByte>
 8000f86:	20ff      	movs	r0, #255	@ 0xff
 8000f88:	f7ff ffb6 	bl	8000ef8 <ENC28J60_SendByte>
 8000f8c:	4603      	mov	r3, r0
 8000f8e:	73fb      	strb	r3, [r7, #15]
 8000f90:	f997 3006 	ldrsb.w	r3, [r7, #6]
 8000f94:	2b00      	cmp	r3, #0
 8000f96:	da04      	bge.n	8000fa2 <enc28j60ReadOp+0x5a>
 8000f98:	20ff      	movs	r0, #255	@ 0xff
 8000f9a:	f7ff ffad 	bl	8000ef8 <ENC28J60_SendByte>
 8000f9e:	4603      	mov	r3, r0
 8000fa0:	73fb      	strb	r3, [r7, #15]
 8000fa2:	4b07      	ldr	r3, [pc, #28]	@ (8000fc0 <enc28j60ReadOp+0x78>)
 8000fa4:	2201      	movs	r2, #1
 8000fa6:	611a      	str	r2, [r3, #16]
 8000fa8:	4b06      	ldr	r3, [pc, #24]	@ (8000fc4 <enc28j60ReadOp+0x7c>)
 8000faa:	f44f 1280 	mov.w	r2, #1048576	@ 0x100000
 8000fae:	611a      	str	r2, [r3, #16]
 8000fb0:	2001      	movs	r0, #1
 8000fb2:	f002 f807 	bl	8002fc4 <HAL_Delay>
 8000fb6:	7bfb      	ldrb	r3, [r7, #15]
 8000fb8:	4618      	mov	r0, r3
 8000fba:	3710      	adds	r7, #16
 8000fbc:	46bd      	mov	sp, r7
 8000fbe:	bd80      	pop	{r7, pc}
 8000fc0:	40010c00 	.word	0x40010c00
 8000fc4:	40010800 	.word	0x40010800

08000fc8 <enc28j60WriteOp>:
 8000fc8:	b580      	push	{r7, lr}
 8000fca:	b082      	sub	sp, #8
 8000fcc:	af00      	add	r7, sp, #0
 8000fce:	4603      	mov	r3, r0
 8000fd0:	71fb      	strb	r3, [r7, #7]
 8000fd2:	460b      	mov	r3, r1
 8000fd4:	71bb      	strb	r3, [r7, #6]
 8000fd6:	4613      	mov	r3, r2
 8000fd8:	717b      	strb	r3, [r7, #5]
 8000fda:	4b14      	ldr	r3, [pc, #80]	@ (800102c <enc28j60WriteOp+0x64>)
 8000fdc:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 8000fe0:	611a      	str	r2, [r3, #16]
 8000fe2:	4b13      	ldr	r3, [pc, #76]	@ (8001030 <enc28j60WriteOp+0x68>)
 8000fe4:	2210      	movs	r2, #16
 8000fe6:	611a      	str	r2, [r3, #16]
 8000fe8:	2001      	movs	r0, #1
 8000fea:	f001 ffeb 	bl	8002fc4 <HAL_Delay>
 8000fee:	f997 3006 	ldrsb.w	r3, [r7, #6]
 8000ff2:	f003 031f 	and.w	r3, r3, #31
 8000ff6:	b25a      	sxtb	r2, r3
 8000ff8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000ffc:	4313      	orrs	r3, r2
 8000ffe:	b25b      	sxtb	r3, r3
 8001000:	b2db      	uxtb	r3, r3
 8001002:	4618      	mov	r0, r3
 8001004:	f7ff ff78 	bl	8000ef8 <ENC28J60_SendByte>
 8001008:	797b      	ldrb	r3, [r7, #5]
 800100a:	4618      	mov	r0, r3
 800100c:	f7ff ff74 	bl	8000ef8 <ENC28J60_SendByte>
 8001010:	4b06      	ldr	r3, [pc, #24]	@ (800102c <enc28j60WriteOp+0x64>)
 8001012:	2201      	movs	r2, #1
 8001014:	611a      	str	r2, [r3, #16]
 8001016:	4b06      	ldr	r3, [pc, #24]	@ (8001030 <enc28j60WriteOp+0x68>)
 8001018:	f44f 1280 	mov.w	r2, #1048576	@ 0x100000
 800101c:	611a      	str	r2, [r3, #16]
 800101e:	2001      	movs	r0, #1
 8001020:	f001 ffd0 	bl	8002fc4 <HAL_Delay>
 8001024:	bf00      	nop
 8001026:	3708      	adds	r7, #8
 8001028:	46bd      	mov	sp, r7
 800102a:	bd80      	pop	{r7, pc}
 800102c:	40010c00 	.word	0x40010c00
 8001030:	40010800 	.word	0x40010800

08001034 <enc28j60ReadBuffer>:
 8001034:	b590      	push	{r4, r7, lr}
 8001036:	b083      	sub	sp, #12
 8001038:	af00      	add	r7, sp, #0
 800103a:	4603      	mov	r3, r0
 800103c:	6039      	str	r1, [r7, #0]
 800103e:	80fb      	strh	r3, [r7, #6]
 8001040:	4b14      	ldr	r3, [pc, #80]	@ (8001094 <enc28j60ReadBuffer+0x60>)
 8001042:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 8001046:	611a      	str	r2, [r3, #16]
 8001048:	4b13      	ldr	r3, [pc, #76]	@ (8001098 <enc28j60ReadBuffer+0x64>)
 800104a:	2210      	movs	r2, #16
 800104c:	611a      	str	r2, [r3, #16]
 800104e:	2001      	movs	r0, #1
 8001050:	f001 ffb8 	bl	8002fc4 <HAL_Delay>
 8001054:	203a      	movs	r0, #58	@ 0x3a
 8001056:	f7ff ff4f 	bl	8000ef8 <ENC28J60_SendByte>
 800105a:	e007      	b.n	800106c <enc28j60ReadBuffer+0x38>
 800105c:	683c      	ldr	r4, [r7, #0]
 800105e:	1c63      	adds	r3, r4, #1
 8001060:	603b      	str	r3, [r7, #0]
 8001062:	2000      	movs	r0, #0
 8001064:	f7ff ff48 	bl	8000ef8 <ENC28J60_SendByte>
 8001068:	4603      	mov	r3, r0
 800106a:	7023      	strb	r3, [r4, #0]
 800106c:	88fb      	ldrh	r3, [r7, #6]
 800106e:	1e5a      	subs	r2, r3, #1
 8001070:	80fa      	strh	r2, [r7, #6]
 8001072:	2b00      	cmp	r3, #0
 8001074:	d1f2      	bne.n	800105c <enc28j60ReadBuffer+0x28>
 8001076:	4b07      	ldr	r3, [pc, #28]	@ (8001094 <enc28j60ReadBuffer+0x60>)
 8001078:	2201      	movs	r2, #1
 800107a:	611a      	str	r2, [r3, #16]
 800107c:	4b06      	ldr	r3, [pc, #24]	@ (8001098 <enc28j60ReadBuffer+0x64>)
 800107e:	f44f 1280 	mov.w	r2, #1048576	@ 0x100000
 8001082:	611a      	str	r2, [r3, #16]
 8001084:	2001      	movs	r0, #1
 8001086:	f001 ff9d 	bl	8002fc4 <HAL_Delay>
 800108a:	bf00      	nop
 800108c:	370c      	adds	r7, #12
 800108e:	46bd      	mov	sp, r7
 8001090:	bd90      	pop	{r4, r7, pc}
 8001092:	bf00      	nop
 8001094:	40010c00 	.word	0x40010c00
 8001098:	40010800 	.word	0x40010800

0800109c <enc28j60ReadBufferWord>:
 800109c:	b580      	push	{r7, lr}
 800109e:	b082      	sub	sp, #8
 80010a0:	af00      	add	r7, sp, #0
 80010a2:	1dbb      	adds	r3, r7, #6
 80010a4:	4619      	mov	r1, r3
 80010a6:	2002      	movs	r0, #2
 80010a8:	f7ff ffc4 	bl	8001034 <enc28j60ReadBuffer>
 80010ac:	88fb      	ldrh	r3, [r7, #6]
 80010ae:	4618      	mov	r0, r3
 80010b0:	3708      	adds	r7, #8
 80010b2:	46bd      	mov	sp, r7
 80010b4:	bd80      	pop	{r7, pc}
	...

080010b8 <enc28j60WriteBuffer>:
 80010b8:	b580      	push	{r7, lr}
 80010ba:	b082      	sub	sp, #8
 80010bc:	af00      	add	r7, sp, #0
 80010be:	4603      	mov	r3, r0
 80010c0:	6039      	str	r1, [r7, #0]
 80010c2:	80fb      	strh	r3, [r7, #6]
 80010c4:	4b13      	ldr	r3, [pc, #76]	@ (8001114 <enc28j60WriteBuffer+0x5c>)
 80010c6:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 80010ca:	611a      	str	r2, [r3, #16]
 80010cc:	4b12      	ldr	r3, [pc, #72]	@ (8001118 <enc28j60WriteBuffer+0x60>)
 80010ce:	2210      	movs	r2, #16
 80010d0:	611a      	str	r2, [r3, #16]
 80010d2:	2001      	movs	r0, #1
 80010d4:	f001 ff76 	bl	8002fc4 <HAL_Delay>
 80010d8:	207a      	movs	r0, #122	@ 0x7a
 80010da:	f7ff ff0d 	bl	8000ef8 <ENC28J60_SendByte>
 80010de:	e006      	b.n	80010ee <enc28j60WriteBuffer+0x36>
 80010e0:	683b      	ldr	r3, [r7, #0]
 80010e2:	1c5a      	adds	r2, r3, #1
 80010e4:	603a      	str	r2, [r7, #0]
 80010e6:	781b      	ldrb	r3, [r3, #0]
 80010e8:	4618      	mov	r0, r3
 80010ea:	f7ff ff05 	bl	8000ef8 <ENC28J60_SendByte>
 80010ee:	88fb      	ldrh	r3, [r7, #6]
 80010f0:	1e5a      	subs	r2, r3, #1
 80010f2:	80fa      	strh	r2, [r7, #6]
 80010f4:	2b00      	cmp	r3, #0
 80010f6:	d1f3      	bne.n	80010e0 <enc28j60WriteBuffer+0x28>
 80010f8:	4b06      	ldr	r3, [pc, #24]	@ (8001114 <enc28j60WriteBuffer+0x5c>)
 80010fa:	2201      	movs	r2, #1
 80010fc:	611a      	str	r2, [r3, #16]
 80010fe:	4b06      	ldr	r3, [pc, #24]	@ (8001118 <enc28j60WriteBuffer+0x60>)
 8001100:	f44f 1280 	mov.w	r2, #1048576	@ 0x100000
 8001104:	611a      	str	r2, [r3, #16]
 8001106:	2001      	movs	r0, #1
 8001108:	f001 ff5c 	bl	8002fc4 <HAL_Delay>
 800110c:	bf00      	nop
 800110e:	3708      	adds	r7, #8
 8001110:	46bd      	mov	sp, r7
 8001112:	bd80      	pop	{r7, pc}
 8001114:	40010c00 	.word	0x40010c00
 8001118:	40010800 	.word	0x40010800

0800111c <enc28j60SetBank>:
 800111c:	b580      	push	{r7, lr}
 800111e:	b082      	sub	sp, #8
 8001120:	af00      	add	r7, sp, #0
 8001122:	4603      	mov	r3, r0
 8001124:	71fb      	strb	r3, [r7, #7]
 8001126:	79fb      	ldrb	r3, [r7, #7]
 8001128:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800112c:	4a0d      	ldr	r2, [pc, #52]	@ (8001164 <enc28j60SetBank+0x48>)
 800112e:	7812      	ldrb	r2, [r2, #0]
 8001130:	4293      	cmp	r3, r2
 8001132:	d013      	beq.n	800115c <enc28j60SetBank+0x40>
 8001134:	2203      	movs	r2, #3
 8001136:	211f      	movs	r1, #31
 8001138:	20a0      	movs	r0, #160	@ 0xa0
 800113a:	f7ff ff45 	bl	8000fc8 <enc28j60WriteOp>
 800113e:	79fb      	ldrb	r3, [r7, #7]
 8001140:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8001144:	b2da      	uxtb	r2, r3
 8001146:	4b07      	ldr	r3, [pc, #28]	@ (8001164 <enc28j60SetBank+0x48>)
 8001148:	701a      	strb	r2, [r3, #0]
 800114a:	4b06      	ldr	r3, [pc, #24]	@ (8001164 <enc28j60SetBank+0x48>)
 800114c:	781b      	ldrb	r3, [r3, #0]
 800114e:	095b      	lsrs	r3, r3, #5
 8001150:	b2db      	uxtb	r3, r3
 8001152:	461a      	mov	r2, r3
 8001154:	211f      	movs	r1, #31
 8001156:	2080      	movs	r0, #128	@ 0x80
 8001158:	f7ff ff36 	bl	8000fc8 <enc28j60WriteOp>
 800115c:	bf00      	nop
 800115e:	3708      	adds	r7, #8
 8001160:	46bd      	mov	sp, r7
 8001162:	bd80      	pop	{r7, pc}
 8001164:	2000042b 	.word	0x2000042b

08001168 <enc28j60Read>:
 8001168:	b580      	push	{r7, lr}
 800116a:	b082      	sub	sp, #8
 800116c:	af00      	add	r7, sp, #0
 800116e:	4603      	mov	r3, r0
 8001170:	71fb      	strb	r3, [r7, #7]
 8001172:	79fb      	ldrb	r3, [r7, #7]
 8001174:	4618      	mov	r0, r3
 8001176:	f7ff ffd1 	bl	800111c <enc28j60SetBank>
 800117a:	79fb      	ldrb	r3, [r7, #7]
 800117c:	4619      	mov	r1, r3
 800117e:	2000      	movs	r0, #0
 8001180:	f7ff fee2 	bl	8000f48 <enc28j60ReadOp>
 8001184:	4603      	mov	r3, r0
 8001186:	4618      	mov	r0, r3
 8001188:	3708      	adds	r7, #8
 800118a:	46bd      	mov	sp, r7
 800118c:	bd80      	pop	{r7, pc}

0800118e <enc28j60WriteWord>:
 800118e:	b580      	push	{r7, lr}
 8001190:	b082      	sub	sp, #8
 8001192:	af00      	add	r7, sp, #0
 8001194:	4603      	mov	r3, r0
 8001196:	460a      	mov	r2, r1
 8001198:	71fb      	strb	r3, [r7, #7]
 800119a:	4613      	mov	r3, r2
 800119c:	80bb      	strh	r3, [r7, #4]
 800119e:	88bb      	ldrh	r3, [r7, #4]
 80011a0:	b2da      	uxtb	r2, r3
 80011a2:	79fb      	ldrb	r3, [r7, #7]
 80011a4:	4611      	mov	r1, r2
 80011a6:	4618      	mov	r0, r3
 80011a8:	f000 f835 	bl	8001216 <enc28j60Write>
 80011ac:	79fb      	ldrb	r3, [r7, #7]
 80011ae:	3301      	adds	r3, #1
 80011b0:	b2da      	uxtb	r2, r3
 80011b2:	88bb      	ldrh	r3, [r7, #4]
 80011b4:	0a1b      	lsrs	r3, r3, #8
 80011b6:	b29b      	uxth	r3, r3
 80011b8:	b2db      	uxtb	r3, r3
 80011ba:	4619      	mov	r1, r3
 80011bc:	4610      	mov	r0, r2
 80011be:	f000 f82a 	bl	8001216 <enc28j60Write>
 80011c2:	bf00      	nop
 80011c4:	3708      	adds	r7, #8
 80011c6:	46bd      	mov	sp, r7
 80011c8:	bd80      	pop	{r7, pc}

080011ca <enc28j60PhyReadH>:
 80011ca:	b580      	push	{r7, lr}
 80011cc:	b082      	sub	sp, #8
 80011ce:	af00      	add	r7, sp, #0
 80011d0:	4603      	mov	r3, r0
 80011d2:	71fb      	strb	r3, [r7, #7]
 80011d4:	79fb      	ldrb	r3, [r7, #7]
 80011d6:	4619      	mov	r1, r3
 80011d8:	20d4      	movs	r0, #212	@ 0xd4
 80011da:	f000 f81c 	bl	8001216 <enc28j60Write>
 80011de:	2101      	movs	r1, #1
 80011e0:	20d2      	movs	r0, #210	@ 0xd2
 80011e2:	f000 f818 	bl	8001216 <enc28j60Write>
 80011e6:	200f      	movs	r0, #15
 80011e8:	f001 feec 	bl	8002fc4 <HAL_Delay>
 80011ec:	bf00      	nop
 80011ee:	20ea      	movs	r0, #234	@ 0xea
 80011f0:	f7ff ffba 	bl	8001168 <enc28j60Read>
 80011f4:	4603      	mov	r3, r0
 80011f6:	f003 0301 	and.w	r3, r3, #1
 80011fa:	2b00      	cmp	r3, #0
 80011fc:	d1f7      	bne.n	80011ee <enc28j60PhyReadH+0x24>
 80011fe:	2100      	movs	r1, #0
 8001200:	20d2      	movs	r0, #210	@ 0xd2
 8001202:	f000 f808 	bl	8001216 <enc28j60Write>
 8001206:	20d9      	movs	r0, #217	@ 0xd9
 8001208:	f7ff ffae 	bl	8001168 <enc28j60Read>
 800120c:	4603      	mov	r3, r0
 800120e:	4618      	mov	r0, r3
 8001210:	3708      	adds	r7, #8
 8001212:	46bd      	mov	sp, r7
 8001214:	bd80      	pop	{r7, pc}

08001216 <enc28j60Write>:
 8001216:	b580      	push	{r7, lr}
 8001218:	b082      	sub	sp, #8
 800121a:	af00      	add	r7, sp, #0
 800121c:	4603      	mov	r3, r0
 800121e:	460a      	mov	r2, r1
 8001220:	71fb      	strb	r3, [r7, #7]
 8001222:	4613      	mov	r3, r2
 8001224:	71bb      	strb	r3, [r7, #6]
 8001226:	79fb      	ldrb	r3, [r7, #7]
 8001228:	4618      	mov	r0, r3
 800122a:	f7ff ff77 	bl	800111c <enc28j60SetBank>
 800122e:	79ba      	ldrb	r2, [r7, #6]
 8001230:	79fb      	ldrb	r3, [r7, #7]
 8001232:	4619      	mov	r1, r3
 8001234:	2040      	movs	r0, #64	@ 0x40
 8001236:	f7ff fec7 	bl	8000fc8 <enc28j60WriteOp>
 800123a:	bf00      	nop
 800123c:	3708      	adds	r7, #8
 800123e:	46bd      	mov	sp, r7
 8001240:	bd80      	pop	{r7, pc}

08001242 <enc28j60PhyWrite>:
 8001242:	b580      	push	{r7, lr}
 8001244:	b082      	sub	sp, #8
 8001246:	af00      	add	r7, sp, #0
 8001248:	4603      	mov	r3, r0
 800124a:	460a      	mov	r2, r1
 800124c:	71fb      	strb	r3, [r7, #7]
 800124e:	4613      	mov	r3, r2
 8001250:	80bb      	strh	r3, [r7, #4]
 8001252:	79fb      	ldrb	r3, [r7, #7]
 8001254:	4619      	mov	r1, r3
 8001256:	20d4      	movs	r0, #212	@ 0xd4
 8001258:	f7ff ffdd 	bl	8001216 <enc28j60Write>
 800125c:	88bb      	ldrh	r3, [r7, #4]
 800125e:	b2db      	uxtb	r3, r3
 8001260:	4619      	mov	r1, r3
 8001262:	20d6      	movs	r0, #214	@ 0xd6
 8001264:	f7ff ffd7 	bl	8001216 <enc28j60Write>
 8001268:	88bb      	ldrh	r3, [r7, #4]
 800126a:	0a1b      	lsrs	r3, r3, #8
 800126c:	b29b      	uxth	r3, r3
 800126e:	b2db      	uxtb	r3, r3
 8001270:	4619      	mov	r1, r3
 8001272:	20d7      	movs	r0, #215	@ 0xd7
 8001274:	f7ff ffcf 	bl	8001216 <enc28j60Write>
 8001278:	e002      	b.n	8001280 <enc28j60PhyWrite+0x3e>
 800127a:	200f      	movs	r0, #15
 800127c:	f001 fea2 	bl	8002fc4 <HAL_Delay>
 8001280:	20ea      	movs	r0, #234	@ 0xea
 8001282:	f7ff ff71 	bl	8001168 <enc28j60Read>
 8001286:	4603      	mov	r3, r0
 8001288:	f003 0301 	and.w	r3, r3, #1
 800128c:	2b00      	cmp	r3, #0
 800128e:	d1f4      	bne.n	800127a <enc28j60PhyWrite+0x38>
 8001290:	bf00      	nop
 8001292:	bf00      	nop
 8001294:	3708      	adds	r7, #8
 8001296:	46bd      	mov	sp, r7
 8001298:	bd80      	pop	{r7, pc}

0800129a <enc28j60clkout>:
 800129a:	b580      	push	{r7, lr}
 800129c:	b082      	sub	sp, #8
 800129e:	af00      	add	r7, sp, #0
 80012a0:	4603      	mov	r3, r0
 80012a2:	71fb      	strb	r3, [r7, #7]
 80012a4:	79fb      	ldrb	r3, [r7, #7]
 80012a6:	f003 0307 	and.w	r3, r3, #7
 80012aa:	b2db      	uxtb	r3, r3
 80012ac:	4619      	mov	r1, r3
 80012ae:	2075      	movs	r0, #117	@ 0x75
 80012b0:	f7ff ffb1 	bl	8001216 <enc28j60Write>
 80012b4:	bf00      	nop
 80012b6:	3708      	adds	r7, #8
 80012b8:	46bd      	mov	sp, r7
 80012ba:	bd80      	pop	{r7, pc}

080012bc <enc28j60Init>:
 80012bc:	b580      	push	{r7, lr}
 80012be:	b082      	sub	sp, #8
 80012c0:	af00      	add	r7, sp, #0
 80012c2:	6078      	str	r0, [r7, #4]
 80012c4:	4b4c      	ldr	r3, [pc, #304]	@ (80013f8 <enc28j60Init+0x13c>)
 80012c6:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 80012ca:	611a      	str	r2, [r3, #16]
 80012cc:	4b4b      	ldr	r3, [pc, #300]	@ (80013fc <enc28j60Init+0x140>)
 80012ce:	2210      	movs	r2, #16
 80012d0:	611a      	str	r2, [r3, #16]
 80012d2:	2001      	movs	r0, #1
 80012d4:	f001 fe76 	bl	8002fc4 <HAL_Delay>
 80012d8:	22ff      	movs	r2, #255	@ 0xff
 80012da:	2100      	movs	r1, #0
 80012dc:	20ff      	movs	r0, #255	@ 0xff
 80012de:	f7ff fe73 	bl	8000fc8 <enc28j60WriteOp>
 80012e2:	2032      	movs	r0, #50	@ 0x32
 80012e4:	f001 fe6e 	bl	8002fc4 <HAL_Delay>
 80012e8:	4b45      	ldr	r3, [pc, #276]	@ (8001400 <enc28j60Init+0x144>)
 80012ea:	2200      	movs	r2, #0
 80012ec:	801a      	strh	r2, [r3, #0]
 80012ee:	2100      	movs	r1, #0
 80012f0:	2008      	movs	r0, #8
 80012f2:	f7ff ff4c 	bl	800118e <enc28j60WriteWord>
 80012f6:	2100      	movs	r1, #0
 80012f8:	200c      	movs	r0, #12
 80012fa:	f7ff ff48 	bl	800118e <enc28j60WriteWord>
 80012fe:	f641 11fe 	movw	r1, #6654	@ 0x19fe
 8001302:	200a      	movs	r0, #10
 8001304:	f7ff ff43 	bl	800118e <enc28j60WriteWord>
 8001308:	f641 11ff 	movw	r1, #6655	@ 0x19ff
 800130c:	2004      	movs	r0, #4
 800130e:	f7ff ff3e 	bl	800118e <enc28j60WriteWord>
 8001312:	f641 71ff 	movw	r1, #8191	@ 0x1fff
 8001316:	2006      	movs	r0, #6
 8001318:	f7ff ff39 	bl	800118e <enc28j60WriteWord>
 800131c:	4b39      	ldr	r3, [pc, #228]	@ (8001404 <enc28j60Init+0x148>)
 800131e:	22b1      	movs	r2, #177	@ 0xb1
 8001320:	701a      	strb	r2, [r3, #0]
 8001322:	4b38      	ldr	r3, [pc, #224]	@ (8001404 <enc28j60Init+0x148>)
 8001324:	781b      	ldrb	r3, [r3, #0]
 8001326:	4619      	mov	r1, r3
 8001328:	2038      	movs	r0, #56	@ 0x38
 800132a:	f7ff ff74 	bl	8001216 <enc28j60Write>
 800132e:	f243 013f 	movw	r1, #12351	@ 0x303f
 8001332:	2028      	movs	r0, #40	@ 0x28
 8001334:	f7ff ff2b 	bl	800118e <enc28j60WriteWord>
 8001338:	f24f 71f9 	movw	r1, #63481	@ 0xf7f9
 800133c:	2030      	movs	r0, #48	@ 0x30
 800133e:	f7ff ff26 	bl	800118e <enc28j60WriteWord>
 8001342:	210d      	movs	r1, #13
 8001344:	20c0      	movs	r0, #192	@ 0xc0
 8001346:	f7ff ff66 	bl	8001216 <enc28j60Write>
 800134a:	2100      	movs	r1, #0
 800134c:	20c1      	movs	r0, #193	@ 0xc1
 800134e:	f7ff ff62 	bl	8001216 <enc28j60Write>
 8001352:	2232      	movs	r2, #50	@ 0x32
 8001354:	21c2      	movs	r1, #194	@ 0xc2
 8001356:	2080      	movs	r0, #128	@ 0x80
 8001358:	f7ff fe36 	bl	8000fc8 <enc28j60WriteOp>
 800135c:	f640 4112 	movw	r1, #3090	@ 0xc12
 8001360:	20c6      	movs	r0, #198	@ 0xc6
 8001362:	f7ff ff14 	bl	800118e <enc28j60WriteWord>
 8001366:	2112      	movs	r1, #18
 8001368:	20c4      	movs	r0, #196	@ 0xc4
 800136a:	f7ff ff54 	bl	8001216 <enc28j60Write>
 800136e:	f240 51dc 	movw	r1, #1500	@ 0x5dc
 8001372:	20ca      	movs	r0, #202	@ 0xca
 8001374:	f7ff ff0b 	bl	800118e <enc28j60WriteWord>
 8001378:	687b      	ldr	r3, [r7, #4]
 800137a:	781b      	ldrb	r3, [r3, #0]
 800137c:	4619      	mov	r1, r3
 800137e:	20e4      	movs	r0, #228	@ 0xe4
 8001380:	f7ff ff49 	bl	8001216 <enc28j60Write>
 8001384:	687b      	ldr	r3, [r7, #4]
 8001386:	3301      	adds	r3, #1
 8001388:	781b      	ldrb	r3, [r3, #0]
 800138a:	4619      	mov	r1, r3
 800138c:	20e5      	movs	r0, #229	@ 0xe5
 800138e:	f7ff ff42 	bl	8001216 <enc28j60Write>
 8001392:	687b      	ldr	r3, [r7, #4]
 8001394:	3302      	adds	r3, #2
 8001396:	781b      	ldrb	r3, [r3, #0]
 8001398:	4619      	mov	r1, r3
 800139a:	20e2      	movs	r0, #226	@ 0xe2
 800139c:	f7ff ff3b 	bl	8001216 <enc28j60Write>
 80013a0:	687b      	ldr	r3, [r7, #4]
 80013a2:	3303      	adds	r3, #3
 80013a4:	781b      	ldrb	r3, [r3, #0]
 80013a6:	4619      	mov	r1, r3
 80013a8:	20e3      	movs	r0, #227	@ 0xe3
 80013aa:	f7ff ff34 	bl	8001216 <enc28j60Write>
 80013ae:	687b      	ldr	r3, [r7, #4]
 80013b0:	3304      	adds	r3, #4
 80013b2:	781b      	ldrb	r3, [r3, #0]
 80013b4:	4619      	mov	r1, r3
 80013b6:	20e0      	movs	r0, #224	@ 0xe0
 80013b8:	f7ff ff2d 	bl	8001216 <enc28j60Write>
 80013bc:	687b      	ldr	r3, [r7, #4]
 80013be:	3305      	adds	r3, #5
 80013c0:	781b      	ldrb	r3, [r3, #0]
 80013c2:	4619      	mov	r1, r3
 80013c4:	20e1      	movs	r0, #225	@ 0xe1
 80013c6:	f7ff ff26 	bl	8001216 <enc28j60Write>
 80013ca:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80013ce:	2010      	movs	r0, #16
 80013d0:	f7ff ff37 	bl	8001242 <enc28j60PhyWrite>
 80013d4:	201f      	movs	r0, #31
 80013d6:	f7ff fea1 	bl	800111c <enc28j60SetBank>
 80013da:	22c0      	movs	r2, #192	@ 0xc0
 80013dc:	211b      	movs	r1, #27
 80013de:	2080      	movs	r0, #128	@ 0x80
 80013e0:	f7ff fdf2 	bl	8000fc8 <enc28j60WriteOp>
 80013e4:	2204      	movs	r2, #4
 80013e6:	211f      	movs	r1, #31
 80013e8:	2080      	movs	r0, #128	@ 0x80
 80013ea:	f7ff fded 	bl	8000fc8 <enc28j60WriteOp>
 80013ee:	bf00      	nop
 80013f0:	3708      	adds	r7, #8
 80013f2:	46bd      	mov	sp, r7
 80013f4:	bd80      	pop	{r7, pc}
 80013f6:	bf00      	nop
 80013f8:	40010c00 	.word	0x40010c00
 80013fc:	40010800 	.word	0x40010800
 8001400:	2000042c 	.word	0x2000042c
 8001404:	2000042e 	.word	0x2000042e

08001408 <enc28j60getrev>:
 8001408:	b580      	push	{r7, lr}
 800140a:	b082      	sub	sp, #8
 800140c:	af00      	add	r7, sp, #0
 800140e:	2072      	movs	r0, #114	@ 0x72
 8001410:	f7ff feaa 	bl	8001168 <enc28j60Read>
 8001414:	4603      	mov	r3, r0
 8001416:	71fb      	strb	r3, [r7, #7]
 8001418:	79fb      	ldrb	r3, [r7, #7]
 800141a:	2b05      	cmp	r3, #5
 800141c:	d902      	bls.n	8001424 <enc28j60getrev+0x1c>
 800141e:	79fb      	ldrb	r3, [r7, #7]
 8001420:	3301      	adds	r3, #1
 8001422:	71fb      	strb	r3, [r7, #7]
 8001424:	79fb      	ldrb	r3, [r7, #7]
 8001426:	4618      	mov	r0, r3
 8001428:	3708      	adds	r7, #8
 800142a:	46bd      	mov	sp, r7
 800142c:	bd80      	pop	{r7, pc}

0800142e <enc28j60linkup>:
 800142e:	b580      	push	{r7, lr}
 8001430:	af00      	add	r7, sp, #0
 8001432:	2011      	movs	r0, #17
 8001434:	f7ff fec9 	bl	80011ca <enc28j60PhyReadH>
 8001438:	4603      	mov	r3, r0
 800143a:	b2db      	uxtb	r3, r3
 800143c:	f003 0304 	and.w	r3, r3, #4
 8001440:	b2db      	uxtb	r3, r3
 8001442:	4618      	mov	r0, r3
 8001444:	bd80      	pop	{r7, pc}

08001446 <enc28j60PacketSend>:
 8001446:	b580      	push	{r7, lr}
 8001448:	b082      	sub	sp, #8
 800144a:	af00      	add	r7, sp, #0
 800144c:	4603      	mov	r3, r0
 800144e:	6039      	str	r1, [r7, #0]
 8001450:	80fb      	strh	r3, [r7, #6]
 8001452:	e011      	b.n	8001478 <enc28j60PacketSend+0x32>
 8001454:	201c      	movs	r0, #28
 8001456:	f7ff fe87 	bl	8001168 <enc28j60Read>
 800145a:	4603      	mov	r3, r0
 800145c:	f003 0302 	and.w	r3, r3, #2
 8001460:	2b00      	cmp	r3, #0
 8001462:	d009      	beq.n	8001478 <enc28j60PacketSend+0x32>
 8001464:	2280      	movs	r2, #128	@ 0x80
 8001466:	211f      	movs	r1, #31
 8001468:	2080      	movs	r0, #128	@ 0x80
 800146a:	f7ff fdad 	bl	8000fc8 <enc28j60WriteOp>
 800146e:	2280      	movs	r2, #128	@ 0x80
 8001470:	211f      	movs	r1, #31
 8001472:	20a0      	movs	r0, #160	@ 0xa0
 8001474:	f7ff fda8 	bl	8000fc8 <enc28j60WriteOp>
 8001478:	211f      	movs	r1, #31
 800147a:	2000      	movs	r0, #0
 800147c:	f7ff fd64 	bl	8000f48 <enc28j60ReadOp>
 8001480:	4603      	mov	r3, r0
 8001482:	f003 0308 	and.w	r3, r3, #8
 8001486:	2b00      	cmp	r3, #0
 8001488:	d1e4      	bne.n	8001454 <enc28j60PacketSend+0xe>
 800148a:	f641 11ff 	movw	r1, #6655	@ 0x19ff
 800148e:	2002      	movs	r0, #2
 8001490:	f7ff fe7d 	bl	800118e <enc28j60WriteWord>
 8001494:	88fb      	ldrh	r3, [r7, #6]
 8001496:	f503 53cf 	add.w	r3, r3, #6624	@ 0x19e0
 800149a:	331f      	adds	r3, #31
 800149c:	b29b      	uxth	r3, r3
 800149e:	4619      	mov	r1, r3
 80014a0:	2006      	movs	r0, #6
 80014a2:	f7ff fe74 	bl	800118e <enc28j60WriteWord>
 80014a6:	2200      	movs	r2, #0
 80014a8:	2100      	movs	r1, #0
 80014aa:	207a      	movs	r0, #122	@ 0x7a
 80014ac:	f7ff fd8c 	bl	8000fc8 <enc28j60WriteOp>
 80014b0:	88fb      	ldrh	r3, [r7, #6]
 80014b2:	6839      	ldr	r1, [r7, #0]
 80014b4:	4618      	mov	r0, r3
 80014b6:	f7ff fdff 	bl	80010b8 <enc28j60WriteBuffer>
 80014ba:	2208      	movs	r2, #8
 80014bc:	211f      	movs	r1, #31
 80014be:	2080      	movs	r0, #128	@ 0x80
 80014c0:	f7ff fd82 	bl	8000fc8 <enc28j60WriteOp>
 80014c4:	bf00      	nop
 80014c6:	3708      	adds	r7, #8
 80014c8:	46bd      	mov	sp, r7
 80014ca:	bd80      	pop	{r7, pc}

080014cc <enc28j60PacketReceive>:
 80014cc:	b580      	push	{r7, lr}
 80014ce:	b084      	sub	sp, #16
 80014d0:	af00      	add	r7, sp, #0
 80014d2:	4603      	mov	r3, r0
 80014d4:	6039      	str	r1, [r7, #0]
 80014d6:	80fb      	strh	r3, [r7, #6]
 80014d8:	2039      	movs	r0, #57	@ 0x39
 80014da:	f7ff fe45 	bl	8001168 <enc28j60Read>
 80014de:	4603      	mov	r3, r0
 80014e0:	2b00      	cmp	r3, #0
 80014e2:	d101      	bne.n	80014e8 <enc28j60PacketReceive+0x1c>
 80014e4:	2300      	movs	r3, #0
 80014e6:	e04b      	b.n	8001580 <enc28j60PacketReceive+0xb4>
 80014e8:	4b27      	ldr	r3, [pc, #156]	@ (8001588 <enc28j60PacketReceive+0xbc>)
 80014ea:	881b      	ldrh	r3, [r3, #0]
 80014ec:	4619      	mov	r1, r3
 80014ee:	2000      	movs	r0, #0
 80014f0:	f7ff fe4d 	bl	800118e <enc28j60WriteWord>
 80014f4:	f7ff fdd2 	bl	800109c <enc28j60ReadBufferWord>
 80014f8:	4603      	mov	r3, r0
 80014fa:	461a      	mov	r2, r3
 80014fc:	4b22      	ldr	r3, [pc, #136]	@ (8001588 <enc28j60PacketReceive+0xbc>)
 80014fe:	801a      	strh	r2, [r3, #0]
 8001500:	f7ff fdcc 	bl	800109c <enc28j60ReadBufferWord>
 8001504:	4603      	mov	r3, r0
 8001506:	3b04      	subs	r3, #4
 8001508:	81fb      	strh	r3, [r7, #14]
 800150a:	f7ff fdc7 	bl	800109c <enc28j60ReadBufferWord>
 800150e:	4603      	mov	r3, r0
 8001510:	81bb      	strh	r3, [r7, #12]
 8001512:	88fa      	ldrh	r2, [r7, #6]
 8001514:	89fb      	ldrh	r3, [r7, #14]
 8001516:	429a      	cmp	r2, r3
 8001518:	d802      	bhi.n	8001520 <enc28j60PacketReceive+0x54>
 800151a:	88fb      	ldrh	r3, [r7, #6]
 800151c:	3b01      	subs	r3, #1
 800151e:	81fb      	strh	r3, [r7, #14]
 8001520:	89bb      	ldrh	r3, [r7, #12]
 8001522:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8001526:	2b00      	cmp	r3, #0
 8001528:	d102      	bne.n	8001530 <enc28j60PacketReceive+0x64>
 800152a:	2300      	movs	r3, #0
 800152c:	81fb      	strh	r3, [r7, #14]
 800152e:	e004      	b.n	800153a <enc28j60PacketReceive+0x6e>
 8001530:	89fb      	ldrh	r3, [r7, #14]
 8001532:	6839      	ldr	r1, [r7, #0]
 8001534:	4618      	mov	r0, r3
 8001536:	f7ff fd7d 	bl	8001034 <enc28j60ReadBuffer>
 800153a:	4b13      	ldr	r3, [pc, #76]	@ (8001588 <enc28j60PacketReceive+0xbc>)
 800153c:	881b      	ldrh	r3, [r3, #0]
 800153e:	4619      	mov	r1, r3
 8001540:	200c      	movs	r0, #12
 8001542:	f7ff fe24 	bl	800118e <enc28j60WriteWord>
 8001546:	4b10      	ldr	r3, [pc, #64]	@ (8001588 <enc28j60PacketReceive+0xbc>)
 8001548:	881b      	ldrh	r3, [r3, #0]
 800154a:	2b00      	cmp	r3, #0
 800154c:	d004      	beq.n	8001558 <enc28j60PacketReceive+0x8c>
 800154e:	4b0e      	ldr	r3, [pc, #56]	@ (8001588 <enc28j60PacketReceive+0xbc>)
 8001550:	881b      	ldrh	r3, [r3, #0]
 8001552:	f5b3 5fd0 	cmp.w	r3, #6656	@ 0x1a00
 8001556:	d305      	bcc.n	8001564 <enc28j60PacketReceive+0x98>
 8001558:	f641 11fe 	movw	r1, #6654	@ 0x19fe
 800155c:	200c      	movs	r0, #12
 800155e:	f7ff fe16 	bl	800118e <enc28j60WriteWord>
 8001562:	e007      	b.n	8001574 <enc28j60PacketReceive+0xa8>
 8001564:	4b08      	ldr	r3, [pc, #32]	@ (8001588 <enc28j60PacketReceive+0xbc>)
 8001566:	881b      	ldrh	r3, [r3, #0]
 8001568:	3b01      	subs	r3, #1
 800156a:	b29b      	uxth	r3, r3
 800156c:	4619      	mov	r1, r3
 800156e:	200c      	movs	r0, #12
 8001570:	f7ff fe0d 	bl	800118e <enc28j60WriteWord>
 8001574:	2240      	movs	r2, #64	@ 0x40
 8001576:	211e      	movs	r1, #30
 8001578:	2080      	movs	r0, #128	@ 0x80
 800157a:	f7ff fd25 	bl	8000fc8 <enc28j60WriteOp>
 800157e:	89fb      	ldrh	r3, [r7, #14]
 8001580:	4618      	mov	r0, r3
 8001582:	3710      	adds	r7, #16
 8001584:	46bd      	mov	sp, r7
 8001586:	bd80      	pop	{r7, pc}
 8001588:	2000042c 	.word	0x2000042c

0800158c <ENC28j60_Error_Handler>:
 800158c:	b480      	push	{r7}
 800158e:	b083      	sub	sp, #12
 8001590:	af00      	add	r7, sp, #0
 8001592:	4603      	mov	r3, r0
 8001594:	71fb      	strb	r3, [r7, #7]
 8001596:	bf00      	nop
 8001598:	e7fd      	b.n	8001596 <ENC28j60_Error_Handler+0xa>
	...

0800159c <ethershieldDebug>:
#include "enc28j60.h"
#include "ip_arp_udp_tcp.h"


#if ETHERSHIELD_DEBUG
void ethershieldDebug(char *message) {
 800159c:	b580      	push	{r7, lr}
 800159e:	b082      	sub	sp, #8
 80015a0:	af00      	add	r7, sp, #0
 80015a2:	6078      	str	r0, [r7, #4]
    printf("%s\r\n", message);    
 80015a4:	6879      	ldr	r1, [r7, #4]
 80015a6:	4803      	ldr	r0, [pc, #12]	@ (80015b4 <ethershieldDebug+0x18>)
 80015a8:	f005 fc9e 	bl	8006ee8 <iprintf>
}
 80015ac:	bf00      	nop
 80015ae:	3708      	adds	r7, #8
 80015b0:	46bd      	mov	sp, r7
 80015b2:	bd80      	pop	{r7, pc}
 80015b4:	08008f04 	.word	0x08008f04

080015b8 <checksum>:
// For more information on how this algorithm works see:
// http://www.netfor2.com/checksum.html
// http://www.msc.uky.edu/ken/cs471/notes/chap3.htm
// The RFC has also a C code example: http://www.faqs.org/rfcs/rfc1071.html
uint16_t checksum(uint8_t *buf, uint16_t len,uint8_t type)
{
 80015b8:	b480      	push	{r7}
 80015ba:	b085      	sub	sp, #20
 80015bc:	af00      	add	r7, sp, #0
 80015be:	6078      	str	r0, [r7, #4]
 80015c0:	460b      	mov	r3, r1
 80015c2:	807b      	strh	r3, [r7, #2]
 80015c4:	4613      	mov	r3, r2
 80015c6:	707b      	strb	r3, [r7, #1]
  // type 0=ip , icmp
  //      1=udp
  //      2=tcp
  uint32_t sum = 0;
 80015c8:	2300      	movs	r3, #0
 80015ca:	60fb      	str	r3, [r7, #12]

  //if(type==0){    
  //        // do not add anything, standard IP checksum as described above
  //        // Usable for ICMP and IP header
  //}
  if(type==1){
 80015cc:	787b      	ldrb	r3, [r7, #1]
 80015ce:	2b01      	cmp	r3, #1
 80015d0:	d107      	bne.n	80015e2 <checksum+0x2a>
    sum+=IP_PROTO_UDP_V; // protocol udp
 80015d2:	68fb      	ldr	r3, [r7, #12]
 80015d4:	3311      	adds	r3, #17
 80015d6:	60fb      	str	r3, [r7, #12]
    // the length here is the length of udp (data+header len)
    // =length given to this function - (IP.scr+IP.dst length)
    sum+=len-8; // = real udp len
 80015d8:	887a      	ldrh	r2, [r7, #2]
 80015da:	68fb      	ldr	r3, [r7, #12]
 80015dc:	4413      	add	r3, r2
 80015de:	3b08      	subs	r3, #8
 80015e0:	60fb      	str	r3, [r7, #12]
  }
  if(type==2){
 80015e2:	787b      	ldrb	r3, [r7, #1]
 80015e4:	2b02      	cmp	r3, #2
 80015e6:	d119      	bne.n	800161c <checksum+0x64>
    sum+=IP_PROTO_TCP_V; 
 80015e8:	68fb      	ldr	r3, [r7, #12]
 80015ea:	3306      	adds	r3, #6
 80015ec:	60fb      	str	r3, [r7, #12]
    // the length here is the length of tcp (data+header len)
    // =length given to this function - (IP.scr+IP.dst length)
    sum+=len-8; // = real tcp len
 80015ee:	887a      	ldrh	r2, [r7, #2]
 80015f0:	68fb      	ldr	r3, [r7, #12]
 80015f2:	4413      	add	r3, r2
 80015f4:	3b08      	subs	r3, #8
 80015f6:	60fb      	str	r3, [r7, #12]
  }
  // build the sum of 16bit words
  while(len >1){
 80015f8:	e010      	b.n	800161c <checksum+0x64>
    sum += 0xFFFF & (((uint32_t)*buf<<8)|*(buf+1));
 80015fa:	687b      	ldr	r3, [r7, #4]
 80015fc:	781b      	ldrb	r3, [r3, #0]
 80015fe:	021b      	lsls	r3, r3, #8
 8001600:	687a      	ldr	r2, [r7, #4]
 8001602:	3201      	adds	r2, #1
 8001604:	7812      	ldrb	r2, [r2, #0]
 8001606:	4313      	orrs	r3, r2
 8001608:	b29b      	uxth	r3, r3
 800160a:	68fa      	ldr	r2, [r7, #12]
 800160c:	4413      	add	r3, r2
 800160e:	60fb      	str	r3, [r7, #12]
    buf+=2;
 8001610:	687b      	ldr	r3, [r7, #4]
 8001612:	3302      	adds	r3, #2
 8001614:	607b      	str	r3, [r7, #4]
    len-=2;
 8001616:	887b      	ldrh	r3, [r7, #2]
 8001618:	3b02      	subs	r3, #2
 800161a:	807b      	strh	r3, [r7, #2]
  while(len >1){
 800161c:	887b      	ldrh	r3, [r7, #2]
 800161e:	2b01      	cmp	r3, #1
 8001620:	d8eb      	bhi.n	80015fa <checksum+0x42>
  }
  // if there is a byte left then add it (padded with zero)
  if (len){
 8001622:	887b      	ldrh	r3, [r7, #2]
 8001624:	2b00      	cmp	r3, #0
 8001626:	d00c      	beq.n	8001642 <checksum+0x8a>
    sum += ((uint32_t)(0xFF & *buf))<<8;
 8001628:	687b      	ldr	r3, [r7, #4]
 800162a:	781b      	ldrb	r3, [r3, #0]
 800162c:	021b      	lsls	r3, r3, #8
 800162e:	68fa      	ldr	r2, [r7, #12]
 8001630:	4413      	add	r3, r2
 8001632:	60fb      	str	r3, [r7, #12]
  }
  // now calculate the sum over the bytes in the sum
  // until the result is only 16bit long
  while (sum>>16){
 8001634:	e005      	b.n	8001642 <checksum+0x8a>
    sum = (sum & 0xFFFF)+(sum >> 16);
 8001636:	68fb      	ldr	r3, [r7, #12]
 8001638:	b29a      	uxth	r2, r3
 800163a:	68fb      	ldr	r3, [r7, #12]
 800163c:	0c1b      	lsrs	r3, r3, #16
 800163e:	4413      	add	r3, r2
 8001640:	60fb      	str	r3, [r7, #12]
  while (sum>>16){
 8001642:	68fb      	ldr	r3, [r7, #12]
 8001644:	0c1b      	lsrs	r3, r3, #16
 8001646:	2b00      	cmp	r3, #0
 8001648:	d1f5      	bne.n	8001636 <checksum+0x7e>
  }
  // build 1's complement:
  return( (uint16_t) sum ^ 0xFFFF);
 800164a:	68fb      	ldr	r3, [r7, #12]
 800164c:	b29b      	uxth	r3, r3
 800164e:	43db      	mvns	r3, r3
 8001650:	b29b      	uxth	r3, r3
}
 8001652:	4618      	mov	r0, r3
 8001654:	3714      	adds	r7, #20
 8001656:	46bd      	mov	sp, r7
 8001658:	bc80      	pop	{r7}
 800165a:	4770      	bx	lr

0800165c <init_ip_arp_udp_tcp>:
#endif

// This initializes the web server
// you must call this function once before you use any of the other functions:
void init_ip_arp_udp_tcp(uint8_t *mymac,uint8_t *myip,uint16_t port)
{
 800165c:	b480      	push	{r7}
 800165e:	b085      	sub	sp, #20
 8001660:	af00      	add	r7, sp, #0
 8001662:	60f8      	str	r0, [r7, #12]
 8001664:	60b9      	str	r1, [r7, #8]
 8001666:	4613      	mov	r3, r2
 8001668:	80fb      	strh	r3, [r7, #6]
  wwwport_h=(port>>8)&0xff;
 800166a:	88fb      	ldrh	r3, [r7, #6]
 800166c:	0a1b      	lsrs	r3, r3, #8
 800166e:	b29b      	uxth	r3, r3
 8001670:	b2da      	uxtb	r2, r3
 8001672:	4b0b      	ldr	r3, [pc, #44]	@ (80016a0 <init_ip_arp_udp_tcp+0x44>)
 8001674:	701a      	strb	r2, [r3, #0]
  wwwport_l=(port&0xff);
 8001676:	88fb      	ldrh	r3, [r7, #6]
 8001678:	b2da      	uxtb	r2, r3
 800167a:	4b0a      	ldr	r3, [pc, #40]	@ (80016a4 <init_ip_arp_udp_tcp+0x48>)
 800167c:	701a      	strb	r2, [r3, #0]
  memcpy(ipaddr, myip, 4);
 800167e:	68bb      	ldr	r3, [r7, #8]
 8001680:	681b      	ldr	r3, [r3, #0]
 8001682:	461a      	mov	r2, r3
 8001684:	4b08      	ldr	r3, [pc, #32]	@ (80016a8 <init_ip_arp_udp_tcp+0x4c>)
 8001686:	601a      	str	r2, [r3, #0]
  memcpy(macaddr, mymac, 6);
 8001688:	4b08      	ldr	r3, [pc, #32]	@ (80016ac <init_ip_arp_udp_tcp+0x50>)
 800168a:	68fa      	ldr	r2, [r7, #12]
 800168c:	6810      	ldr	r0, [r2, #0]
 800168e:	6018      	str	r0, [r3, #0]
 8001690:	8892      	ldrh	r2, [r2, #4]
 8001692:	809a      	strh	r2, [r3, #4]
}
 8001694:	bf00      	nop
 8001696:	3714      	adds	r7, #20
 8001698:	46bd      	mov	sp, r7
 800169a:	bc80      	pop	{r7}
 800169c:	4770      	bx	lr
 800169e:	bf00      	nop
 80016a0:	20000434 	.word	0x20000434
 80016a4:	2000000c 	.word	0x2000000c
 80016a8:	20000468 	.word	0x20000468
 80016ac:	20000460 	.word	0x20000460

080016b0 <check_ip_message_is_from>:

#ifndef DISABLE_IP_STACK

uint8_t check_ip_message_is_from(uint8_t *buf,uint8_t *ip)
{
 80016b0:	b580      	push	{r7, lr}
 80016b2:	b082      	sub	sp, #8
 80016b4:	af00      	add	r7, sp, #0
 80016b6:	6078      	str	r0, [r7, #4]
 80016b8:	6039      	str	r1, [r7, #0]
  return !memcmp(&buf[IP_SRC_P], ip, 4);
 80016ba:	687b      	ldr	r3, [r7, #4]
 80016bc:	331a      	adds	r3, #26
 80016be:	2204      	movs	r2, #4
 80016c0:	6839      	ldr	r1, [r7, #0]
 80016c2:	4618      	mov	r0, r3
 80016c4:	f005 fc80 	bl	8006fc8 <memcmp>
 80016c8:	4603      	mov	r3, r0
 80016ca:	2b00      	cmp	r3, #0
 80016cc:	bf0c      	ite	eq
 80016ce:	2301      	moveq	r3, #1
 80016d0:	2300      	movne	r3, #0
 80016d2:	b2db      	uxtb	r3, r3
}
 80016d4:	4618      	mov	r0, r3
 80016d6:	3708      	adds	r7, #8
 80016d8:	46bd      	mov	sp, r7
 80016da:	bd80      	pop	{r7, pc}

080016dc <eth_type_is_arp_and_my_ip>:

uint8_t eth_type_is_arp_and_my_ip(uint8_t *buf,uint16_t len){
 80016dc:	b580      	push	{r7, lr}
 80016de:	b082      	sub	sp, #8
 80016e0:	af00      	add	r7, sp, #0
 80016e2:	6078      	str	r0, [r7, #4]
 80016e4:	460b      	mov	r3, r1
 80016e6:	807b      	strh	r3, [r7, #2]
  //  
  if (len<41){
 80016e8:	887b      	ldrh	r3, [r7, #2]
 80016ea:	2b28      	cmp	r3, #40	@ 0x28
 80016ec:	d801      	bhi.n	80016f2 <eth_type_is_arp_and_my_ip+0x16>
          return(0);
 80016ee:	2300      	movs	r3, #0
 80016f0:	e018      	b.n	8001724 <eth_type_is_arp_and_my_ip+0x48>
  }
  if(buf[ETH_TYPE_H_P] != ETHTYPE_ARP_H_V || 
 80016f2:	687b      	ldr	r3, [r7, #4]
 80016f4:	330c      	adds	r3, #12
 80016f6:	781b      	ldrb	r3, [r3, #0]
 80016f8:	2b08      	cmp	r3, #8
 80016fa:	d104      	bne.n	8001706 <eth_type_is_arp_and_my_ip+0x2a>
      buf[ETH_TYPE_L_P] != ETHTYPE_ARP_L_V){
 80016fc:	687b      	ldr	r3, [r7, #4]
 80016fe:	330d      	adds	r3, #13
 8001700:	781b      	ldrb	r3, [r3, #0]
  if(buf[ETH_TYPE_H_P] != ETHTYPE_ARP_H_V || 
 8001702:	2b06      	cmp	r3, #6
 8001704:	d001      	beq.n	800170a <eth_type_is_arp_and_my_ip+0x2e>
          return(0);
 8001706:	2300      	movs	r3, #0
 8001708:	e00c      	b.n	8001724 <eth_type_is_arp_and_my_ip+0x48>
  }
  
  if (memcmp(&buf[ETH_ARP_DST_IP_P], ipaddr, 4)) {
 800170a:	687b      	ldr	r3, [r7, #4]
 800170c:	3326      	adds	r3, #38	@ 0x26
 800170e:	2204      	movs	r2, #4
 8001710:	4906      	ldr	r1, [pc, #24]	@ (800172c <eth_type_is_arp_and_my_ip+0x50>)
 8001712:	4618      	mov	r0, r3
 8001714:	f005 fc58 	bl	8006fc8 <memcmp>
 8001718:	4603      	mov	r3, r0
 800171a:	2b00      	cmp	r3, #0
 800171c:	d001      	beq.n	8001722 <eth_type_is_arp_and_my_ip+0x46>
    return 0;
 800171e:	2300      	movs	r3, #0
 8001720:	e000      	b.n	8001724 <eth_type_is_arp_and_my_ip+0x48>
  }

  return(1);
 8001722:	2301      	movs	r3, #1
}
 8001724:	4618      	mov	r0, r3
 8001726:	3708      	adds	r7, #8
 8001728:	46bd      	mov	sp, r7
 800172a:	bd80      	pop	{r7, pc}
 800172c:	20000468 	.word	0x20000468

08001730 <eth_type_is_ip_and_my_ip>:

uint8_t eth_type_is_ip_and_my_ip(uint8_t *buf,uint16_t len){
 8001730:	b580      	push	{r7, lr}
 8001732:	b082      	sub	sp, #8
 8001734:	af00      	add	r7, sp, #0
 8001736:	6078      	str	r0, [r7, #4]
 8001738:	460b      	mov	r3, r1
 800173a:	807b      	strh	r3, [r7, #2]
  //eth+ip+udp header is 42
  if (len<42){
 800173c:	887b      	ldrh	r3, [r7, #2]
 800173e:	2b29      	cmp	r3, #41	@ 0x29
 8001740:	d801      	bhi.n	8001746 <eth_type_is_ip_and_my_ip+0x16>
          return(0);
 8001742:	2300      	movs	r3, #0
 8001744:	e01f      	b.n	8001786 <eth_type_is_ip_and_my_ip+0x56>
  }
  if(buf[ETH_TYPE_H_P]!=ETHTYPE_IP_H_V || 
 8001746:	687b      	ldr	r3, [r7, #4]
 8001748:	330c      	adds	r3, #12
 800174a:	781b      	ldrb	r3, [r3, #0]
 800174c:	2b08      	cmp	r3, #8
 800174e:	d104      	bne.n	800175a <eth_type_is_ip_and_my_ip+0x2a>
      buf[ETH_TYPE_L_P]!=ETHTYPE_IP_L_V){
 8001750:	687b      	ldr	r3, [r7, #4]
 8001752:	330d      	adds	r3, #13
 8001754:	781b      	ldrb	r3, [r3, #0]
  if(buf[ETH_TYPE_H_P]!=ETHTYPE_IP_H_V || 
 8001756:	2b00      	cmp	r3, #0
 8001758:	d001      	beq.n	800175e <eth_type_is_ip_and_my_ip+0x2e>
          return(0);
 800175a:	2300      	movs	r3, #0
 800175c:	e013      	b.n	8001786 <eth_type_is_ip_and_my_ip+0x56>
  }
  if (buf[IP_HEADER_LEN_VER_P]!=0x45){
 800175e:	687b      	ldr	r3, [r7, #4]
 8001760:	330e      	adds	r3, #14
 8001762:	781b      	ldrb	r3, [r3, #0]
 8001764:	2b45      	cmp	r3, #69	@ 0x45
 8001766:	d001      	beq.n	800176c <eth_type_is_ip_and_my_ip+0x3c>
          // must be IP V4 and 20 byte header
          return(0);
 8001768:	2300      	movs	r3, #0
 800176a:	e00c      	b.n	8001786 <eth_type_is_ip_and_my_ip+0x56>
  }
  if (memcmp(&buf[IP_DST_P], ipaddr, 4)) {
 800176c:	687b      	ldr	r3, [r7, #4]
 800176e:	331e      	adds	r3, #30
 8001770:	2204      	movs	r2, #4
 8001772:	4907      	ldr	r1, [pc, #28]	@ (8001790 <eth_type_is_ip_and_my_ip+0x60>)
 8001774:	4618      	mov	r0, r3
 8001776:	f005 fc27 	bl	8006fc8 <memcmp>
 800177a:	4603      	mov	r3, r0
 800177c:	2b00      	cmp	r3, #0
 800177e:	d001      	beq.n	8001784 <eth_type_is_ip_and_my_ip+0x54>
    return 0;
 8001780:	2300      	movs	r3, #0
 8001782:	e000      	b.n	8001786 <eth_type_is_ip_and_my_ip+0x56>
  }
  return(1);
 8001784:	2301      	movs	r3, #1
}
 8001786:	4618      	mov	r0, r3
 8001788:	3708      	adds	r7, #8
 800178a:	46bd      	mov	sp, r7
 800178c:	bd80      	pop	{r7, pc}
 800178e:	bf00      	nop
 8001790:	20000468 	.word	0x20000468

08001794 <make_eth>:

// make a return eth header from a received eth packet
void make_eth(uint8_t *buf)
{
 8001794:	b580      	push	{r7, lr}
 8001796:	b082      	sub	sp, #8
 8001798:	af00      	add	r7, sp, #0
 800179a:	6078      	str	r0, [r7, #4]
  //copy the destination mac from the source and fill my mac into src
  memcpy(&buf[ETH_DST_MAC], &buf[ETH_SRC_MAC], 6);
 800179c:	687b      	ldr	r3, [r7, #4]
 800179e:	3306      	adds	r3, #6
 80017a0:	2206      	movs	r2, #6
 80017a2:	4619      	mov	r1, r3
 80017a4:	6878      	ldr	r0, [r7, #4]
 80017a6:	f005 fcef 	bl	8007188 <memcpy>
  memcpy(&buf[ETH_SRC_MAC], macaddr, 6);
 80017aa:	687b      	ldr	r3, [r7, #4]
 80017ac:	3306      	adds	r3, #6
 80017ae:	4a04      	ldr	r2, [pc, #16]	@ (80017c0 <make_eth+0x2c>)
 80017b0:	6810      	ldr	r0, [r2, #0]
 80017b2:	6018      	str	r0, [r3, #0]
 80017b4:	8892      	ldrh	r2, [r2, #4]
 80017b6:	809a      	strh	r2, [r3, #4]
}
 80017b8:	bf00      	nop
 80017ba:	3708      	adds	r7, #8
 80017bc:	46bd      	mov	sp, r7
 80017be:	bd80      	pop	{r7, pc}
 80017c0:	20000460 	.word	0x20000460

080017c4 <fill_ip_hdr_checksum>:
  buf[ETH_TYPE_L_P] = ETHTYPE_IP_L_V;
}


void fill_ip_hdr_checksum(uint8_t *buf)
{
 80017c4:	b580      	push	{r7, lr}
 80017c6:	b084      	sub	sp, #16
 80017c8:	af00      	add	r7, sp, #0
 80017ca:	6078      	str	r0, [r7, #4]
  uint16_t ck;
  // clear the 2 byte checksum
  buf[IP_CHECKSUM_P]=0;
 80017cc:	687b      	ldr	r3, [r7, #4]
 80017ce:	3318      	adds	r3, #24
 80017d0:	2200      	movs	r2, #0
 80017d2:	701a      	strb	r2, [r3, #0]
  buf[IP_CHECKSUM_P+1]=0;
 80017d4:	687b      	ldr	r3, [r7, #4]
 80017d6:	3319      	adds	r3, #25
 80017d8:	2200      	movs	r2, #0
 80017da:	701a      	strb	r2, [r3, #0]
  buf[IP_FLAGS_P]=0x40; // don't fragment
 80017dc:	687b      	ldr	r3, [r7, #4]
 80017de:	3314      	adds	r3, #20
 80017e0:	2240      	movs	r2, #64	@ 0x40
 80017e2:	701a      	strb	r2, [r3, #0]
  buf[IP_FLAGS_P+1]=0;  // fragement offset
 80017e4:	687b      	ldr	r3, [r7, #4]
 80017e6:	3315      	adds	r3, #21
 80017e8:	2200      	movs	r2, #0
 80017ea:	701a      	strb	r2, [r3, #0]
  buf[IP_TTL_P]=64; // ttl
 80017ec:	687b      	ldr	r3, [r7, #4]
 80017ee:	3316      	adds	r3, #22
 80017f0:	2240      	movs	r2, #64	@ 0x40
 80017f2:	701a      	strb	r2, [r3, #0]
  // calculate the checksum:
  ck=checksum(&buf[IP_P], IP_HEADER_LEN,0);
 80017f4:	687b      	ldr	r3, [r7, #4]
 80017f6:	330e      	adds	r3, #14
 80017f8:	2200      	movs	r2, #0
 80017fa:	2114      	movs	r1, #20
 80017fc:	4618      	mov	r0, r3
 80017fe:	f7ff fedb 	bl	80015b8 <checksum>
 8001802:	4603      	mov	r3, r0
 8001804:	81fb      	strh	r3, [r7, #14]
  buf[IP_CHECKSUM_P]=ck>>8;
 8001806:	89fb      	ldrh	r3, [r7, #14]
 8001808:	0a1b      	lsrs	r3, r3, #8
 800180a:	b29a      	uxth	r2, r3
 800180c:	687b      	ldr	r3, [r7, #4]
 800180e:	3318      	adds	r3, #24
 8001810:	b2d2      	uxtb	r2, r2
 8001812:	701a      	strb	r2, [r3, #0]
  buf[IP_CHECKSUM_P+1]=ck & 0xff;
 8001814:	687b      	ldr	r3, [r7, #4]
 8001816:	3319      	adds	r3, #25
 8001818:	89fa      	ldrh	r2, [r7, #14]
 800181a:	b2d2      	uxtb	r2, r2
 800181c:	701a      	strb	r2, [r3, #0]
}
 800181e:	bf00      	nop
 8001820:	3710      	adds	r7, #16
 8001822:	46bd      	mov	sp, r7
 8001824:	bd80      	pop	{r7, pc}
	...

08001828 <make_ip>:
  fill_ip_hdr_checksum(buf);
}


void make_ip(uint8_t *buf)
{
 8001828:	b580      	push	{r7, lr}
 800182a:	b082      	sub	sp, #8
 800182c:	af00      	add	r7, sp, #0
 800182e:	6078      	str	r0, [r7, #4]
  memcpy(&buf[IP_DST_P], &buf[IP_SRC_P], 4);
 8001830:	687b      	ldr	r3, [r7, #4]
 8001832:	331e      	adds	r3, #30
 8001834:	687a      	ldr	r2, [r7, #4]
 8001836:	321a      	adds	r2, #26
 8001838:	6812      	ldr	r2, [r2, #0]
 800183a:	601a      	str	r2, [r3, #0]
  memcpy(&buf[IP_SRC_P], ipaddr, 4);
 800183c:	687b      	ldr	r3, [r7, #4]
 800183e:	331a      	adds	r3, #26
 8001840:	4a04      	ldr	r2, [pc, #16]	@ (8001854 <make_ip+0x2c>)
 8001842:	6812      	ldr	r2, [r2, #0]
 8001844:	601a      	str	r2, [r3, #0]
  fill_ip_hdr_checksum(buf);
 8001846:	6878      	ldr	r0, [r7, #4]
 8001848:	f7ff ffbc 	bl	80017c4 <fill_ip_hdr_checksum>
}
 800184c:	bf00      	nop
 800184e:	3708      	adds	r7, #8
 8001850:	46bd      	mov	sp, r7
 8001852:	bd80      	pop	{r7, pc}
 8001854:	20000468 	.word	0x20000468

08001858 <step_seq>:

// swap seq and ack number and count ack number up
void step_seq(uint8_t *buf,uint16_t rel_ack_num,uint8_t cp_seq)
{
 8001858:	b480      	push	{r7}
 800185a:	b085      	sub	sp, #20
 800185c:	af00      	add	r7, sp, #0
 800185e:	6078      	str	r0, [r7, #4]
 8001860:	460b      	mov	r3, r1
 8001862:	807b      	strh	r3, [r7, #2]
 8001864:	4613      	mov	r3, r2
 8001866:	707b      	strb	r3, [r7, #1]
  uint8_t i;
  uint8_t tseq;
  i=4;
 8001868:	2304      	movs	r3, #4
 800186a:	73fb      	strb	r3, [r7, #15]
  // sequence numbers:
  // add the rel ack num to SEQACK
  while(i>0) {
 800186c:	e02b      	b.n	80018c6 <step_seq+0x6e>
    rel_ack_num=buf[TCP_SEQ_H_P+i-1]+rel_ack_num;
 800186e:	7bfb      	ldrb	r3, [r7, #15]
 8001870:	3325      	adds	r3, #37	@ 0x25
 8001872:	687a      	ldr	r2, [r7, #4]
 8001874:	4413      	add	r3, r2
 8001876:	781b      	ldrb	r3, [r3, #0]
 8001878:	461a      	mov	r2, r3
 800187a:	887b      	ldrh	r3, [r7, #2]
 800187c:	4413      	add	r3, r2
 800187e:	807b      	strh	r3, [r7, #2]
    tseq=buf[TCP_SEQACK_H_P+i-1];
 8001880:	7bfb      	ldrb	r3, [r7, #15]
 8001882:	3329      	adds	r3, #41	@ 0x29
 8001884:	687a      	ldr	r2, [r7, #4]
 8001886:	4413      	add	r3, r2
 8001888:	781b      	ldrb	r3, [r3, #0]
 800188a:	73bb      	strb	r3, [r7, #14]
    buf[TCP_SEQACK_H_P+i-1]=0xff&rel_ack_num;
 800188c:	7bfb      	ldrb	r3, [r7, #15]
 800188e:	3329      	adds	r3, #41	@ 0x29
 8001890:	687a      	ldr	r2, [r7, #4]
 8001892:	4413      	add	r3, r2
 8001894:	887a      	ldrh	r2, [r7, #2]
 8001896:	b2d2      	uxtb	r2, r2
 8001898:	701a      	strb	r2, [r3, #0]
    if (cp_seq){
 800189a:	787b      	ldrb	r3, [r7, #1]
 800189c:	2b00      	cmp	r3, #0
 800189e:	d006      	beq.n	80018ae <step_seq+0x56>
            // copy the acknum sent to us into the sequence number
            buf[TCP_SEQ_H_P+i-1]=tseq;
 80018a0:	7bfb      	ldrb	r3, [r7, #15]
 80018a2:	3325      	adds	r3, #37	@ 0x25
 80018a4:	687a      	ldr	r2, [r7, #4]
 80018a6:	4413      	add	r3, r2
 80018a8:	7bba      	ldrb	r2, [r7, #14]
 80018aa:	701a      	strb	r2, [r3, #0]
 80018ac:	e005      	b.n	80018ba <step_seq+0x62>
    }else{
            buf[TCP_SEQ_H_P+i-1]= 0; // some preset vallue
 80018ae:	7bfb      	ldrb	r3, [r7, #15]
 80018b0:	3325      	adds	r3, #37	@ 0x25
 80018b2:	687a      	ldr	r2, [r7, #4]
 80018b4:	4413      	add	r3, r2
 80018b6:	2200      	movs	r2, #0
 80018b8:	701a      	strb	r2, [r3, #0]
    }
    rel_ack_num=rel_ack_num>>8;
 80018ba:	887b      	ldrh	r3, [r7, #2]
 80018bc:	0a1b      	lsrs	r3, r3, #8
 80018be:	807b      	strh	r3, [r7, #2]
    i--;
 80018c0:	7bfb      	ldrb	r3, [r7, #15]
 80018c2:	3b01      	subs	r3, #1
 80018c4:	73fb      	strb	r3, [r7, #15]
  while(i>0) {
 80018c6:	7bfb      	ldrb	r3, [r7, #15]
 80018c8:	2b00      	cmp	r3, #0
 80018ca:	d1d0      	bne.n	800186e <step_seq+0x16>
  }
}
 80018cc:	bf00      	nop
 80018ce:	bf00      	nop
 80018d0:	3714      	adds	r7, #20
 80018d2:	46bd      	mov	sp, r7
 80018d4:	bc80      	pop	{r7}
 80018d6:	4770      	bx	lr

080018d8 <make_tcphead>:
//
// After calling this function you can fill in the first data byte at TCP_OPTIONS_P+4
// If cp_seq=0 then an initial sequence number is used (should be use in synack)
// otherwise it is copied from the packet we received
void make_tcphead(uint8_t *buf,uint16_t rel_ack_num,uint8_t cp_seq)
{
 80018d8:	b580      	push	{r7, lr}
 80018da:	b084      	sub	sp, #16
 80018dc:	af00      	add	r7, sp, #0
 80018de:	6078      	str	r0, [r7, #4]
 80018e0:	460b      	mov	r3, r1
 80018e2:	807b      	strh	r3, [r7, #2]
 80018e4:	4613      	mov	r3, r2
 80018e6:	707b      	strb	r3, [r7, #1]
  uint8_t i;
  // copy ports:
  i=buf[TCP_DST_PORT_H_P];
 80018e8:	687b      	ldr	r3, [r7, #4]
 80018ea:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 80018ee:	73fb      	strb	r3, [r7, #15]
  buf[TCP_DST_PORT_H_P]=buf[TCP_SRC_PORT_H_P];
 80018f0:	687b      	ldr	r3, [r7, #4]
 80018f2:	3324      	adds	r3, #36	@ 0x24
 80018f4:	687a      	ldr	r2, [r7, #4]
 80018f6:	f892 2022 	ldrb.w	r2, [r2, #34]	@ 0x22
 80018fa:	701a      	strb	r2, [r3, #0]
  buf[TCP_SRC_PORT_H_P]=i;
 80018fc:	687b      	ldr	r3, [r7, #4]
 80018fe:	3322      	adds	r3, #34	@ 0x22
 8001900:	7bfa      	ldrb	r2, [r7, #15]
 8001902:	701a      	strb	r2, [r3, #0]
  //
  i=buf[TCP_DST_PORT_L_P];
 8001904:	687b      	ldr	r3, [r7, #4]
 8001906:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 800190a:	73fb      	strb	r3, [r7, #15]
  buf[TCP_DST_PORT_L_P]=buf[TCP_SRC_PORT_L_P];
 800190c:	687b      	ldr	r3, [r7, #4]
 800190e:	3325      	adds	r3, #37	@ 0x25
 8001910:	687a      	ldr	r2, [r7, #4]
 8001912:	f892 2023 	ldrb.w	r2, [r2, #35]	@ 0x23
 8001916:	701a      	strb	r2, [r3, #0]
  buf[TCP_SRC_PORT_L_P]=i;
 8001918:	687b      	ldr	r3, [r7, #4]
 800191a:	3323      	adds	r3, #35	@ 0x23
 800191c:	7bfa      	ldrb	r2, [r7, #15]
 800191e:	701a      	strb	r2, [r3, #0]
  step_seq(buf,rel_ack_num,cp_seq);
 8001920:	787a      	ldrb	r2, [r7, #1]
 8001922:	887b      	ldrh	r3, [r7, #2]
 8001924:	4619      	mov	r1, r3
 8001926:	6878      	ldr	r0, [r7, #4]
 8001928:	f7ff ff96 	bl	8001858 <step_seq>
  // zero the checksum
  buf[TCP_CHECKSUM_H_P]=0;
 800192c:	687b      	ldr	r3, [r7, #4]
 800192e:	3332      	adds	r3, #50	@ 0x32
 8001930:	2200      	movs	r2, #0
 8001932:	701a      	strb	r2, [r3, #0]
  buf[TCP_CHECKSUM_L_P]=0;
 8001934:	687b      	ldr	r3, [r7, #4]
 8001936:	3333      	adds	r3, #51	@ 0x33
 8001938:	2200      	movs	r2, #0
 800193a:	701a      	strb	r2, [r3, #0]
  // no options:
  // 20 bytes:
  // The tcp header length is only a 4 bit field (the upper 4 bits).
  // It is calculated in units of 4 bytes.
  // E.g 20 bytes: 20/4=6 => 0x50=header len field
  buf[TCP_HEADER_LEN_P]=0x50;
 800193c:	687b      	ldr	r3, [r7, #4]
 800193e:	332e      	adds	r3, #46	@ 0x2e
 8001940:	2250      	movs	r2, #80	@ 0x50
 8001942:	701a      	strb	r2, [r3, #0]
}
 8001944:	bf00      	nop
 8001946:	3710      	adds	r7, #16
 8001948:	46bd      	mov	sp, r7
 800194a:	bd80      	pop	{r7, pc}

0800194c <make_arp_answer_from_request>:

void make_arp_answer_from_request(uint8_t *buf)
{
 800194c:	b580      	push	{r7, lr}
 800194e:	b082      	sub	sp, #8
 8001950:	af00      	add	r7, sp, #0
 8001952:	6078      	str	r0, [r7, #4]
  //
  make_eth(buf);
 8001954:	6878      	ldr	r0, [r7, #4]
 8001956:	f7ff ff1d 	bl	8001794 <make_eth>
  buf[ETH_ARP_OPCODE_H_P]=ETH_ARP_OPCODE_REPLY_H_V;
 800195a:	687b      	ldr	r3, [r7, #4]
 800195c:	3314      	adds	r3, #20
 800195e:	2200      	movs	r2, #0
 8001960:	701a      	strb	r2, [r3, #0]
  buf[ETH_ARP_OPCODE_L_P]=ETH_ARP_OPCODE_REPLY_L_V;
 8001962:	687b      	ldr	r3, [r7, #4]
 8001964:	3315      	adds	r3, #21
 8001966:	2202      	movs	r2, #2
 8001968:	701a      	strb	r2, [r3, #0]
  // fill the mac addresses:
  memcpy(&buf[ETH_ARP_DST_MAC_P], &buf[ETH_ARP_SRC_MAC_P], 6);
 800196a:	687b      	ldr	r3, [r7, #4]
 800196c:	f103 0020 	add.w	r0, r3, #32
 8001970:	687b      	ldr	r3, [r7, #4]
 8001972:	3316      	adds	r3, #22
 8001974:	2206      	movs	r2, #6
 8001976:	4619      	mov	r1, r3
 8001978:	f005 fc06 	bl	8007188 <memcpy>
  memcpy(&buf[ETH_ARP_SRC_MAC_P], macaddr, 6);
 800197c:	687b      	ldr	r3, [r7, #4]
 800197e:	3316      	adds	r3, #22
 8001980:	4a0b      	ldr	r2, [pc, #44]	@ (80019b0 <make_arp_answer_from_request+0x64>)
 8001982:	6810      	ldr	r0, [r2, #0]
 8001984:	6018      	str	r0, [r3, #0]
 8001986:	8892      	ldrh	r2, [r2, #4]
 8001988:	809a      	strh	r2, [r3, #4]
  // fill the ip addresses
  memcpy(&buf[ETH_ARP_DST_IP_P], &buf[ETH_ARP_SRC_IP_P], 4);
 800198a:	687b      	ldr	r3, [r7, #4]
 800198c:	3326      	adds	r3, #38	@ 0x26
 800198e:	687a      	ldr	r2, [r7, #4]
 8001990:	321c      	adds	r2, #28
 8001992:	6812      	ldr	r2, [r2, #0]
 8001994:	601a      	str	r2, [r3, #0]
  memcpy(&buf[ETH_ARP_SRC_IP_P], ipaddr, 4);
 8001996:	687b      	ldr	r3, [r7, #4]
 8001998:	331c      	adds	r3, #28
 800199a:	4a06      	ldr	r2, [pc, #24]	@ (80019b4 <make_arp_answer_from_request+0x68>)
 800199c:	6812      	ldr	r2, [r2, #0]
 800199e:	601a      	str	r2, [r3, #0]
  // eth+arp is 42 bytes:
  enc28j60PacketSend(42,buf); 
 80019a0:	6879      	ldr	r1, [r7, #4]
 80019a2:	202a      	movs	r0, #42	@ 0x2a
 80019a4:	f7ff fd4f 	bl	8001446 <enc28j60PacketSend>
}
 80019a8:	bf00      	nop
 80019aa:	3708      	adds	r7, #8
 80019ac:	46bd      	mov	sp, r7
 80019ae:	bd80      	pop	{r7, pc}
 80019b0:	20000460 	.word	0x20000460
 80019b4:	20000468 	.word	0x20000468

080019b8 <make_echo_reply_from_request>:

void make_echo_reply_from_request(uint8_t *buf,uint16_t len)
{
 80019b8:	b580      	push	{r7, lr}
 80019ba:	b082      	sub	sp, #8
 80019bc:	af00      	add	r7, sp, #0
 80019be:	6078      	str	r0, [r7, #4]
 80019c0:	460b      	mov	r3, r1
 80019c2:	807b      	strh	r3, [r7, #2]
  make_eth(buf);
 80019c4:	6878      	ldr	r0, [r7, #4]
 80019c6:	f7ff fee5 	bl	8001794 <make_eth>
  make_ip(buf);
 80019ca:	6878      	ldr	r0, [r7, #4]
 80019cc:	f7ff ff2c 	bl	8001828 <make_ip>
  buf[ICMP_TYPE_P]=ICMP_TYPE_ECHOREPLY_V;
 80019d0:	687b      	ldr	r3, [r7, #4]
 80019d2:	3322      	adds	r3, #34	@ 0x22
 80019d4:	2200      	movs	r2, #0
 80019d6:	701a      	strb	r2, [r3, #0]
  // we changed only the icmp.type field from request(=8) to reply(=0).
  // we can therefore easily correct the checksum:
  if (buf[ICMP_CHECKSUM_P] > (0xff-0x08)){
 80019d8:	687b      	ldr	r3, [r7, #4]
 80019da:	3324      	adds	r3, #36	@ 0x24
 80019dc:	781b      	ldrb	r3, [r3, #0]
 80019de:	2bf7      	cmp	r3, #247	@ 0xf7
 80019e0:	d905      	bls.n	80019ee <make_echo_reply_from_request+0x36>
          buf[ICMP_CHECKSUM_P+1]++;
 80019e2:	687b      	ldr	r3, [r7, #4]
 80019e4:	3325      	adds	r3, #37	@ 0x25
 80019e6:	781a      	ldrb	r2, [r3, #0]
 80019e8:	3201      	adds	r2, #1
 80019ea:	b2d2      	uxtb	r2, r2
 80019ec:	701a      	strb	r2, [r3, #0]
  }
  buf[ICMP_CHECKSUM_P]+=0x08;
 80019ee:	687b      	ldr	r3, [r7, #4]
 80019f0:	3324      	adds	r3, #36	@ 0x24
 80019f2:	781a      	ldrb	r2, [r3, #0]
 80019f4:	687b      	ldr	r3, [r7, #4]
 80019f6:	3324      	adds	r3, #36	@ 0x24
 80019f8:	3208      	adds	r2, #8
 80019fa:	b2d2      	uxtb	r2, r2
 80019fc:	701a      	strb	r2, [r3, #0]
  //
  enc28j60PacketSend(len,buf);
 80019fe:	887b      	ldrh	r3, [r7, #2]
 8001a00:	6879      	ldr	r1, [r7, #4]
 8001a02:	4618      	mov	r0, r3
 8001a04:	f7ff fd1f 	bl	8001446 <enc28j60PacketSend>
}
 8001a08:	bf00      	nop
 8001a0a:	3708      	adds	r7, #8
 8001a0c:	46bd      	mov	sp, r7
 8001a0e:	bd80      	pop	{r7, pc}

08001a10 <make_tcp_synack_from_syn>:
  enc28j60PacketSend(UDP_HEADER_LEN+IP_HEADER_LEN+ETH_HEADER_LEN+datalen,buf);
}

// this is for the server not the client:
void make_tcp_synack_from_syn(uint8_t *buf)
{
 8001a10:	b580      	push	{r7, lr}
 8001a12:	b084      	sub	sp, #16
 8001a14:	af00      	add	r7, sp, #0
 8001a16:	6078      	str	r0, [r7, #4]
  uint16_t ck;
  make_eth(buf);
 8001a18:	6878      	ldr	r0, [r7, #4]
 8001a1a:	f7ff febb 	bl	8001794 <make_eth>
  // total length field in the IP header must be set:
  // 20 bytes IP + 24 bytes (20tcp+4tcp options)
  buf[IP_TOTLEN_H_P]=0;
 8001a1e:	687b      	ldr	r3, [r7, #4]
 8001a20:	3310      	adds	r3, #16
 8001a22:	2200      	movs	r2, #0
 8001a24:	701a      	strb	r2, [r3, #0]
  buf[IP_TOTLEN_L_P]=IP_HEADER_LEN+TCP_HEADER_LEN_PLAIN+4;
 8001a26:	687b      	ldr	r3, [r7, #4]
 8001a28:	3311      	adds	r3, #17
 8001a2a:	222c      	movs	r2, #44	@ 0x2c
 8001a2c:	701a      	strb	r2, [r3, #0]
  make_ip(buf);
 8001a2e:	6878      	ldr	r0, [r7, #4]
 8001a30:	f7ff fefa 	bl	8001828 <make_ip>
  buf[TCP_FLAGS_P]=TCP_FLAGS_SYNACK_V;
 8001a34:	687b      	ldr	r3, [r7, #4]
 8001a36:	332f      	adds	r3, #47	@ 0x2f
 8001a38:	2212      	movs	r2, #18
 8001a3a:	701a      	strb	r2, [r3, #0]
  make_tcphead(buf,1,0);
 8001a3c:	2200      	movs	r2, #0
 8001a3e:	2101      	movs	r1, #1
 8001a40:	6878      	ldr	r0, [r7, #4]
 8001a42:	f7ff ff49 	bl	80018d8 <make_tcphead>
  // put an inital seq number
  buf[TCP_SEQ_H_P+0]= 0;
 8001a46:	687b      	ldr	r3, [r7, #4]
 8001a48:	3326      	adds	r3, #38	@ 0x26
 8001a4a:	2200      	movs	r2, #0
 8001a4c:	701a      	strb	r2, [r3, #0]
  buf[TCP_SEQ_H_P+1]= 0;
 8001a4e:	687b      	ldr	r3, [r7, #4]
 8001a50:	3327      	adds	r3, #39	@ 0x27
 8001a52:	2200      	movs	r2, #0
 8001a54:	701a      	strb	r2, [r3, #0]
  // we step only the second byte, this allows us to send packts 
  // with 255 bytes, 512  or 765 (step by 3) without generating
  // overlapping numbers.
  buf[TCP_SEQ_H_P+2]= seqnum; 
 8001a56:	687b      	ldr	r3, [r7, #4]
 8001a58:	3328      	adds	r3, #40	@ 0x28
 8001a5a:	4a23      	ldr	r2, [pc, #140]	@ (8001ae8 <make_tcp_synack_from_syn+0xd8>)
 8001a5c:	7812      	ldrb	r2, [r2, #0]
 8001a5e:	701a      	strb	r2, [r3, #0]
  buf[TCP_SEQ_H_P+3]= 0;
 8001a60:	687b      	ldr	r3, [r7, #4]
 8001a62:	3329      	adds	r3, #41	@ 0x29
 8001a64:	2200      	movs	r2, #0
 8001a66:	701a      	strb	r2, [r3, #0]
  // step the inititial seq num by something we will not use
  // during this tcp session:
  seqnum+=3;
 8001a68:	4b1f      	ldr	r3, [pc, #124]	@ (8001ae8 <make_tcp_synack_from_syn+0xd8>)
 8001a6a:	781b      	ldrb	r3, [r3, #0]
 8001a6c:	3303      	adds	r3, #3
 8001a6e:	b2da      	uxtb	r2, r3
 8001a70:	4b1d      	ldr	r3, [pc, #116]	@ (8001ae8 <make_tcp_synack_from_syn+0xd8>)
 8001a72:	701a      	strb	r2, [r3, #0]
  // add an mss options field with MSS to 1280:
  // 1280 in hex is 0x500
  buf[TCP_OPTIONS_P]=2;
 8001a74:	687b      	ldr	r3, [r7, #4]
 8001a76:	3336      	adds	r3, #54	@ 0x36
 8001a78:	2202      	movs	r2, #2
 8001a7a:	701a      	strb	r2, [r3, #0]
  buf[TCP_OPTIONS_P+1]=4;
 8001a7c:	687b      	ldr	r3, [r7, #4]
 8001a7e:	3337      	adds	r3, #55	@ 0x37
 8001a80:	2204      	movs	r2, #4
 8001a82:	701a      	strb	r2, [r3, #0]
  buf[TCP_OPTIONS_P+2]=0x05;
 8001a84:	687b      	ldr	r3, [r7, #4]
 8001a86:	3338      	adds	r3, #56	@ 0x38
 8001a88:	2205      	movs	r2, #5
 8001a8a:	701a      	strb	r2, [r3, #0]
  buf[TCP_OPTIONS_P+3]=0x0;
 8001a8c:	687b      	ldr	r3, [r7, #4]
 8001a8e:	3339      	adds	r3, #57	@ 0x39
 8001a90:	2200      	movs	r2, #0
 8001a92:	701a      	strb	r2, [r3, #0]
  // The tcp header length is only a 4 bit field (the upper 4 bits).
  // It is calculated in units of 4 bytes.
  // E.g 24 bytes: 24/4=6 => 0x60=header len field
  buf[TCP_HEADER_LEN_P]=0x60;
 8001a94:	687b      	ldr	r3, [r7, #4]
 8001a96:	332e      	adds	r3, #46	@ 0x2e
 8001a98:	2260      	movs	r2, #96	@ 0x60
 8001a9a:	701a      	strb	r2, [r3, #0]
  // here we must just be sure that the web browser contacting us
  // will send only one get packet
  buf[TCP_WIN_SIZE]=0x5; // 1400=0x578
 8001a9c:	687b      	ldr	r3, [r7, #4]
 8001a9e:	3330      	adds	r3, #48	@ 0x30
 8001aa0:	2205      	movs	r2, #5
 8001aa2:	701a      	strb	r2, [r3, #0]
  buf[TCP_WIN_SIZE+1]=0x78;
 8001aa4:	687b      	ldr	r3, [r7, #4]
 8001aa6:	3331      	adds	r3, #49	@ 0x31
 8001aa8:	2278      	movs	r2, #120	@ 0x78
 8001aaa:	701a      	strb	r2, [r3, #0]
  // calculate the checksum, len=8 (start from ip.src) + TCP_HEADER_LEN_PLAIN + 4 (one option: mss)
  ck=checksum(&buf[IP_SRC_P], 8+TCP_HEADER_LEN_PLAIN+4,2);
 8001aac:	687b      	ldr	r3, [r7, #4]
 8001aae:	331a      	adds	r3, #26
 8001ab0:	2202      	movs	r2, #2
 8001ab2:	2120      	movs	r1, #32
 8001ab4:	4618      	mov	r0, r3
 8001ab6:	f7ff fd7f 	bl	80015b8 <checksum>
 8001aba:	4603      	mov	r3, r0
 8001abc:	81fb      	strh	r3, [r7, #14]
  buf[TCP_CHECKSUM_H_P]=ck>>8;
 8001abe:	89fb      	ldrh	r3, [r7, #14]
 8001ac0:	0a1b      	lsrs	r3, r3, #8
 8001ac2:	b29a      	uxth	r2, r3
 8001ac4:	687b      	ldr	r3, [r7, #4]
 8001ac6:	3332      	adds	r3, #50	@ 0x32
 8001ac8:	b2d2      	uxtb	r2, r2
 8001aca:	701a      	strb	r2, [r3, #0]
  buf[TCP_CHECKSUM_L_P]=ck& 0xff;
 8001acc:	687b      	ldr	r3, [r7, #4]
 8001ace:	3333      	adds	r3, #51	@ 0x33
 8001ad0:	89fa      	ldrh	r2, [r7, #14]
 8001ad2:	b2d2      	uxtb	r2, r2
 8001ad4:	701a      	strb	r2, [r3, #0]
  // add 4 for option mss:
  enc28j60PacketSend(IP_HEADER_LEN+TCP_HEADER_LEN_PLAIN+4+ETH_HEADER_LEN,buf);
 8001ad6:	6879      	ldr	r1, [r7, #4]
 8001ad8:	203a      	movs	r0, #58	@ 0x3a
 8001ada:	f7ff fcb4 	bl	8001446 <enc28j60PacketSend>
}
 8001ade:	bf00      	nop
 8001ae0:	3710      	adds	r7, #16
 8001ae2:	46bd      	mov	sp, r7
 8001ae4:	bd80      	pop	{r7, pc}
 8001ae6:	bf00      	nop
 8001ae8:	2000000f 	.word	0x2000000f

08001aec <get_tcp_data_len>:

// do some basic length calculations and store the result in static variables
uint16_t get_tcp_data_len(uint8_t *buf)
{
 8001aec:	b480      	push	{r7}
 8001aee:	b085      	sub	sp, #20
 8001af0:	af00      	add	r7, sp, #0
 8001af2:	6078      	str	r0, [r7, #4]
  int16_t i;
  i=(((int16_t)buf[IP_TOTLEN_H_P])<<8)|(buf[IP_TOTLEN_L_P]&0xff);
 8001af4:	687b      	ldr	r3, [r7, #4]
 8001af6:	3310      	adds	r3, #16
 8001af8:	781b      	ldrb	r3, [r3, #0]
 8001afa:	b21b      	sxth	r3, r3
 8001afc:	021b      	lsls	r3, r3, #8
 8001afe:	b21a      	sxth	r2, r3
 8001b00:	687b      	ldr	r3, [r7, #4]
 8001b02:	3311      	adds	r3, #17
 8001b04:	781b      	ldrb	r3, [r3, #0]
 8001b06:	b21b      	sxth	r3, r3
 8001b08:	4313      	orrs	r3, r2
 8001b0a:	81fb      	strh	r3, [r7, #14]
  i-=IP_HEADER_LEN;
 8001b0c:	89fb      	ldrh	r3, [r7, #14]
 8001b0e:	3b14      	subs	r3, #20
 8001b10:	b29b      	uxth	r3, r3
 8001b12:	81fb      	strh	r3, [r7, #14]
  i-=(buf[TCP_HEADER_LEN_P]>>4)*4; // generate len in bytes;
 8001b14:	89fa      	ldrh	r2, [r7, #14]
 8001b16:	687b      	ldr	r3, [r7, #4]
 8001b18:	332e      	adds	r3, #46	@ 0x2e
 8001b1a:	781b      	ldrb	r3, [r3, #0]
 8001b1c:	091b      	lsrs	r3, r3, #4
 8001b1e:	b2db      	uxtb	r3, r3
 8001b20:	009b      	lsls	r3, r3, #2
 8001b22:	b29b      	uxth	r3, r3
 8001b24:	1ad3      	subs	r3, r2, r3
 8001b26:	b29b      	uxth	r3, r3
 8001b28:	81fb      	strh	r3, [r7, #14]
  if (i<=0){
 8001b2a:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8001b2e:	2b00      	cmp	r3, #0
 8001b30:	dc01      	bgt.n	8001b36 <get_tcp_data_len+0x4a>
          i=0;
 8001b32:	2300      	movs	r3, #0
 8001b34:	81fb      	strh	r3, [r7, #14]
  }
  return((uint16_t)i);
 8001b36:	89fb      	ldrh	r3, [r7, #14]
}
 8001b38:	4618      	mov	r0, r3
 8001b3a:	3714      	adds	r7, #20
 8001b3c:	46bd      	mov	sp, r7
 8001b3e:	bc80      	pop	{r7}
 8001b40:	4770      	bx	lr

08001b42 <fill_tcp_data_len>:
}
*/

// fill a binary string of len data into the tcp packet
uint16_t fill_tcp_data_len(uint8_t *buf,uint16_t pos, const char *s, uint16_t len)
{
 8001b42:	b580      	push	{r7, lr}
 8001b44:	b084      	sub	sp, #16
 8001b46:	af00      	add	r7, sp, #0
 8001b48:	60f8      	str	r0, [r7, #12]
 8001b4a:	607a      	str	r2, [r7, #4]
 8001b4c:	461a      	mov	r2, r3
 8001b4e:	460b      	mov	r3, r1
 8001b50:	817b      	strh	r3, [r7, #10]
 8001b52:	4613      	mov	r3, r2
 8001b54:	813b      	strh	r3, [r7, #8]
  // fill in tcp data at position pos
  //
  // with no options the data starts after the checksum + 2 more bytes (urgent ptr)
  memcpy(&buf[TCP_CHECKSUM_L_P+3+pos], s, len);
 8001b56:	897b      	ldrh	r3, [r7, #10]
 8001b58:	3336      	adds	r3, #54	@ 0x36
 8001b5a:	461a      	mov	r2, r3
 8001b5c:	68fb      	ldr	r3, [r7, #12]
 8001b5e:	4413      	add	r3, r2
 8001b60:	893a      	ldrh	r2, [r7, #8]
 8001b62:	6879      	ldr	r1, [r7, #4]
 8001b64:	4618      	mov	r0, r3
 8001b66:	f005 fb0f 	bl	8007188 <memcpy>
  return(len);
 8001b6a:	893b      	ldrh	r3, [r7, #8]
}
 8001b6c:	4618      	mov	r0, r3
 8001b6e:	3710      	adds	r7, #16
 8001b70:	46bd      	mov	sp, r7
 8001b72:	bd80      	pop	{r7, pc}

08001b74 <fill_tcp_data>:

// fill in tcp data at position pos. pos=0 means start of
// tcp data. Returns the position at which the string after
// this string could be filled.
uint16_t fill_tcp_data(uint8_t *buf,uint16_t pos, const char *s)
{
 8001b74:	b580      	push	{r7, lr}
 8001b76:	b084      	sub	sp, #16
 8001b78:	af00      	add	r7, sp, #0
 8001b7a:	60f8      	str	r0, [r7, #12]
 8001b7c:	460b      	mov	r3, r1
 8001b7e:	607a      	str	r2, [r7, #4]
 8001b80:	817b      	strh	r3, [r7, #10]
  return(fill_tcp_data_len(buf,pos,(char*)s,strlen(s)));
 8001b82:	6878      	ldr	r0, [r7, #4]
 8001b84:	f7fe fae4 	bl	8000150 <strlen>
 8001b88:	4603      	mov	r3, r0
 8001b8a:	b29b      	uxth	r3, r3
 8001b8c:	8979      	ldrh	r1, [r7, #10]
 8001b8e:	687a      	ldr	r2, [r7, #4]
 8001b90:	68f8      	ldr	r0, [r7, #12]
 8001b92:	f7ff ffd6 	bl	8001b42 <fill_tcp_data_len>
 8001b96:	4603      	mov	r3, r0
}
 8001b98:	4618      	mov	r0, r3
 8001b9a:	3710      	adds	r7, #16
 8001b9c:	46bd      	mov	sp, r7
 8001b9e:	bd80      	pop	{r7, pc}

08001ba0 <make_tcp_ack_from_any>:

// Make just an ack packet with no tcp data inside
// This will modify the eth/ip/tcp header 
void make_tcp_ack_from_any(uint8_t *buf,int16_t datlentoack,uint8_t addflags)
{
 8001ba0:	b580      	push	{r7, lr}
 8001ba2:	b084      	sub	sp, #16
 8001ba4:	af00      	add	r7, sp, #0
 8001ba6:	6078      	str	r0, [r7, #4]
 8001ba8:	460b      	mov	r3, r1
 8001baa:	807b      	strh	r3, [r7, #2]
 8001bac:	4613      	mov	r3, r2
 8001bae:	707b      	strb	r3, [r7, #1]
  uint16_t j;
  make_eth(buf);
 8001bb0:	6878      	ldr	r0, [r7, #4]
 8001bb2:	f7ff fdef 	bl	8001794 <make_eth>
  // fill the header:
  buf[TCP_FLAGS_P]=TCP_FLAGS_ACK_V|addflags;
 8001bb6:	687b      	ldr	r3, [r7, #4]
 8001bb8:	332f      	adds	r3, #47	@ 0x2f
 8001bba:	787a      	ldrb	r2, [r7, #1]
 8001bbc:	f042 0210 	orr.w	r2, r2, #16
 8001bc0:	b2d2      	uxtb	r2, r2
 8001bc2:	701a      	strb	r2, [r3, #0]
  if (addflags==TCP_FLAGS_RST_V){
 8001bc4:	787b      	ldrb	r3, [r7, #1]
 8001bc6:	2b04      	cmp	r3, #4
 8001bc8:	d106      	bne.n	8001bd8 <make_tcp_ack_from_any+0x38>
          make_tcphead(buf,datlentoack,1); 
 8001bca:	887b      	ldrh	r3, [r7, #2]
 8001bcc:	2201      	movs	r2, #1
 8001bce:	4619      	mov	r1, r3
 8001bd0:	6878      	ldr	r0, [r7, #4]
 8001bd2:	f7ff fe81 	bl	80018d8 <make_tcphead>
 8001bd6:	e00b      	b.n	8001bf0 <make_tcp_ack_from_any+0x50>
  } else {
    if (datlentoack==0){
 8001bd8:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8001bdc:	2b00      	cmp	r3, #0
 8001bde:	d101      	bne.n	8001be4 <make_tcp_ack_from_any+0x44>
      // if there is no data then we must still acknoledge one packet
      datlentoack = 1;
 8001be0:	2301      	movs	r3, #1
 8001be2:	807b      	strh	r3, [r7, #2]
    }
    make_tcphead(buf,datlentoack,1); // no options
 8001be4:	887b      	ldrh	r3, [r7, #2]
 8001be6:	2201      	movs	r2, #1
 8001be8:	4619      	mov	r1, r3
 8001bea:	6878      	ldr	r0, [r7, #4]
 8001bec:	f7ff fe74 	bl	80018d8 <make_tcphead>
  }
  // total length field in the IP header must be set:
  // 20 bytes IP + 20 bytes tcp (when no options) 
  j=IP_HEADER_LEN+TCP_HEADER_LEN_PLAIN;
 8001bf0:	2328      	movs	r3, #40	@ 0x28
 8001bf2:	81fb      	strh	r3, [r7, #14]
  buf[IP_TOTLEN_H_P]=j >> 8;
 8001bf4:	89fb      	ldrh	r3, [r7, #14]
 8001bf6:	0a1b      	lsrs	r3, r3, #8
 8001bf8:	b29a      	uxth	r2, r3
 8001bfa:	687b      	ldr	r3, [r7, #4]
 8001bfc:	3310      	adds	r3, #16
 8001bfe:	b2d2      	uxtb	r2, r2
 8001c00:	701a      	strb	r2, [r3, #0]
  buf[IP_TOTLEN_L_P]=j & 0xff;
 8001c02:	687b      	ldr	r3, [r7, #4]
 8001c04:	3311      	adds	r3, #17
 8001c06:	89fa      	ldrh	r2, [r7, #14]
 8001c08:	b2d2      	uxtb	r2, r2
 8001c0a:	701a      	strb	r2, [r3, #0]
  make_ip(buf);
 8001c0c:	6878      	ldr	r0, [r7, #4]
 8001c0e:	f7ff fe0b 	bl	8001828 <make_ip>
  // use a low window size otherwise we have to have
  // timers and can not just react on every packet.
  buf[TCP_WIN_SIZE]=0x4; // 1024=0x400
 8001c12:	687b      	ldr	r3, [r7, #4]
 8001c14:	3330      	adds	r3, #48	@ 0x30
 8001c16:	2204      	movs	r2, #4
 8001c18:	701a      	strb	r2, [r3, #0]
  buf[TCP_WIN_SIZE+1]=0x0;
 8001c1a:	687b      	ldr	r3, [r7, #4]
 8001c1c:	3331      	adds	r3, #49	@ 0x31
 8001c1e:	2200      	movs	r2, #0
 8001c20:	701a      	strb	r2, [r3, #0]
  // calculate the checksum, len=8 (start from ip.src) + TCP_HEADER_LEN_PLAIN + data len
  j=checksum(&buf[IP_SRC_P], 8+TCP_HEADER_LEN_PLAIN,2);
 8001c22:	687b      	ldr	r3, [r7, #4]
 8001c24:	331a      	adds	r3, #26
 8001c26:	2202      	movs	r2, #2
 8001c28:	211c      	movs	r1, #28
 8001c2a:	4618      	mov	r0, r3
 8001c2c:	f7ff fcc4 	bl	80015b8 <checksum>
 8001c30:	4603      	mov	r3, r0
 8001c32:	81fb      	strh	r3, [r7, #14]
  buf[TCP_CHECKSUM_H_P]=j>>8;
 8001c34:	89fb      	ldrh	r3, [r7, #14]
 8001c36:	0a1b      	lsrs	r3, r3, #8
 8001c38:	b29a      	uxth	r2, r3
 8001c3a:	687b      	ldr	r3, [r7, #4]
 8001c3c:	3332      	adds	r3, #50	@ 0x32
 8001c3e:	b2d2      	uxtb	r2, r2
 8001c40:	701a      	strb	r2, [r3, #0]
  buf[TCP_CHECKSUM_L_P]=j& 0xff;
 8001c42:	687b      	ldr	r3, [r7, #4]
 8001c44:	3333      	adds	r3, #51	@ 0x33
 8001c46:	89fa      	ldrh	r2, [r7, #14]
 8001c48:	b2d2      	uxtb	r2, r2
 8001c4a:	701a      	strb	r2, [r3, #0]
  enc28j60PacketSend(IP_HEADER_LEN+TCP_HEADER_LEN_PLAIN+ETH_HEADER_LEN,buf);
 8001c4c:	6879      	ldr	r1, [r7, #4]
 8001c4e:	2036      	movs	r0, #54	@ 0x36
 8001c50:	f7ff fbf9 	bl	8001446 <enc28j60PacketSend>
}
 8001c54:	bf00      	nop
 8001c56:	3710      	adds	r7, #16
 8001c58:	46bd      	mov	sp, r7
 8001c5a:	bd80      	pop	{r7, pc}

08001c5c <make_tcp_ack_with_data_noflags>:
// You can use this function only immediately after make_tcp_ack_from_any
// This is because this function will NOT modify the eth/ip/tcp header except for
// length and checksum
// You must set TCP_FLAGS before calling this
void make_tcp_ack_with_data_noflags(uint8_t *buf,uint16_t dlen)
{
 8001c5c:	b580      	push	{r7, lr}
 8001c5e:	b084      	sub	sp, #16
 8001c60:	af00      	add	r7, sp, #0
 8001c62:	6078      	str	r0, [r7, #4]
 8001c64:	460b      	mov	r3, r1
 8001c66:	807b      	strh	r3, [r7, #2]
  uint16_t j;
  // total length field in the IP header must be set:
  // 20 bytes IP + 20 bytes tcp (when no options) + len of data
  j=IP_HEADER_LEN+TCP_HEADER_LEN_PLAIN+dlen;
 8001c68:	887b      	ldrh	r3, [r7, #2]
 8001c6a:	3328      	adds	r3, #40	@ 0x28
 8001c6c:	81fb      	strh	r3, [r7, #14]
  buf[IP_TOTLEN_H_P]=j>>8;
 8001c6e:	89fb      	ldrh	r3, [r7, #14]
 8001c70:	0a1b      	lsrs	r3, r3, #8
 8001c72:	b29a      	uxth	r2, r3
 8001c74:	687b      	ldr	r3, [r7, #4]
 8001c76:	3310      	adds	r3, #16
 8001c78:	b2d2      	uxtb	r2, r2
 8001c7a:	701a      	strb	r2, [r3, #0]
  buf[IP_TOTLEN_L_P]=j& 0xff;
 8001c7c:	687b      	ldr	r3, [r7, #4]
 8001c7e:	3311      	adds	r3, #17
 8001c80:	89fa      	ldrh	r2, [r7, #14]
 8001c82:	b2d2      	uxtb	r2, r2
 8001c84:	701a      	strb	r2, [r3, #0]
  fill_ip_hdr_checksum(buf);
 8001c86:	6878      	ldr	r0, [r7, #4]
 8001c88:	f7ff fd9c 	bl	80017c4 <fill_ip_hdr_checksum>
  // zero the checksum
  buf[TCP_CHECKSUM_H_P]=0;
 8001c8c:	687b      	ldr	r3, [r7, #4]
 8001c8e:	3332      	adds	r3, #50	@ 0x32
 8001c90:	2200      	movs	r2, #0
 8001c92:	701a      	strb	r2, [r3, #0]
  buf[TCP_CHECKSUM_L_P]=0;
 8001c94:	687b      	ldr	r3, [r7, #4]
 8001c96:	3333      	adds	r3, #51	@ 0x33
 8001c98:	2200      	movs	r2, #0
 8001c9a:	701a      	strb	r2, [r3, #0]
  // calculate the checksum, len=8 (start from ip.src) + TCP_HEADER_LEN_PLAIN + data len
  j=checksum(&buf[IP_SRC_P], 8+TCP_HEADER_LEN_PLAIN+dlen,2);
 8001c9c:	687b      	ldr	r3, [r7, #4]
 8001c9e:	f103 001a 	add.w	r0, r3, #26
 8001ca2:	887b      	ldrh	r3, [r7, #2]
 8001ca4:	331c      	adds	r3, #28
 8001ca6:	b29b      	uxth	r3, r3
 8001ca8:	2202      	movs	r2, #2
 8001caa:	4619      	mov	r1, r3
 8001cac:	f7ff fc84 	bl	80015b8 <checksum>
 8001cb0:	4603      	mov	r3, r0
 8001cb2:	81fb      	strh	r3, [r7, #14]
  buf[TCP_CHECKSUM_H_P]=j>>8;
 8001cb4:	89fb      	ldrh	r3, [r7, #14]
 8001cb6:	0a1b      	lsrs	r3, r3, #8
 8001cb8:	b29a      	uxth	r2, r3
 8001cba:	687b      	ldr	r3, [r7, #4]
 8001cbc:	3332      	adds	r3, #50	@ 0x32
 8001cbe:	b2d2      	uxtb	r2, r2
 8001cc0:	701a      	strb	r2, [r3, #0]
  buf[TCP_CHECKSUM_L_P]=j& 0xff;
 8001cc2:	687b      	ldr	r3, [r7, #4]
 8001cc4:	3333      	adds	r3, #51	@ 0x33
 8001cc6:	89fa      	ldrh	r2, [r7, #14]
 8001cc8:	b2d2      	uxtb	r2, r2
 8001cca:	701a      	strb	r2, [r3, #0]
  enc28j60PacketSend(IP_HEADER_LEN+TCP_HEADER_LEN_PLAIN+dlen+ETH_HEADER_LEN,buf);
 8001ccc:	887b      	ldrh	r3, [r7, #2]
 8001cce:	3336      	adds	r3, #54	@ 0x36
 8001cd0:	b29b      	uxth	r3, r3
 8001cd2:	6879      	ldr	r1, [r7, #4]
 8001cd4:	4618      	mov	r0, r3
 8001cd6:	f7ff fbb6 	bl	8001446 <enc28j60PacketSend>
}
 8001cda:	bf00      	nop
 8001cdc:	3710      	adds	r7, #16
 8001cde:	46bd      	mov	sp, r7
 8001ce0:	bd80      	pop	{r7, pc}
	...

08001ce4 <www_server_reply>:
// dlen is the amount of tcp data (http data) we send in this packet
// You can use this function only immediately after make_tcp_ack_from_any
// This is because this function will NOT modify the eth/ip/tcp header except for
// length and checksum
void www_server_reply(uint8_t *buf,uint16_t dlen)
{
 8001ce4:	b580      	push	{r7, lr}
 8001ce6:	b082      	sub	sp, #8
 8001ce8:	af00      	add	r7, sp, #0
 8001cea:	6078      	str	r0, [r7, #4]
 8001cec:	460b      	mov	r3, r1
 8001cee:	807b      	strh	r3, [r7, #2]
  make_tcp_ack_from_any(buf,info_data_len,0); // send ack for http get
 8001cf0:	4b0a      	ldr	r3, [pc, #40]	@ (8001d1c <www_server_reply+0x38>)
 8001cf2:	881b      	ldrh	r3, [r3, #0]
 8001cf4:	b21b      	sxth	r3, r3
 8001cf6:	2200      	movs	r2, #0
 8001cf8:	4619      	mov	r1, r3
 8001cfa:	6878      	ldr	r0, [r7, #4]
 8001cfc:	f7ff ff50 	bl	8001ba0 <make_tcp_ack_from_any>
  // fill the header:
  // This code requires that we send only one data packet
  // because we keep no state information. We must therefore set
  // the fin here:
  buf[TCP_FLAGS_P]=TCP_FLAGS_ACK_V|TCP_FLAGS_PUSH_V|TCP_FLAGS_FIN_V;
 8001d00:	687b      	ldr	r3, [r7, #4]
 8001d02:	332f      	adds	r3, #47	@ 0x2f
 8001d04:	2219      	movs	r2, #25
 8001d06:	701a      	strb	r2, [r3, #0]
  make_tcp_ack_with_data_noflags(buf,dlen); // send data
 8001d08:	887b      	ldrh	r3, [r7, #2]
 8001d0a:	4619      	mov	r1, r3
 8001d0c:	6878      	ldr	r0, [r7, #4]
 8001d0e:	f7ff ffa5 	bl	8001c5c <make_tcp_ack_with_data_noflags>
}
 8001d12:	bf00      	nop
 8001d14:	3708      	adds	r7, #8
 8001d16:	46bd      	mov	sp, r7
 8001d18:	bd80      	pop	{r7, pc}
 8001d1a:	bf00      	nop
 8001d1c:	2000046c 	.word	0x2000046c

08001d20 <fill_buf_p>:

#if defined (NTP_client) ||  defined (WOL_client) || defined (UDP_client) || defined (TCP_client) || defined (PING_client)
// fill buffer with a prog-mem string - CHANGED TO NON PROGMEM!
void fill_buf_p(uint8_t *buf,uint16_t len, const char *s)
{   
 8001d20:	b580      	push	{r7, lr}
 8001d22:	b084      	sub	sp, #16
 8001d24:	af00      	add	r7, sp, #0
 8001d26:	60f8      	str	r0, [r7, #12]
 8001d28:	460b      	mov	r3, r1
 8001d2a:	607a      	str	r2, [r7, #4]
 8001d2c:	817b      	strh	r3, [r7, #10]
  // fill in tcp data at position pos
  //
  // with no options the data starts after the checksum + 2 more bytes (urgent ptr)
  memcpy(buf, s, len);
 8001d2e:	897b      	ldrh	r3, [r7, #10]
 8001d30:	461a      	mov	r2, r3
 8001d32:	6879      	ldr	r1, [r7, #4]
 8001d34:	68f8      	ldr	r0, [r7, #12]
 8001d36:	f005 fa27 	bl	8007188 <memcpy>

}
 8001d3a:	bf00      	nop
 8001d3c:	3710      	adds	r7, #16
 8001d3e:	46bd      	mov	sp, r7
 8001d40:	bd80      	pop	{r7, pc}

08001d42 <ES_PingCallback>:
  enc28j60PacketSend(98,buf);
}
#endif // PING_client

void __attribute__((weak)) ES_PingCallback(void)
{
 8001d42:	b480      	push	{r7}
 8001d44:	af00      	add	r7, sp, #0
}
 8001d46:	bf00      	nop
 8001d48:	46bd      	mov	sp, r7
 8001d4a:	bc80      	pop	{r7}
 8001d4c:	4770      	bx	lr
	...

08001d50 <client_arp_whohas>:
#endif // WOL_client

#if defined (NTP_client) || defined (UDP_client) || defined (TCP_client) || defined (PING_client)
// make a arp request
void client_arp_whohas(uint8_t *buf,uint8_t *ip_we_search)
{
 8001d50:	b580      	push	{r7, lr}
 8001d52:	b082      	sub	sp, #8
 8001d54:	af00      	add	r7, sp, #0
 8001d56:	6078      	str	r0, [r7, #4]
 8001d58:	6039      	str	r1, [r7, #0]
  //
  memset(&buf[ETH_DST_MAC], 0xFF, 6);
 8001d5a:	2206      	movs	r2, #6
 8001d5c:	21ff      	movs	r1, #255	@ 0xff
 8001d5e:	6878      	ldr	r0, [r7, #4]
 8001d60:	f005 f942 	bl	8006fe8 <memset>
  memcpy(&buf[ETH_SRC_MAC], macaddr, 6);
 8001d64:	687b      	ldr	r3, [r7, #4]
 8001d66:	3306      	adds	r3, #6
 8001d68:	4a1d      	ldr	r2, [pc, #116]	@ (8001de0 <client_arp_whohas+0x90>)
 8001d6a:	6810      	ldr	r0, [r2, #0]
 8001d6c:	6018      	str	r0, [r3, #0]
 8001d6e:	8892      	ldrh	r2, [r2, #4]
 8001d70:	809a      	strh	r2, [r3, #4]
  buf[ETH_TYPE_H_P] = ETHTYPE_ARP_H_V;
 8001d72:	687b      	ldr	r3, [r7, #4]
 8001d74:	330c      	adds	r3, #12
 8001d76:	2208      	movs	r2, #8
 8001d78:	701a      	strb	r2, [r3, #0]
  buf[ETH_TYPE_L_P] = ETHTYPE_ARP_L_V;
 8001d7a:	687b      	ldr	r3, [r7, #4]
 8001d7c:	330d      	adds	r3, #13
 8001d7e:	2206      	movs	r2, #6
 8001d80:	701a      	strb	r2, [r3, #0]
  fill_buf_p(&buf[ETH_ARP_P],8,arpreqhdr);
 8001d82:	687b      	ldr	r3, [r7, #4]
 8001d84:	330e      	adds	r3, #14
 8001d86:	4a17      	ldr	r2, [pc, #92]	@ (8001de4 <client_arp_whohas+0x94>)
 8001d88:	2108      	movs	r1, #8
 8001d8a:	4618      	mov	r0, r3
 8001d8c:	f7ff ffc8 	bl	8001d20 <fill_buf_p>
  
  memcpy(&buf[ETH_ARP_SRC_MAC_P], macaddr, 6);
 8001d90:	687b      	ldr	r3, [r7, #4]
 8001d92:	3316      	adds	r3, #22
 8001d94:	4a12      	ldr	r2, [pc, #72]	@ (8001de0 <client_arp_whohas+0x90>)
 8001d96:	6810      	ldr	r0, [r2, #0]
 8001d98:	6018      	str	r0, [r3, #0]
 8001d9a:	8892      	ldrh	r2, [r2, #4]
 8001d9c:	809a      	strh	r2, [r3, #4]
  memset(&buf[ETH_ARP_DST_MAC_P], 0, 6);
 8001d9e:	687b      	ldr	r3, [r7, #4]
 8001da0:	3320      	adds	r3, #32
 8001da2:	2206      	movs	r2, #6
 8001da4:	2100      	movs	r1, #0
 8001da6:	4618      	mov	r0, r3
 8001da8:	f005 f91e 	bl	8006fe8 <memset>

  memcpy(&buf[ETH_ARP_DST_IP_P], ip_we_search, 4);
 8001dac:	687b      	ldr	r3, [r7, #4]
 8001dae:	3326      	adds	r3, #38	@ 0x26
 8001db0:	683a      	ldr	r2, [r7, #0]
 8001db2:	6812      	ldr	r2, [r2, #0]
 8001db4:	601a      	str	r2, [r3, #0]
  memcpy(&buf[ETH_ARP_SRC_IP_P], ipaddr, 4);
 8001db6:	687b      	ldr	r3, [r7, #4]
 8001db8:	331c      	adds	r3, #28
 8001dba:	4a0b      	ldr	r2, [pc, #44]	@ (8001de8 <client_arp_whohas+0x98>)
 8001dbc:	6812      	ldr	r2, [r2, #0]
 8001dbe:	601a      	str	r2, [r3, #0]

  waitgwmac|=WGW_ACCEPT_ARP_REPLY;
 8001dc0:	4b0a      	ldr	r3, [pc, #40]	@ (8001dec <client_arp_whohas+0x9c>)
 8001dc2:	781b      	ldrb	r3, [r3, #0]
 8001dc4:	b2db      	uxtb	r3, r3
 8001dc6:	f043 0308 	orr.w	r3, r3, #8
 8001dca:	b2da      	uxtb	r2, r3
 8001dcc:	4b07      	ldr	r3, [pc, #28]	@ (8001dec <client_arp_whohas+0x9c>)
 8001dce:	701a      	strb	r2, [r3, #0]

  // 0x2a=42=len of packet
  enc28j60PacketSend(0x2a,buf);
 8001dd0:	6879      	ldr	r1, [r7, #4]
 8001dd2:	202a      	movs	r0, #42	@ 0x2a
 8001dd4:	f7ff fb37 	bl	8001446 <enc28j60PacketSend>
}
 8001dd8:	bf00      	nop
 8001dda:	3708      	adds	r7, #8
 8001ddc:	46bd      	mov	sp, r7
 8001dde:	bd80      	pop	{r7, pc}
 8001de0:	20000460 	.word	0x20000460
 8001de4:	080090c0 	.word	0x080090c0
 8001de8:	20000468 	.word	0x20000468
 8001dec:	2000000e 	.word	0x2000000e

08001df0 <client_store_gw_mac>:


// store the mac addr from an arp reply
// no len check here, you must first call eth_type_is_arp_and_my_ip
uint8_t client_store_gw_mac(uint8_t *buf)
{
 8001df0:	b580      	push	{r7, lr}
 8001df2:	b082      	sub	sp, #8
 8001df4:	af00      	add	r7, sp, #0
 8001df6:	6078      	str	r0, [r7, #4]
  if (memcmp(&buf[ETH_ARP_SRC_IP_P], gwip, 4)) {
 8001df8:	687b      	ldr	r3, [r7, #4]
 8001dfa:	331c      	adds	r3, #28
 8001dfc:	2204      	movs	r2, #4
 8001dfe:	490b      	ldr	r1, [pc, #44]	@ (8001e2c <client_store_gw_mac+0x3c>)
 8001e00:	4618      	mov	r0, r3
 8001e02:	f005 f8e1 	bl	8006fc8 <memcmp>
 8001e06:	4603      	mov	r3, r0
 8001e08:	2b00      	cmp	r3, #0
 8001e0a:	d001      	beq.n	8001e10 <client_store_gw_mac+0x20>
    return 0;
 8001e0c:	2300      	movs	r3, #0
 8001e0e:	e008      	b.n	8001e22 <client_store_gw_mac+0x32>
  }

  memcpy(gwmacaddr, &buf[ETH_ARP_SRC_MAC_P], 6);
 8001e10:	687b      	ldr	r3, [r7, #4]
 8001e12:	f103 0216 	add.w	r2, r3, #22
 8001e16:	4b06      	ldr	r3, [pc, #24]	@ (8001e30 <client_store_gw_mac+0x40>)
 8001e18:	6810      	ldr	r0, [r2, #0]
 8001e1a:	6018      	str	r0, [r3, #0]
 8001e1c:	8892      	ldrh	r2, [r2, #4]
 8001e1e:	809a      	strh	r2, [r3, #4]
  return 1;
 8001e20:	2301      	movs	r3, #1
}
 8001e22:	4618      	mov	r0, r3
 8001e24:	3708      	adds	r7, #8
 8001e26:	46bd      	mov	sp, r7
 8001e28:	bd80      	pop	{r7, pc}
 8001e2a:	bf00      	nop
 8001e2c:	20000450 	.word	0x20000450
 8001e30:	20000454 	.word	0x20000454

08001e34 <client_syn>:
}

#if defined (TCP_client)
// Make a tcp syn packet
void client_syn(uint8_t *buf,uint8_t srcport,uint8_t dstport_h,uint8_t dstport_l)
{
 8001e34:	b580      	push	{r7, lr}
 8001e36:	b084      	sub	sp, #16
 8001e38:	af00      	add	r7, sp, #0
 8001e3a:	6078      	str	r0, [r7, #4]
 8001e3c:	4608      	mov	r0, r1
 8001e3e:	4611      	mov	r1, r2
 8001e40:	461a      	mov	r2, r3
 8001e42:	4603      	mov	r3, r0
 8001e44:	70fb      	strb	r3, [r7, #3]
 8001e46:	460b      	mov	r3, r1
 8001e48:	70bb      	strb	r3, [r7, #2]
 8001e4a:	4613      	mov	r3, r2
 8001e4c:	707b      	strb	r3, [r7, #1]
  uint16_t ck;
  // -- make the main part of the eth/IP/tcp header:
  memcpy(&buf[ETH_DST_MAC], gwmacaddr, 6);
 8001e4e:	687b      	ldr	r3, [r7, #4]
 8001e50:	4a50      	ldr	r2, [pc, #320]	@ (8001f94 <client_syn+0x160>)
 8001e52:	6810      	ldr	r0, [r2, #0]
 8001e54:	6018      	str	r0, [r3, #0]
 8001e56:	8892      	ldrh	r2, [r2, #4]
 8001e58:	809a      	strh	r2, [r3, #4]
  memcpy(&buf[ETH_SRC_MAC], macaddr, 6);
 8001e5a:	687b      	ldr	r3, [r7, #4]
 8001e5c:	3306      	adds	r3, #6
 8001e5e:	4a4e      	ldr	r2, [pc, #312]	@ (8001f98 <client_syn+0x164>)
 8001e60:	6810      	ldr	r0, [r2, #0]
 8001e62:	6018      	str	r0, [r3, #0]
 8001e64:	8892      	ldrh	r2, [r2, #4]
 8001e66:	809a      	strh	r2, [r3, #4]
  buf[ETH_TYPE_H_P] = ETHTYPE_IP_H_V;
 8001e68:	687b      	ldr	r3, [r7, #4]
 8001e6a:	330c      	adds	r3, #12
 8001e6c:	2208      	movs	r2, #8
 8001e6e:	701a      	strb	r2, [r3, #0]
  buf[ETH_TYPE_L_P] = ETHTYPE_IP_L_V;
 8001e70:	687b      	ldr	r3, [r7, #4]
 8001e72:	330d      	adds	r3, #13
 8001e74:	2200      	movs	r2, #0
 8001e76:	701a      	strb	r2, [r3, #0]
  fill_buf_p(&buf[IP_P],9,iphdr);
 8001e78:	687b      	ldr	r3, [r7, #4]
 8001e7a:	330e      	adds	r3, #14
 8001e7c:	4a47      	ldr	r2, [pc, #284]	@ (8001f9c <client_syn+0x168>)
 8001e7e:	2109      	movs	r1, #9
 8001e80:	4618      	mov	r0, r3
 8001e82:	f7ff ff4d 	bl	8001d20 <fill_buf_p>
  
  buf[IP_TOTLEN_L_P]=44; // good for syn
 8001e86:	687b      	ldr	r3, [r7, #4]
 8001e88:	3311      	adds	r3, #17
 8001e8a:	222c      	movs	r2, #44	@ 0x2c
 8001e8c:	701a      	strb	r2, [r3, #0]
  buf[IP_PROTO_P]=IP_PROTO_TCP_V;
 8001e8e:	687b      	ldr	r3, [r7, #4]
 8001e90:	3317      	adds	r3, #23
 8001e92:	2206      	movs	r2, #6
 8001e94:	701a      	strb	r2, [r3, #0]
  memcpy(&buf[IP_DST_P], tcpsrvip, 4);
 8001e96:	687b      	ldr	r3, [r7, #4]
 8001e98:	331e      	adds	r3, #30
 8001e9a:	4a41      	ldr	r2, [pc, #260]	@ (8001fa0 <client_syn+0x16c>)
 8001e9c:	6812      	ldr	r2, [r2, #0]
 8001e9e:	601a      	str	r2, [r3, #0]
  memcpy(&buf[IP_SRC_P], ipaddr, 4);
 8001ea0:	687b      	ldr	r3, [r7, #4]
 8001ea2:	331a      	adds	r3, #26
 8001ea4:	4a3f      	ldr	r2, [pc, #252]	@ (8001fa4 <client_syn+0x170>)
 8001ea6:	6812      	ldr	r2, [r2, #0]
 8001ea8:	601a      	str	r2, [r3, #0]
  fill_ip_hdr_checksum(buf);
 8001eaa:	6878      	ldr	r0, [r7, #4]
 8001eac:	f7ff fc8a 	bl	80017c4 <fill_ip_hdr_checksum>

  buf[TCP_DST_PORT_H_P]=dstport_h;
 8001eb0:	687b      	ldr	r3, [r7, #4]
 8001eb2:	3324      	adds	r3, #36	@ 0x24
 8001eb4:	78ba      	ldrb	r2, [r7, #2]
 8001eb6:	701a      	strb	r2, [r3, #0]
  buf[TCP_DST_PORT_L_P]=dstport_l;
 8001eb8:	687b      	ldr	r3, [r7, #4]
 8001eba:	3325      	adds	r3, #37	@ 0x25
 8001ebc:	787a      	ldrb	r2, [r7, #1]
 8001ebe:	701a      	strb	r2, [r3, #0]
  buf[TCP_SRC_PORT_H_P]=TCPCLIENT_SRC_PORT_H;
 8001ec0:	687b      	ldr	r3, [r7, #4]
 8001ec2:	3322      	adds	r3, #34	@ 0x22
 8001ec4:	220b      	movs	r2, #11
 8001ec6:	701a      	strb	r2, [r3, #0]
  buf[TCP_SRC_PORT_L_P]=srcport; // lower 8 bit of src port
 8001ec8:	687b      	ldr	r3, [r7, #4]
 8001eca:	3323      	adds	r3, #35	@ 0x23
 8001ecc:	78fa      	ldrb	r2, [r7, #3]
 8001ece:	701a      	strb	r2, [r3, #0]
  // zero out sequence number and acknowledgement number
  memset(&buf[TCP_SEQ_H_P], 0, 8);
 8001ed0:	687b      	ldr	r3, [r7, #4]
 8001ed2:	3326      	adds	r3, #38	@ 0x26
 8001ed4:	2208      	movs	r2, #8
 8001ed6:	2100      	movs	r1, #0
 8001ed8:	4618      	mov	r0, r3
 8001eda:	f005 f885 	bl	8006fe8 <memset>
  // -- header ready 
  // put inital seq number
  // we step only the second byte, this allows us to send packts 
  // with 255 bytes 512 (if we step the initial seqnum by 2)
  // or 765 (step by 3)
  buf[TCP_SEQ_H_P+2]= seqnum; 
 8001ede:	687b      	ldr	r3, [r7, #4]
 8001ee0:	3328      	adds	r3, #40	@ 0x28
 8001ee2:	4a31      	ldr	r2, [pc, #196]	@ (8001fa8 <client_syn+0x174>)
 8001ee4:	7812      	ldrb	r2, [r2, #0]
 8001ee6:	701a      	strb	r2, [r3, #0]
  // step the inititial seq num by something we will not use
  // during this tcp session:
  seqnum+=3;
 8001ee8:	4b2f      	ldr	r3, [pc, #188]	@ (8001fa8 <client_syn+0x174>)
 8001eea:	781b      	ldrb	r3, [r3, #0]
 8001eec:	3303      	adds	r3, #3
 8001eee:	b2da      	uxtb	r2, r3
 8001ef0:	4b2d      	ldr	r3, [pc, #180]	@ (8001fa8 <client_syn+0x174>)
 8001ef2:	701a      	strb	r2, [r3, #0]
  buf[TCP_HEADER_LEN_P]=0x60; // 0x60=24 len: (0x60>>4) * 4
 8001ef4:	687b      	ldr	r3, [r7, #4]
 8001ef6:	332e      	adds	r3, #46	@ 0x2e
 8001ef8:	2260      	movs	r2, #96	@ 0x60
 8001efa:	701a      	strb	r2, [r3, #0]
  buf[TCP_FLAGS_P]=TCP_FLAGS_SYN_V;
 8001efc:	687b      	ldr	r3, [r7, #4]
 8001efe:	332f      	adds	r3, #47	@ 0x2f
 8001f00:	2202      	movs	r2, #2
 8001f02:	701a      	strb	r2, [r3, #0]
  // use a low window size otherwise we have to have
  // timers and can not just react on every packet.
  buf[TCP_WIN_SIZE]=0x4; // 1024=0x400, 768 = 0x300, initial window
 8001f04:	687b      	ldr	r3, [r7, #4]
 8001f06:	3330      	adds	r3, #48	@ 0x30
 8001f08:	2204      	movs	r2, #4
 8001f0a:	701a      	strb	r2, [r3, #0]
  buf[TCP_WIN_SIZE+1]=0x0;
 8001f0c:	687b      	ldr	r3, [r7, #4]
 8001f0e:	3331      	adds	r3, #49	@ 0x31
 8001f10:	2200      	movs	r2, #0
 8001f12:	701a      	strb	r2, [r3, #0]
  // zero the checksum
  buf[TCP_CHECKSUM_H_P]=0;
 8001f14:	687b      	ldr	r3, [r7, #4]
 8001f16:	3332      	adds	r3, #50	@ 0x32
 8001f18:	2200      	movs	r2, #0
 8001f1a:	701a      	strb	r2, [r3, #0]
  buf[TCP_CHECKSUM_L_P]=0;
 8001f1c:	687b      	ldr	r3, [r7, #4]
 8001f1e:	3333      	adds	r3, #51	@ 0x33
 8001f20:	2200      	movs	r2, #0
 8001f22:	701a      	strb	r2, [r3, #0]
  // urgent pointer
  buf[TCP_CHECKSUM_L_P+1]=0;
 8001f24:	687b      	ldr	r3, [r7, #4]
 8001f26:	3334      	adds	r3, #52	@ 0x34
 8001f28:	2200      	movs	r2, #0
 8001f2a:	701a      	strb	r2, [r3, #0]
  buf[TCP_CHECKSUM_L_P+2]=0;
 8001f2c:	687b      	ldr	r3, [r7, #4]
 8001f2e:	3335      	adds	r3, #53	@ 0x35
 8001f30:	2200      	movs	r2, #0
 8001f32:	701a      	strb	r2, [r3, #0]
  // MSS=768, must be more than 50% of the window size we use
  // 768 in hex is 0x300
  buf[TCP_OPTIONS_P]=2;
 8001f34:	687b      	ldr	r3, [r7, #4]
 8001f36:	3336      	adds	r3, #54	@ 0x36
 8001f38:	2202      	movs	r2, #2
 8001f3a:	701a      	strb	r2, [r3, #0]
  buf[TCP_OPTIONS_P+1]=4;
 8001f3c:	687b      	ldr	r3, [r7, #4]
 8001f3e:	3337      	adds	r3, #55	@ 0x37
 8001f40:	2204      	movs	r2, #4
 8001f42:	701a      	strb	r2, [r3, #0]
  buf[TCP_OPTIONS_P+2]=(CLIENTMSS>>8);
 8001f44:	687b      	ldr	r3, [r7, #4]
 8001f46:	3338      	adds	r3, #56	@ 0x38
 8001f48:	2202      	movs	r2, #2
 8001f4a:	701a      	strb	r2, [r3, #0]
  buf[TCP_OPTIONS_P+3]=CLIENTMSS & 0xff;
 8001f4c:	687b      	ldr	r3, [r7, #4]
 8001f4e:	3339      	adds	r3, #57	@ 0x39
 8001f50:	2226      	movs	r2, #38	@ 0x26
 8001f52:	701a      	strb	r2, [r3, #0]
  ck=checksum(&buf[IP_SRC_P], 8 +TCP_HEADER_LEN_PLAIN+4,2);
 8001f54:	687b      	ldr	r3, [r7, #4]
 8001f56:	331a      	adds	r3, #26
 8001f58:	2202      	movs	r2, #2
 8001f5a:	2120      	movs	r1, #32
 8001f5c:	4618      	mov	r0, r3
 8001f5e:	f7ff fb2b 	bl	80015b8 <checksum>
 8001f62:	4603      	mov	r3, r0
 8001f64:	81fb      	strh	r3, [r7, #14]
  buf[TCP_CHECKSUM_H_P]=ck>>8;
 8001f66:	89fb      	ldrh	r3, [r7, #14]
 8001f68:	0a1b      	lsrs	r3, r3, #8
 8001f6a:	b29a      	uxth	r2, r3
 8001f6c:	687b      	ldr	r3, [r7, #4]
 8001f6e:	3332      	adds	r3, #50	@ 0x32
 8001f70:	b2d2      	uxtb	r2, r2
 8001f72:	701a      	strb	r2, [r3, #0]
  buf[TCP_CHECKSUM_L_P]=ck& 0xff;
 8001f74:	687b      	ldr	r3, [r7, #4]
 8001f76:	3333      	adds	r3, #51	@ 0x33
 8001f78:	89fa      	ldrh	r2, [r7, #14]
 8001f7a:	b2d2      	uxtb	r2, r2
 8001f7c:	701a      	strb	r2, [r3, #0]
  // 4 is the tcp mss option:
  enc28j60PacketSend(IP_HEADER_LEN+TCP_HEADER_LEN_PLAIN+ETH_HEADER_LEN+4,buf);
 8001f7e:	6879      	ldr	r1, [r7, #4]
 8001f80:	203a      	movs	r0, #58	@ 0x3a
 8001f82:	f7ff fa60 	bl	8001446 <enc28j60PacketSend>
#if ETHERSHIELD_DEBUG
  ethershieldDebug( "Sent TCP Syn\n");
 8001f86:	4809      	ldr	r0, [pc, #36]	@ (8001fac <client_syn+0x178>)
 8001f88:	f7ff fb08 	bl	800159c <ethershieldDebug>
#endif
}
 8001f8c:	bf00      	nop
 8001f8e:	3710      	adds	r7, #16
 8001f90:	46bd      	mov	sp, r7
 8001f92:	bd80      	pop	{r7, pc}
 8001f94:	20000454 	.word	0x20000454
 8001f98:	20000460 	.word	0x20000460
 8001f9c:	080090c8 	.word	0x080090c8
 8001fa0:	2000045c 	.word	0x2000045c
 8001fa4:	20000468 	.word	0x20000468
 8001fa8:	2000000f 	.word	0x2000000f
 8001fac:	08008f0c 	.word	0x08008f0c

08001fb0 <packetloop_icmp_tcp>:
}
#endif // PING_client

// return 0 to just continue in the packet loop and return the position 
// of the tcp/udp data if there is tcp/udp data part
uint16_t packetloop_icmp_tcp(uint8_t * buf, uint16_t plen) {
 8001fb0:	b590      	push	{r4, r7, lr}
 8001fb2:	b085      	sub	sp, #20
 8001fb4:	af00      	add	r7, sp, #0
 8001fb6:	6078      	str	r0, [r7, #4]
 8001fb8:	460b      	mov	r3, r1
 8001fba:	807b      	strh	r3, [r7, #2]
  uint16_t len;
  #if defined(TCP_client)
  uint8_t send_fin = 0;
 8001fbc:	2300      	movs	r3, #0
 8001fbe:	737b      	strb	r3, [r7, #13]
  #endif

  //plen will be unequal to zero if there is a valid 
  // packet (without crc error):
  #if defined(NTP_client) || defined(UDP_client) || defined(TCP_client) || defined(PING_client)
  if (plen == 0) {
 8001fc0:	887b      	ldrh	r3, [r7, #2]
 8001fc2:	2b00      	cmp	r3, #0
 8001fc4:	d14f      	bne.n	8002066 <packetloop_icmp_tcp+0xb6>
    if ((waitgwmac & WGW_INITIAL_ARP || waitgwmac & WGW_REFRESHING) && delaycnt == 0 && enc28j60linkup()) {
 8001fc6:	4b98      	ldr	r3, [pc, #608]	@ (8002228 <packetloop_icmp_tcp+0x278>)
 8001fc8:	781b      	ldrb	r3, [r3, #0]
 8001fca:	b2db      	uxtb	r3, r3
 8001fcc:	f003 0301 	and.w	r3, r3, #1
 8001fd0:	2b00      	cmp	r3, #0
 8001fd2:	d106      	bne.n	8001fe2 <packetloop_icmp_tcp+0x32>
 8001fd4:	4b94      	ldr	r3, [pc, #592]	@ (8002228 <packetloop_icmp_tcp+0x278>)
 8001fd6:	781b      	ldrb	r3, [r3, #0]
 8001fd8:	b2db      	uxtb	r3, r3
 8001fda:	f003 0304 	and.w	r3, r3, #4
 8001fde:	2b00      	cmp	r3, #0
 8001fe0:	d00d      	beq.n	8001ffe <packetloop_icmp_tcp+0x4e>
 8001fe2:	4b92      	ldr	r3, [pc, #584]	@ (800222c <packetloop_icmp_tcp+0x27c>)
 8001fe4:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001fe8:	2b00      	cmp	r3, #0
 8001fea:	d108      	bne.n	8001ffe <packetloop_icmp_tcp+0x4e>
 8001fec:	f7ff fa1f 	bl	800142e <enc28j60linkup>
 8001ff0:	4603      	mov	r3, r0
 8001ff2:	2b00      	cmp	r3, #0
 8001ff4:	d003      	beq.n	8001ffe <packetloop_icmp_tcp+0x4e>
      client_arp_whohas(buf, gwip);
 8001ff6:	498e      	ldr	r1, [pc, #568]	@ (8002230 <packetloop_icmp_tcp+0x280>)
 8001ff8:	6878      	ldr	r0, [r7, #4]
 8001ffa:	f7ff fea9 	bl	8001d50 <client_arp_whohas>
    }
    delaycnt++;
 8001ffe:	4b8b      	ldr	r3, [pc, #556]	@ (800222c <packetloop_icmp_tcp+0x27c>)
 8002000:	f9b3 3000 	ldrsh.w	r3, [r3]
 8002004:	b29b      	uxth	r3, r3
 8002006:	3301      	adds	r3, #1
 8002008:	b29b      	uxth	r3, r3
 800200a:	b21a      	sxth	r2, r3
 800200c:	4b87      	ldr	r3, [pc, #540]	@ (800222c <packetloop_icmp_tcp+0x27c>)
 800200e:	801a      	strh	r2, [r3, #0]
    #if defined(TCP_client)
    if (tcp_client_state == 1 && (waitgwmac & WGW_HAVE_GW_MAC)) { // send a syn
 8002010:	4b88      	ldr	r3, [pc, #544]	@ (8002234 <packetloop_icmp_tcp+0x284>)
 8002012:	781b      	ldrb	r3, [r3, #0]
 8002014:	2b01      	cmp	r3, #1
 8002016:	d124      	bne.n	8002062 <packetloop_icmp_tcp+0xb2>
 8002018:	4b83      	ldr	r3, [pc, #524]	@ (8002228 <packetloop_icmp_tcp+0x278>)
 800201a:	781b      	ldrb	r3, [r3, #0]
 800201c:	b2db      	uxtb	r3, r3
 800201e:	f003 0302 	and.w	r3, r3, #2
 8002022:	2b00      	cmp	r3, #0
 8002024:	d01d      	beq.n	8002062 <packetloop_icmp_tcp+0xb2>
      tcp_client_state = 2;
 8002026:	4b83      	ldr	r3, [pc, #524]	@ (8002234 <packetloop_icmp_tcp+0x284>)
 8002028:	2202      	movs	r2, #2
 800202a:	701a      	strb	r2, [r3, #0]
      tcpclient_src_port_l++; // allocate a new port
 800202c:	4b82      	ldr	r3, [pc, #520]	@ (8002238 <packetloop_icmp_tcp+0x288>)
 800202e:	781b      	ldrb	r3, [r3, #0]
 8002030:	3301      	adds	r3, #1
 8002032:	b2da      	uxtb	r2, r3
 8002034:	4b80      	ldr	r3, [pc, #512]	@ (8002238 <packetloop_icmp_tcp+0x288>)
 8002036:	701a      	strb	r2, [r3, #0]
      // we encode our 3 bit fd into the src port this
      // way we get it back in every message that comes
      // from the server:
      client_syn(buf, ((tcp_fd << 5) | (0x1f & tcpclient_src_port_l)), tcp_client_port_h, tcp_client_port_l);
 8002038:	4b80      	ldr	r3, [pc, #512]	@ (800223c <packetloop_icmp_tcp+0x28c>)
 800203a:	781b      	ldrb	r3, [r3, #0]
 800203c:	b25b      	sxtb	r3, r3
 800203e:	015b      	lsls	r3, r3, #5
 8002040:	b25a      	sxtb	r2, r3
 8002042:	4b7d      	ldr	r3, [pc, #500]	@ (8002238 <packetloop_icmp_tcp+0x288>)
 8002044:	781b      	ldrb	r3, [r3, #0]
 8002046:	b25b      	sxtb	r3, r3
 8002048:	f003 031f 	and.w	r3, r3, #31
 800204c:	b25b      	sxtb	r3, r3
 800204e:	4313      	orrs	r3, r2
 8002050:	b25b      	sxtb	r3, r3
 8002052:	b2d9      	uxtb	r1, r3
 8002054:	4b7a      	ldr	r3, [pc, #488]	@ (8002240 <packetloop_icmp_tcp+0x290>)
 8002056:	781a      	ldrb	r2, [r3, #0]
 8002058:	4b7a      	ldr	r3, [pc, #488]	@ (8002244 <packetloop_icmp_tcp+0x294>)
 800205a:	781b      	ldrb	r3, [r3, #0]
 800205c:	6878      	ldr	r0, [r7, #4]
 800205e:	f7ff fee9 	bl	8001e34 <client_syn>
    }
    #endif
    return (0);
 8002062:	2300      	movs	r3, #0
 8002064:	e25b      	b.n	800251e <packetloop_icmp_tcp+0x56e>
  }
  #endif // NTP_client||UDP_client||TCP_client||PING_client
  // arp is broadcast if unknown but a host may also
  // verify the mac address by sending it to 
  // a unicast address.
  if (eth_type_is_arp_and_my_ip(buf, plen)) {
 8002066:	887b      	ldrh	r3, [r7, #2]
 8002068:	4619      	mov	r1, r3
 800206a:	6878      	ldr	r0, [r7, #4]
 800206c:	f7ff fb36 	bl	80016dc <eth_type_is_arp_and_my_ip>
 8002070:	4603      	mov	r3, r0
 8002072:	2b00      	cmp	r3, #0
 8002074:	d01e      	beq.n	80020b4 <packetloop_icmp_tcp+0x104>
    if (buf[ETH_ARP_OPCODE_L_P] == ETH_ARP_OPCODE_REQ_L_V) {
 8002076:	687b      	ldr	r3, [r7, #4]
 8002078:	3315      	adds	r3, #21
 800207a:	781b      	ldrb	r3, [r3, #0]
 800207c:	2b01      	cmp	r3, #1
 800207e:	d102      	bne.n	8002086 <packetloop_icmp_tcp+0xd6>
      // is it an arp request 
      make_arp_answer_from_request(buf);
 8002080:	6878      	ldr	r0, [r7, #4]
 8002082:	f7ff fc63 	bl	800194c <make_arp_answer_from_request>
    }
    #if defined(NTP_client) || defined(UDP_client) || defined(TCP_client) || defined(PING_client)
    if (waitgwmac & WGW_ACCEPT_ARP_REPLY && (buf[ETH_ARP_OPCODE_L_P] == ETH_ARP_OPCODE_REPLY_L_V)) {
 8002086:	4b68      	ldr	r3, [pc, #416]	@ (8002228 <packetloop_icmp_tcp+0x278>)
 8002088:	781b      	ldrb	r3, [r3, #0]
 800208a:	b2db      	uxtb	r3, r3
 800208c:	f003 0308 	and.w	r3, r3, #8
 8002090:	2b00      	cmp	r3, #0
 8002092:	d00d      	beq.n	80020b0 <packetloop_icmp_tcp+0x100>
 8002094:	687b      	ldr	r3, [r7, #4]
 8002096:	3315      	adds	r3, #21
 8002098:	781b      	ldrb	r3, [r3, #0]
 800209a:	2b02      	cmp	r3, #2
 800209c:	d108      	bne.n	80020b0 <packetloop_icmp_tcp+0x100>
      // is it an arp reply 
      if (client_store_gw_mac(buf)) {
 800209e:	6878      	ldr	r0, [r7, #4]
 80020a0:	f7ff fea6 	bl	8001df0 <client_store_gw_mac>
 80020a4:	4603      	mov	r3, r0
 80020a6:	2b00      	cmp	r3, #0
 80020a8:	d002      	beq.n	80020b0 <packetloop_icmp_tcp+0x100>
        waitgwmac = WGW_HAVE_GW_MAC;
 80020aa:	4b5f      	ldr	r3, [pc, #380]	@ (8002228 <packetloop_icmp_tcp+0x278>)
 80020ac:	2202      	movs	r2, #2
 80020ae:	701a      	strb	r2, [r3, #0]
      }
    }
    #endif // NTP_client||UDP_client||TCP_client||PING_client
    return (0);
 80020b0:	2300      	movs	r3, #0
 80020b2:	e234      	b.n	800251e <packetloop_icmp_tcp+0x56e>

  }
  // check if ip packets are for us:
  if (eth_type_is_ip_and_my_ip(buf, plen) == 0) {
 80020b4:	887b      	ldrh	r3, [r7, #2]
 80020b6:	4619      	mov	r1, r3
 80020b8:	6878      	ldr	r0, [r7, #4]
 80020ba:	f7ff fb39 	bl	8001730 <eth_type_is_ip_and_my_ip>
 80020be:	4603      	mov	r3, r0
 80020c0:	2b00      	cmp	r3, #0
 80020c2:	d101      	bne.n	80020c8 <packetloop_icmp_tcp+0x118>
    return (0);
 80020c4:	2300      	movs	r3, #0
 80020c6:	e22a      	b.n	800251e <packetloop_icmp_tcp+0x56e>
  }
  #ifdef NTP_client
  // TODO - does this work?
  // If NTP response, drop out to have it processed elsewhere
  if (buf[IP_PROTO_P] == IP_PROTO_UDP_V && buf[UDP_SRC_PORT_H_P] == 0 && buf[UDP_SRC_PORT_L_P] == 0x7b) {
 80020c8:	687b      	ldr	r3, [r7, #4]
 80020ca:	3317      	adds	r3, #23
 80020cc:	781b      	ldrb	r3, [r3, #0]
 80020ce:	2b11      	cmp	r3, #17
 80020d0:	d10b      	bne.n	80020ea <packetloop_icmp_tcp+0x13a>
 80020d2:	687b      	ldr	r3, [r7, #4]
 80020d4:	3322      	adds	r3, #34	@ 0x22
 80020d6:	781b      	ldrb	r3, [r3, #0]
 80020d8:	2b00      	cmp	r3, #0
 80020da:	d106      	bne.n	80020ea <packetloop_icmp_tcp+0x13a>
 80020dc:	687b      	ldr	r3, [r7, #4]
 80020de:	3323      	adds	r3, #35	@ 0x23
 80020e0:	781b      	ldrb	r3, [r3, #0]
 80020e2:	2b7b      	cmp	r3, #123	@ 0x7b
 80020e4:	d101      	bne.n	80020ea <packetloop_icmp_tcp+0x13a>
    return (UDP_DATA_P);
 80020e6:	232a      	movs	r3, #42	@ 0x2a
 80020e8:	e219      	b.n	800251e <packetloop_icmp_tcp+0x56e>
  }
  #endif // NTP_client
  #ifdef DNS_client
  // TODO - does this work?
  // If DNS response, drop out to have it processed elsewhere
  if (buf[IP_PROTO_P] == IP_PROTO_UDP_V && buf[UDP_SRC_PORT_H_P] == 0 && buf[UDP_SRC_PORT_L_P] == 53) {
 80020ea:	687b      	ldr	r3, [r7, #4]
 80020ec:	3317      	adds	r3, #23
 80020ee:	781b      	ldrb	r3, [r3, #0]
 80020f0:	2b11      	cmp	r3, #17
 80020f2:	d10b      	bne.n	800210c <packetloop_icmp_tcp+0x15c>
 80020f4:	687b      	ldr	r3, [r7, #4]
 80020f6:	3322      	adds	r3, #34	@ 0x22
 80020f8:	781b      	ldrb	r3, [r3, #0]
 80020fa:	2b00      	cmp	r3, #0
 80020fc:	d106      	bne.n	800210c <packetloop_icmp_tcp+0x15c>
 80020fe:	687b      	ldr	r3, [r7, #4]
 8002100:	3323      	adds	r3, #35	@ 0x23
 8002102:	781b      	ldrb	r3, [r3, #0]
 8002104:	2b35      	cmp	r3, #53	@ 0x35
 8002106:	d101      	bne.n	800210c <packetloop_icmp_tcp+0x15c>
    return (UDP_DATA_P);
 8002108:	232a      	movs	r3, #42	@ 0x2a
 800210a:	e208      	b.n	800251e <packetloop_icmp_tcp+0x56e>
  }
  #endif

  if (buf[IP_PROTO_P] == IP_PROTO_ICMP_V && buf[ICMP_TYPE_P] == ICMP_TYPE_ECHOREQUEST_V) {
 800210c:	687b      	ldr	r3, [r7, #4]
 800210e:	3317      	adds	r3, #23
 8002110:	781b      	ldrb	r3, [r3, #0]
 8002112:	2b01      	cmp	r3, #1
 8002114:	d117      	bne.n	8002146 <packetloop_icmp_tcp+0x196>
 8002116:	687b      	ldr	r3, [r7, #4]
 8002118:	3322      	adds	r3, #34	@ 0x22
 800211a:	781b      	ldrb	r3, [r3, #0]
 800211c:	2b08      	cmp	r3, #8
 800211e:	d112      	bne.n	8002146 <packetloop_icmp_tcp+0x196>
    if (icmp_callback) {
 8002120:	4b49      	ldr	r3, [pc, #292]	@ (8002248 <packetloop_icmp_tcp+0x298>)
 8002122:	681b      	ldr	r3, [r3, #0]
 8002124:	2b00      	cmp	r3, #0
 8002126:	d005      	beq.n	8002134 <packetloop_icmp_tcp+0x184>
      ( * icmp_callback)( & (buf[IP_SRC_P]));
 8002128:	4b47      	ldr	r3, [pc, #284]	@ (8002248 <packetloop_icmp_tcp+0x298>)
 800212a:	681b      	ldr	r3, [r3, #0]
 800212c:	687a      	ldr	r2, [r7, #4]
 800212e:	321a      	adds	r2, #26
 8002130:	4610      	mov	r0, r2
 8002132:	4798      	blx	r3
    }
    // a ping packet, let's send pong
    make_echo_reply_from_request(buf, plen);
 8002134:	887b      	ldrh	r3, [r7, #2]
 8002136:	4619      	mov	r1, r3
 8002138:	6878      	ldr	r0, [r7, #4]
 800213a:	f7ff fc3d 	bl	80019b8 <make_echo_reply_from_request>
    ES_PingCallback();
 800213e:	f7ff fe00 	bl	8001d42 <ES_PingCallback>
    return (0);
 8002142:	2300      	movs	r3, #0
 8002144:	e1eb      	b.n	800251e <packetloop_icmp_tcp+0x56e>
  }
  if (plen < 54 && buf[IP_PROTO_P] != IP_PROTO_TCP_V) {
 8002146:	887b      	ldrh	r3, [r7, #2]
 8002148:	2b35      	cmp	r3, #53	@ 0x35
 800214a:	d806      	bhi.n	800215a <packetloop_icmp_tcp+0x1aa>
 800214c:	687b      	ldr	r3, [r7, #4]
 800214e:	3317      	adds	r3, #23
 8002150:	781b      	ldrb	r3, [r3, #0]
 8002152:	2b06      	cmp	r3, #6
 8002154:	d001      	beq.n	800215a <packetloop_icmp_tcp+0x1aa>
    // smaller than the smallest TCP packet and not tcp port
    return (0);
 8002156:	2300      	movs	r3, #0
 8002158:	e1e1      	b.n	800251e <packetloop_icmp_tcp+0x56e>
  }
  #if defined(TCP_client)
  // a message for the tcp client, client_state is zero if client was never used
  if (buf[TCP_DST_PORT_H_P] == TCPCLIENT_SRC_PORT_H) {
 800215a:	687b      	ldr	r3, [r7, #4]
 800215c:	3324      	adds	r3, #36	@ 0x24
 800215e:	781b      	ldrb	r3, [r3, #0]
 8002160:	2b0b      	cmp	r3, #11
 8002162:	f040 817b 	bne.w	800245c <packetloop_icmp_tcp+0x4ac>
    #if defined(WWW_client)
    // workaround to pass pointer to www_client_internal..
    bufptr = buf;
 8002166:	4a39      	ldr	r2, [pc, #228]	@ (800224c <packetloop_icmp_tcp+0x29c>)
 8002168:	687b      	ldr	r3, [r7, #4]
 800216a:	6013      	str	r3, [r2, #0]
    #endif // WWW_client
    if (check_ip_message_is_from(buf, tcpsrvip) == 0) {
 800216c:	4938      	ldr	r1, [pc, #224]	@ (8002250 <packetloop_icmp_tcp+0x2a0>)
 800216e:	6878      	ldr	r0, [r7, #4]
 8002170:	f7ff fa9e 	bl	80016b0 <check_ip_message_is_from>
 8002174:	4603      	mov	r3, r0
 8002176:	2b00      	cmp	r3, #0
 8002178:	d101      	bne.n	800217e <packetloop_icmp_tcp+0x1ce>
      return (0);
 800217a:	2300      	movs	r3, #0
 800217c:	e1cf      	b.n	800251e <packetloop_icmp_tcp+0x56e>
    }
    // if we get a reset:
    if (buf[TCP_FLAGS_P] & TCP_FLAGS_RST_V) {
 800217e:	687b      	ldr	r3, [r7, #4]
 8002180:	332f      	adds	r3, #47	@ 0x2f
 8002182:	781b      	ldrb	r3, [r3, #0]
 8002184:	f003 0304 	and.w	r3, r3, #4
 8002188:	2b00      	cmp	r3, #0
 800218a:	d016      	beq.n	80021ba <packetloop_icmp_tcp+0x20a>
      if (client_tcp_result_callback) {
 800218c:	4b31      	ldr	r3, [pc, #196]	@ (8002254 <packetloop_icmp_tcp+0x2a4>)
 800218e:	681b      	ldr	r3, [r3, #0]
 8002190:	2b00      	cmp	r3, #0
 8002192:	d00d      	beq.n	80021b0 <packetloop_icmp_tcp+0x200>
        #if ETHERSHIELD_DEBUG
        ethershieldDebug("RST: Calling tcp client callback\n");
 8002194:	4830      	ldr	r0, [pc, #192]	@ (8002258 <packetloop_icmp_tcp+0x2a8>)
 8002196:	f7ff fa01 	bl	800159c <ethershieldDebug>
        #endif
          // parameters in client_tcp_result_callback: fd, status, buf_start, len
          ( * client_tcp_result_callback)((buf[TCP_DST_PORT_L_P] >> 5) & 0x7, 3, 0, 0);
 800219a:	4b2e      	ldr	r3, [pc, #184]	@ (8002254 <packetloop_icmp_tcp+0x2a4>)
 800219c:	681c      	ldr	r4, [r3, #0]
 800219e:	687b      	ldr	r3, [r7, #4]
 80021a0:	3325      	adds	r3, #37	@ 0x25
 80021a2:	781b      	ldrb	r3, [r3, #0]
 80021a4:	095b      	lsrs	r3, r3, #5
 80021a6:	b2d8      	uxtb	r0, r3
 80021a8:	2300      	movs	r3, #0
 80021aa:	2200      	movs	r2, #0
 80021ac:	2103      	movs	r1, #3
 80021ae:	47a0      	blx	r4
      }
      tcp_client_state = 5;
 80021b0:	4b20      	ldr	r3, [pc, #128]	@ (8002234 <packetloop_icmp_tcp+0x284>)
 80021b2:	2205      	movs	r2, #5
 80021b4:	701a      	strb	r2, [r3, #0]
      return (0);
 80021b6:	2300      	movs	r3, #0
 80021b8:	e1b1      	b.n	800251e <packetloop_icmp_tcp+0x56e>
    }

    // Determine what to do with packed depending on state

    len = get_tcp_data_len(buf);
 80021ba:	6878      	ldr	r0, [r7, #4]
 80021bc:	f7ff fc96 	bl	8001aec <get_tcp_data_len>
 80021c0:	4603      	mov	r3, r0
 80021c2:	81fb      	strh	r3, [r7, #14]
    if (tcp_client_state == 2) {
 80021c4:	4b1b      	ldr	r3, [pc, #108]	@ (8002234 <packetloop_icmp_tcp+0x284>)
 80021c6:	781b      	ldrb	r3, [r3, #0]
 80021c8:	2b02      	cmp	r3, #2
 80021ca:	d174      	bne.n	80022b6 <packetloop_icmp_tcp+0x306>
      if ((buf[TCP_FLAGS_P] & TCP_FLAGS_SYN_V) && (buf[TCP_FLAGS_P] & TCP_FLAGS_ACK_V)) {
 80021cc:	687b      	ldr	r3, [r7, #4]
 80021ce:	332f      	adds	r3, #47	@ 0x2f
 80021d0:	781b      	ldrb	r3, [r3, #0]
 80021d2:	f003 0302 	and.w	r3, r3, #2
 80021d6:	2b00      	cmp	r3, #0
 80021d8:	d055      	beq.n	8002286 <packetloop_icmp_tcp+0x2d6>
 80021da:	687b      	ldr	r3, [r7, #4]
 80021dc:	332f      	adds	r3, #47	@ 0x2f
 80021de:	781b      	ldrb	r3, [r3, #0]
 80021e0:	f003 0310 	and.w	r3, r3, #16
 80021e4:	2b00      	cmp	r3, #0
 80021e6:	d04e      	beq.n	8002286 <packetloop_icmp_tcp+0x2d6>
        #if ETHERSHIELD_DEBUG
        ethershieldDebug("Got SYNACK\n");
 80021e8:	481c      	ldr	r0, [pc, #112]	@ (800225c <packetloop_icmp_tcp+0x2ac>)
 80021ea:	f7ff f9d7 	bl	800159c <ethershieldDebug>
        #endif
        // synack, answer with ack
        make_tcp_ack_from_any(buf, 0, 0);
 80021ee:	2200      	movs	r2, #0
 80021f0:	2100      	movs	r1, #0
 80021f2:	6878      	ldr	r0, [r7, #4]
 80021f4:	f7ff fcd4 	bl	8001ba0 <make_tcp_ack_from_any>
        buf[TCP_FLAGS_P] = TCP_FLAGS_ACK_V | TCP_FLAGS_PUSH_V;
 80021f8:	687b      	ldr	r3, [r7, #4]
 80021fa:	332f      	adds	r3, #47	@ 0x2f
 80021fc:	2218      	movs	r2, #24
 80021fe:	701a      	strb	r2, [r3, #0]

        // Make a tcp message with data. When calling this function we must
        // still have a valid tcp-ack in the buffer. In other words
        // you have just called make_tcp_ack_from_any(buf,0).
        if (client_tcp_datafill_callback) {
 8002200:	4b17      	ldr	r3, [pc, #92]	@ (8002260 <packetloop_icmp_tcp+0x2b0>)
 8002202:	681b      	ldr	r3, [r3, #0]
 8002204:	2b00      	cmp	r3, #0
 8002206:	d02f      	beq.n	8002268 <packetloop_icmp_tcp+0x2b8>
          #if ETHERSHIELD_DEBUG
          ethershieldDebug("Datafill Callback\n");
 8002208:	4816      	ldr	r0, [pc, #88]	@ (8002264 <packetloop_icmp_tcp+0x2b4>)
 800220a:	f7ff f9c7 	bl	800159c <ethershieldDebug>
          #endif
          // in this case it is src port because the above 
          // make_tcp_ack_from_any swaps the dst and src port:
          len = ( * client_tcp_datafill_callback)((buf[TCP_SRC_PORT_L_P] >> 5) & 0x7);
 800220e:	4b14      	ldr	r3, [pc, #80]	@ (8002260 <packetloop_icmp_tcp+0x2b0>)
 8002210:	681b      	ldr	r3, [r3, #0]
 8002212:	687a      	ldr	r2, [r7, #4]
 8002214:	3223      	adds	r2, #35	@ 0x23
 8002216:	7812      	ldrb	r2, [r2, #0]
 8002218:	0952      	lsrs	r2, r2, #5
 800221a:	b2d2      	uxtb	r2, r2
 800221c:	4610      	mov	r0, r2
 800221e:	4798      	blx	r3
 8002220:	4603      	mov	r3, r0
 8002222:	81fb      	strh	r3, [r7, #14]
 8002224:	e022      	b.n	800226c <packetloop_icmp_tcp+0x2bc>
 8002226:	bf00      	nop
 8002228:	2000000e 	.word	0x2000000e
 800222c:	2000044c 	.word	0x2000044c
 8002230:	20000450 	.word	0x20000450
 8002234:	20000436 	.word	0x20000436
 8002238:	2000000d 	.word	0x2000000d
 800223c:	20000435 	.word	0x20000435
 8002240:	20000437 	.word	0x20000437
 8002244:	20000438 	.word	0x20000438
 8002248:	20000448 	.word	0x20000448
 800224c:	20000444 	.word	0x20000444
 8002250:	2000045c 	.word	0x2000045c
 8002254:	2000043c 	.word	0x2000043c
 8002258:	0800902c 	.word	0x0800902c
 800225c:	08009050 	.word	0x08009050
 8002260:	20000440 	.word	0x20000440
 8002264:	0800905c 	.word	0x0800905c
        } else {
          // this is just to prevent a crash
          len = 0;
 8002268:	2300      	movs	r3, #0
 800226a:	81fb      	strh	r3, [r7, #14]
        }
        tcp_client_state = 3;
 800226c:	4ba1      	ldr	r3, [pc, #644]	@ (80024f4 <packetloop_icmp_tcp+0x544>)
 800226e:	2203      	movs	r2, #3
 8002270:	701a      	strb	r2, [r3, #0]
        make_tcp_ack_with_data_noflags(buf, len);
 8002272:	89fb      	ldrh	r3, [r7, #14]
 8002274:	4619      	mov	r1, r3
 8002276:	6878      	ldr	r0, [r7, #4]
 8002278:	f7ff fcf0 	bl	8001c5c <make_tcp_ack_with_data_noflags>
        #if ETHERSHIELD_DEBUG
        ethershieldDebug("Send ACK\n");
 800227c:	489e      	ldr	r0, [pc, #632]	@ (80024f8 <packetloop_icmp_tcp+0x548>)
 800227e:	f7ff f98d 	bl	800159c <ethershieldDebug>
        #endif
        return (0);
 8002282:	2300      	movs	r3, #0
 8002284:	e14b      	b.n	800251e <packetloop_icmp_tcp+0x56e>
      } else {
        // reset only if we have sent a syn and don't get syn-ack back.
        // If we connect to a non listen port then we get a RST
        // which will be handeled above. In other words there is
        // normally no danger for an endless loop.
        tcp_client_state = 1; // retry
 8002286:	4b9b      	ldr	r3, [pc, #620]	@ (80024f4 <packetloop_icmp_tcp+0x544>)
 8002288:	2201      	movs	r2, #1
 800228a:	701a      	strb	r2, [r3, #0]
        // do not inform application layer as we retry.
        len++;
 800228c:	89fb      	ldrh	r3, [r7, #14]
 800228e:	3301      	adds	r3, #1
 8002290:	81fb      	strh	r3, [r7, #14]
        if (buf[TCP_FLAGS_P] & TCP_FLAGS_ACK_V) {
 8002292:	687b      	ldr	r3, [r7, #4]
 8002294:	332f      	adds	r3, #47	@ 0x2f
 8002296:	781b      	ldrb	r3, [r3, #0]
 8002298:	f003 0310 	and.w	r3, r3, #16
 800229c:	2b00      	cmp	r3, #0
 800229e:	d001      	beq.n	80022a4 <packetloop_icmp_tcp+0x2f4>
          // if packet was an ack then do not step the ack number
          len = 0;
 80022a0:	2300      	movs	r3, #0
 80022a2:	81fb      	strh	r3, [r7, #14]
        }
        // refuse and reset the connection
        make_tcp_ack_from_any(buf, len, TCP_FLAGS_RST_V);
 80022a4:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80022a8:	2204      	movs	r2, #4
 80022aa:	4619      	mov	r1, r3
 80022ac:	6878      	ldr	r0, [r7, #4]
 80022ae:	f7ff fc77 	bl	8001ba0 <make_tcp_ack_from_any>
        return (0);
 80022b2:	2300      	movs	r3, #0
 80022b4:	e133      	b.n	800251e <packetloop_icmp_tcp+0x56e>
      }
    }
    // in tcp_client_state==3 we will normally first get an empty
    // ack-packet and then a ack-packet with data.
    if (tcp_client_state == 4) { //&& len>0){ 
 80022b6:	4b8f      	ldr	r3, [pc, #572]	@ (80024f4 <packetloop_icmp_tcp+0x544>)
 80022b8:	781b      	ldrb	r3, [r3, #0]
 80022ba:	2b04      	cmp	r3, #4
 80022bc:	d14b      	bne.n	8002356 <packetloop_icmp_tcp+0x3a6>
      //                        ethershieldDebug( "First Data Packet\n");
      #endif
      // Removed this as there is no code to handle state 4. Only 1st packet will be available.
      //tcp_client_state=4;
      // return the data we received
      if (client_tcp_result_callback) {
 80022be:	4b8f      	ldr	r3, [pc, #572]	@ (80024fc <packetloop_icmp_tcp+0x54c>)
 80022c0:	681b      	ldr	r3, [r3, #0]
 80022c2:	2b00      	cmp	r3, #0
 80022c4:	d02c      	beq.n	8002320 <packetloop_icmp_tcp+0x370>
        tcpstart = TCP_DATA_START; // TCP_DATA_START is a formula
 80022c6:	687b      	ldr	r3, [r7, #4]
 80022c8:	332e      	adds	r3, #46	@ 0x2e
 80022ca:	781b      	ldrb	r3, [r3, #0]
 80022cc:	091b      	lsrs	r3, r3, #4
 80022ce:	b2db      	uxtb	r3, r3
 80022d0:	009b      	lsls	r3, r3, #2
 80022d2:	b29b      	uxth	r3, r3
 80022d4:	3322      	adds	r3, #34	@ 0x22
 80022d6:	817b      	strh	r3, [r7, #10]
        // out of buffer bounds check, needed in case of fragmented IP packets
        if (tcpstart > plen - 8) {
 80022d8:	887b      	ldrh	r3, [r7, #2]
 80022da:	1fda      	subs	r2, r3, #7
 80022dc:	897b      	ldrh	r3, [r7, #10]
 80022de:	429a      	cmp	r2, r3
 80022e0:	dc02      	bgt.n	80022e8 <packetloop_icmp_tcp+0x338>
          tcpstart = plen - 8; // dummy but save
 80022e2:	887b      	ldrh	r3, [r7, #2]
 80022e4:	3b08      	subs	r3, #8
 80022e6:	817b      	strh	r3, [r7, #10]
        }
        save_len = len;
 80022e8:	89fb      	ldrh	r3, [r7, #14]
 80022ea:	813b      	strh	r3, [r7, #8]
        if (tcpstart + len > plen) {
 80022ec:	897a      	ldrh	r2, [r7, #10]
 80022ee:	89fb      	ldrh	r3, [r7, #14]
 80022f0:	441a      	add	r2, r3
 80022f2:	887b      	ldrh	r3, [r7, #2]
 80022f4:	429a      	cmp	r2, r3
 80022f6:	dd03      	ble.n	8002300 <packetloop_icmp_tcp+0x350>
          save_len = plen - tcpstart;
 80022f8:	887a      	ldrh	r2, [r7, #2]
 80022fa:	897b      	ldrh	r3, [r7, #10]
 80022fc:	1ad3      	subs	r3, r2, r3
 80022fe:	813b      	strh	r3, [r7, #8]
        }
        #if ETHERSHIELD_DEBUG
        ethershieldDebug("Calling Result callback\n");
 8002300:	487f      	ldr	r0, [pc, #508]	@ (8002500 <packetloop_icmp_tcp+0x550>)
 8002302:	f7ff f94b 	bl	800159c <ethershieldDebug>
        #endif
        send_fin = ( * client_tcp_result_callback)((buf[TCP_DST_PORT_L_P] >> 5) & 0x7, 0, tcpstart, save_len);
 8002306:	4b7d      	ldr	r3, [pc, #500]	@ (80024fc <packetloop_icmp_tcp+0x54c>)
 8002308:	681c      	ldr	r4, [r3, #0]
 800230a:	687b      	ldr	r3, [r7, #4]
 800230c:	3325      	adds	r3, #37	@ 0x25
 800230e:	781b      	ldrb	r3, [r3, #0]
 8002310:	095b      	lsrs	r3, r3, #5
 8002312:	b2d8      	uxtb	r0, r3
 8002314:	893b      	ldrh	r3, [r7, #8]
 8002316:	897a      	ldrh	r2, [r7, #10]
 8002318:	2100      	movs	r1, #0
 800231a:	47a0      	blx	r4
 800231c:	4603      	mov	r3, r0
 800231e:	737b      	strb	r3, [r7, #13]

      }
      if (send_fin) {
 8002320:	7b7b      	ldrb	r3, [r7, #13]
 8002322:	2b00      	cmp	r3, #0
 8002324:	d00e      	beq.n	8002344 <packetloop_icmp_tcp+0x394>
        #if ETHERSHIELD_DEBUG
        ethershieldDebug("Send FIN\n");
 8002326:	4877      	ldr	r0, [pc, #476]	@ (8002504 <packetloop_icmp_tcp+0x554>)
 8002328:	f7ff f938 	bl	800159c <ethershieldDebug>
        #endif
        make_tcp_ack_from_any(buf, len, TCP_FLAGS_PUSH_V | TCP_FLAGS_FIN_V);
 800232c:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8002330:	2209      	movs	r2, #9
 8002332:	4619      	mov	r1, r3
 8002334:	6878      	ldr	r0, [r7, #4]
 8002336:	f7ff fc33 	bl	8001ba0 <make_tcp_ack_from_any>
        tcp_client_state = 5;
 800233a:	4b6e      	ldr	r3, [pc, #440]	@ (80024f4 <packetloop_icmp_tcp+0x544>)
 800233c:	2205      	movs	r2, #5
 800233e:	701a      	strb	r2, [r3, #0]
        return (0);
 8002340:	2300      	movs	r3, #0
 8002342:	e0ec      	b.n	800251e <packetloop_icmp_tcp+0x56e>
      }
      make_tcp_ack_from_any(buf, len, 0);
 8002344:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8002348:	2200      	movs	r2, #0
 800234a:	4619      	mov	r1, r3
 800234c:	6878      	ldr	r0, [r7, #4]
 800234e:	f7ff fc27 	bl	8001ba0 <make_tcp_ack_from_any>
      return (0);
 8002352:	2300      	movs	r3, #0
 8002354:	e0e3      	b.n	800251e <packetloop_icmp_tcp+0x56e>
    }
    if (tcp_client_state == 3) { // && len>0){ 
 8002356:	4b67      	ldr	r3, [pc, #412]	@ (80024f4 <packetloop_icmp_tcp+0x544>)
 8002358:	781b      	ldrb	r3, [r3, #0]
 800235a:	2b03      	cmp	r3, #3
 800235c:	d14e      	bne.n	80023fc <packetloop_icmp_tcp+0x44c>
      // our first real data packet
      #if ETHERSHIELD_DEBUG
      //                        ethershieldDebug( "First Data Packet\n");
      #endif
      // Removed this as there is no code to handle state 4. Only 1st packet will be available.
      tcp_client_state = 4;
 800235e:	4b65      	ldr	r3, [pc, #404]	@ (80024f4 <packetloop_icmp_tcp+0x544>)
 8002360:	2204      	movs	r2, #4
 8002362:	701a      	strb	r2, [r3, #0]
      // return the data we received
      if (client_tcp_result_callback) {
 8002364:	4b65      	ldr	r3, [pc, #404]	@ (80024fc <packetloop_icmp_tcp+0x54c>)
 8002366:	681b      	ldr	r3, [r3, #0]
 8002368:	2b00      	cmp	r3, #0
 800236a:	d02c      	beq.n	80023c6 <packetloop_icmp_tcp+0x416>
        tcpstart = TCP_DATA_START; // TCP_DATA_START is a formula
 800236c:	687b      	ldr	r3, [r7, #4]
 800236e:	332e      	adds	r3, #46	@ 0x2e
 8002370:	781b      	ldrb	r3, [r3, #0]
 8002372:	091b      	lsrs	r3, r3, #4
 8002374:	b2db      	uxtb	r3, r3
 8002376:	009b      	lsls	r3, r3, #2
 8002378:	b29b      	uxth	r3, r3
 800237a:	3322      	adds	r3, #34	@ 0x22
 800237c:	817b      	strh	r3, [r7, #10]
        // out of buffer bounds check, needed in case of fragmented IP packets
        if (tcpstart > plen - 8) {
 800237e:	887b      	ldrh	r3, [r7, #2]
 8002380:	1fda      	subs	r2, r3, #7
 8002382:	897b      	ldrh	r3, [r7, #10]
 8002384:	429a      	cmp	r2, r3
 8002386:	dc02      	bgt.n	800238e <packetloop_icmp_tcp+0x3de>
          tcpstart = plen - 8; // dummy but save
 8002388:	887b      	ldrh	r3, [r7, #2]
 800238a:	3b08      	subs	r3, #8
 800238c:	817b      	strh	r3, [r7, #10]
        }
        save_len = len;
 800238e:	89fb      	ldrh	r3, [r7, #14]
 8002390:	813b      	strh	r3, [r7, #8]
        if (tcpstart + len > plen) {
 8002392:	897a      	ldrh	r2, [r7, #10]
 8002394:	89fb      	ldrh	r3, [r7, #14]
 8002396:	441a      	add	r2, r3
 8002398:	887b      	ldrh	r3, [r7, #2]
 800239a:	429a      	cmp	r2, r3
 800239c:	dd03      	ble.n	80023a6 <packetloop_icmp_tcp+0x3f6>
          save_len = plen - tcpstart;
 800239e:	887a      	ldrh	r2, [r7, #2]
 80023a0:	897b      	ldrh	r3, [r7, #10]
 80023a2:	1ad3      	subs	r3, r2, r3
 80023a4:	813b      	strh	r3, [r7, #8]
        }
        #if ETHERSHIELD_DEBUG
        ethershieldDebug("Calling Result callback\n");
 80023a6:	4856      	ldr	r0, [pc, #344]	@ (8002500 <packetloop_icmp_tcp+0x550>)
 80023a8:	f7ff f8f8 	bl	800159c <ethershieldDebug>
        #endif
        send_fin = ( * client_tcp_result_callback)((buf[TCP_DST_PORT_L_P] >> 5) & 0x7, 0, tcpstart, save_len);
 80023ac:	4b53      	ldr	r3, [pc, #332]	@ (80024fc <packetloop_icmp_tcp+0x54c>)
 80023ae:	681c      	ldr	r4, [r3, #0]
 80023b0:	687b      	ldr	r3, [r7, #4]
 80023b2:	3325      	adds	r3, #37	@ 0x25
 80023b4:	781b      	ldrb	r3, [r3, #0]
 80023b6:	095b      	lsrs	r3, r3, #5
 80023b8:	b2d8      	uxtb	r0, r3
 80023ba:	893b      	ldrh	r3, [r7, #8]
 80023bc:	897a      	ldrh	r2, [r7, #10]
 80023be:	2100      	movs	r1, #0
 80023c0:	47a0      	blx	r4
 80023c2:	4603      	mov	r3, r0
 80023c4:	737b      	strb	r3, [r7, #13]

      }
      if (send_fin) {
 80023c6:	7b7b      	ldrb	r3, [r7, #13]
 80023c8:	2b00      	cmp	r3, #0
 80023ca:	d00e      	beq.n	80023ea <packetloop_icmp_tcp+0x43a>
        #if ETHERSHIELD_DEBUG
        ethershieldDebug("Send FIN\n");
 80023cc:	484d      	ldr	r0, [pc, #308]	@ (8002504 <packetloop_icmp_tcp+0x554>)
 80023ce:	f7ff f8e5 	bl	800159c <ethershieldDebug>
        #endif
        make_tcp_ack_from_any(buf, len, TCP_FLAGS_PUSH_V | TCP_FLAGS_FIN_V);
 80023d2:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80023d6:	2209      	movs	r2, #9
 80023d8:	4619      	mov	r1, r3
 80023da:	6878      	ldr	r0, [r7, #4]
 80023dc:	f7ff fbe0 	bl	8001ba0 <make_tcp_ack_from_any>
        tcp_client_state = 5;
 80023e0:	4b44      	ldr	r3, [pc, #272]	@ (80024f4 <packetloop_icmp_tcp+0x544>)
 80023e2:	2205      	movs	r2, #5
 80023e4:	701a      	strb	r2, [r3, #0]
        return (0);
 80023e6:	2300      	movs	r3, #0
 80023e8:	e099      	b.n	800251e <packetloop_icmp_tcp+0x56e>
      }
      make_tcp_ack_from_any(buf, len, 0);
 80023ea:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80023ee:	2200      	movs	r2, #0
 80023f0:	4619      	mov	r1, r3
 80023f2:	6878      	ldr	r0, [r7, #4]
 80023f4:	f7ff fbd4 	bl	8001ba0 <make_tcp_ack_from_any>
      return (0);
 80023f8:	2300      	movs	r3, #0
 80023fa:	e090      	b.n	800251e <packetloop_icmp_tcp+0x56e>
    }
    if (tcp_client_state == 5) {
 80023fc:	4b3d      	ldr	r3, [pc, #244]	@ (80024f4 <packetloop_icmp_tcp+0x544>)
 80023fe:	781b      	ldrb	r3, [r3, #0]
 8002400:	2b05      	cmp	r3, #5
 8002402:	d104      	bne.n	800240e <packetloop_icmp_tcp+0x45e>
      // no more ack
      #if ETHERSHIELD_DEBUG
      ethershieldDebug("No more ACK\n");
 8002404:	4840      	ldr	r0, [pc, #256]	@ (8002508 <packetloop_icmp_tcp+0x558>)
 8002406:	f7ff f8c9 	bl	800159c <ethershieldDebug>
      #endif
      return (0);
 800240a:	2300      	movs	r3, #0
 800240c:	e087      	b.n	800251e <packetloop_icmp_tcp+0x56e>
    }
    if (buf[TCP_FLAGS_P] & TCP_FLAGS_FIN_V) {
 800240e:	687b      	ldr	r3, [r7, #4]
 8002410:	332f      	adds	r3, #47	@ 0x2f
 8002412:	781b      	ldrb	r3, [r3, #0]
 8002414:	f003 0301 	and.w	r3, r3, #1
 8002418:	2b00      	cmp	r3, #0
 800241a:	d010      	beq.n	800243e <packetloop_icmp_tcp+0x48e>
      #if ETHERSHIELD_DEBUG
      ethershieldDebug("Terminated\n");
 800241c:	483b      	ldr	r0, [pc, #236]	@ (800250c <packetloop_icmp_tcp+0x55c>)
 800241e:	f7ff f8bd 	bl	800159c <ethershieldDebug>
      #endif
      make_tcp_ack_from_any(buf, len + 1, TCP_FLAGS_PUSH_V | TCP_FLAGS_FIN_V);
 8002422:	89fb      	ldrh	r3, [r7, #14]
 8002424:	3301      	adds	r3, #1
 8002426:	b29b      	uxth	r3, r3
 8002428:	b21b      	sxth	r3, r3
 800242a:	2209      	movs	r2, #9
 800242c:	4619      	mov	r1, r3
 800242e:	6878      	ldr	r0, [r7, #4]
 8002430:	f7ff fbb6 	bl	8001ba0 <make_tcp_ack_from_any>
      tcp_client_state = 5; // connection terminated
 8002434:	4b2f      	ldr	r3, [pc, #188]	@ (80024f4 <packetloop_icmp_tcp+0x544>)
 8002436:	2205      	movs	r2, #5
 8002438:	701a      	strb	r2, [r3, #0]
      return (0);
 800243a:	2300      	movs	r3, #0
 800243c:	e06f      	b.n	800251e <packetloop_icmp_tcp+0x56e>
    }
    // ack all data (the web page may be long):
    // if we just get a fragment then len will be zero
    // and we ack only once we have the full packet
    if (len > 0) {
 800243e:	89fb      	ldrh	r3, [r7, #14]
 8002440:	2b00      	cmp	r3, #0
 8002442:	d009      	beq.n	8002458 <packetloop_icmp_tcp+0x4a8>
      make_tcp_ack_from_any(buf, len, 0);
 8002444:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8002448:	2200      	movs	r2, #0
 800244a:	4619      	mov	r1, r3
 800244c:	6878      	ldr	r0, [r7, #4]
 800244e:	f7ff fba7 	bl	8001ba0 <make_tcp_ack_from_any>
      #if ETHERSHIELD_DEBUG
      ethershieldDebug("Send ACK\n");
 8002452:	4829      	ldr	r0, [pc, #164]	@ (80024f8 <packetloop_icmp_tcp+0x548>)
 8002454:	f7ff f8a2 	bl	800159c <ethershieldDebug>
      #endif
    }
    return (0);
 8002458:	2300      	movs	r3, #0
 800245a:	e060      	b.n	800251e <packetloop_icmp_tcp+0x56e>
  }
  #endif // WWW_client||TCP_client
  //
  // tcp port web server start
  if (buf[TCP_DST_PORT_H_P] == wwwport_h && buf[TCP_DST_PORT_L_P] == wwwport_l) {
 800245c:	687b      	ldr	r3, [r7, #4]
 800245e:	3324      	adds	r3, #36	@ 0x24
 8002460:	781a      	ldrb	r2, [r3, #0]
 8002462:	4b2b      	ldr	r3, [pc, #172]	@ (8002510 <packetloop_icmp_tcp+0x560>)
 8002464:	781b      	ldrb	r3, [r3, #0]
 8002466:	429a      	cmp	r2, r3
 8002468:	d158      	bne.n	800251c <packetloop_icmp_tcp+0x56c>
 800246a:	687b      	ldr	r3, [r7, #4]
 800246c:	3325      	adds	r3, #37	@ 0x25
 800246e:	781a      	ldrb	r2, [r3, #0]
 8002470:	4b28      	ldr	r3, [pc, #160]	@ (8002514 <packetloop_icmp_tcp+0x564>)
 8002472:	781b      	ldrb	r3, [r3, #0]
 8002474:	429a      	cmp	r2, r3
 8002476:	d151      	bne.n	800251c <packetloop_icmp_tcp+0x56c>
    if (buf[TCP_FLAGS_P] & TCP_FLAGS_SYN_V) {
 8002478:	687b      	ldr	r3, [r7, #4]
 800247a:	332f      	adds	r3, #47	@ 0x2f
 800247c:	781b      	ldrb	r3, [r3, #0]
 800247e:	f003 0302 	and.w	r3, r3, #2
 8002482:	2b00      	cmp	r3, #0
 8002484:	d004      	beq.n	8002490 <packetloop_icmp_tcp+0x4e0>
      make_tcp_synack_from_syn(buf);
 8002486:	6878      	ldr	r0, [r7, #4]
 8002488:	f7ff fac2 	bl	8001a10 <make_tcp_synack_from_syn>
      // make_tcp_synack_from_syn does already send the syn,ack
      return (0);
 800248c:	2300      	movs	r3, #0
 800248e:	e046      	b.n	800251e <packetloop_icmp_tcp+0x56e>
    }
    if (buf[TCP_FLAGS_P] & TCP_FLAGS_ACK_V) {
 8002490:	687b      	ldr	r3, [r7, #4]
 8002492:	332f      	adds	r3, #47	@ 0x2f
 8002494:	781b      	ldrb	r3, [r3, #0]
 8002496:	f003 0310 	and.w	r3, r3, #16
 800249a:	2b00      	cmp	r3, #0
 800249c:	d03e      	beq.n	800251c <packetloop_icmp_tcp+0x56c>
      info_data_len = get_tcp_data_len(buf);
 800249e:	6878      	ldr	r0, [r7, #4]
 80024a0:	f7ff fb24 	bl	8001aec <get_tcp_data_len>
 80024a4:	4603      	mov	r3, r0
 80024a6:	461a      	mov	r2, r3
 80024a8:	4b1b      	ldr	r3, [pc, #108]	@ (8002518 <packetloop_icmp_tcp+0x568>)
 80024aa:	801a      	strh	r2, [r3, #0]
      // we can possibly have no data, just ack:
      // Here we misuse plen for something else to save a variable.
      // plen is now the position of start of the tcp user data.
      if (info_data_len == 0) {
 80024ac:	4b1a      	ldr	r3, [pc, #104]	@ (8002518 <packetloop_icmp_tcp+0x568>)
 80024ae:	881b      	ldrh	r3, [r3, #0]
 80024b0:	2b00      	cmp	r3, #0
 80024b2:	d10d      	bne.n	80024d0 <packetloop_icmp_tcp+0x520>
        if (buf[TCP_FLAGS_P] & TCP_FLAGS_FIN_V) {
 80024b4:	687b      	ldr	r3, [r7, #4]
 80024b6:	332f      	adds	r3, #47	@ 0x2f
 80024b8:	781b      	ldrb	r3, [r3, #0]
 80024ba:	f003 0301 	and.w	r3, r3, #1
 80024be:	2b00      	cmp	r3, #0
 80024c0:	d004      	beq.n	80024cc <packetloop_icmp_tcp+0x51c>
          // finack, answer with ack
          make_tcp_ack_from_any(buf, 0, 0);
 80024c2:	2200      	movs	r2, #0
 80024c4:	2100      	movs	r1, #0
 80024c6:	6878      	ldr	r0, [r7, #4]
 80024c8:	f7ff fb6a 	bl	8001ba0 <make_tcp_ack_from_any>
        }
        // just an ack with no data, wait for next packet
        return (0);
 80024cc:	2300      	movs	r3, #0
 80024ce:	e026      	b.n	800251e <packetloop_icmp_tcp+0x56e>
      }
      // Here we misuse len for something else to save a variable
      len = TCP_DATA_START; // TCP_DATA_START is a formula
 80024d0:	687b      	ldr	r3, [r7, #4]
 80024d2:	332e      	adds	r3, #46	@ 0x2e
 80024d4:	781b      	ldrb	r3, [r3, #0]
 80024d6:	091b      	lsrs	r3, r3, #4
 80024d8:	b2db      	uxtb	r3, r3
 80024da:	009b      	lsls	r3, r3, #2
 80024dc:	b29b      	uxth	r3, r3
 80024de:	3322      	adds	r3, #34	@ 0x22
 80024e0:	81fb      	strh	r3, [r7, #14]
      // check for data corruption
      if (len > plen - 8) {
 80024e2:	887b      	ldrh	r3, [r7, #2]
 80024e4:	1fda      	subs	r2, r3, #7
 80024e6:	89fb      	ldrh	r3, [r7, #14]
 80024e8:	429a      	cmp	r2, r3
 80024ea:	dc01      	bgt.n	80024f0 <packetloop_icmp_tcp+0x540>
        return (0);
 80024ec:	2300      	movs	r3, #0
 80024ee:	e016      	b.n	800251e <packetloop_icmp_tcp+0x56e>
      }
      return (len);
 80024f0:	89fb      	ldrh	r3, [r7, #14]
 80024f2:	e014      	b.n	800251e <packetloop_icmp_tcp+0x56e>
 80024f4:	20000436 	.word	0x20000436
 80024f8:	08009070 	.word	0x08009070
 80024fc:	2000043c 	.word	0x2000043c
 8002500:	0800907c 	.word	0x0800907c
 8002504:	08009098 	.word	0x08009098
 8002508:	080090a4 	.word	0x080090a4
 800250c:	080090b4 	.word	0x080090b4
 8002510:	20000434 	.word	0x20000434
 8002514:	2000000c 	.word	0x2000000c
 8002518:	2000046c 	.word	0x2000046c
    }
  }
  return (0);
 800251c:	2300      	movs	r3, #0
}
 800251e:	4618      	mov	r0, r3
 8002520:	3714      	adds	r7, #20
 8002522:	46bd      	mov	sp, r7
 8002524:	bd90      	pop	{r4, r7, pc}
 8002526:	bf00      	nop

08002528 <main>:
 8002528:	b580      	push	{r7, lr}
 800252a:	af00      	add	r7, sp, #0
 800252c:	4b15      	ldr	r3, [pc, #84]	@ (8002584 <main+0x5c>)
 800252e:	681b      	ldr	r3, [r3, #0]
 8002530:	6858      	ldr	r0, [r3, #4]
 8002532:	2300      	movs	r3, #0
 8002534:	2202      	movs	r2, #2
 8002536:	2100      	movs	r1, #0
 8002538:	f004 fa98 	bl	8006a6c <setvbuf>
 800253c:	f000 fce0 	bl	8002f00 <HAL_Init>
 8002540:	f000 f826 	bl	8002590 <SystemClock_Config>
 8002544:	f000 f940 	bl	80027c8 <MX_GPIO_Init>
 8002548:	f000 f918 	bl	800277c <MX_DMA_Init>
 800254c:	f000 f892 	bl	8002674 <MX_TIM3_Init>
 8002550:	f000 f85a 	bl	8002608 <MX_SPI1_Init>
 8002554:	f000 f8e8 	bl	8002728 <MX_USART2_UART_Init>
 8002558:	4b0b      	ldr	r3, [pc, #44]	@ (8002588 <main+0x60>)
 800255a:	2200      	movs	r2, #0
 800255c:	601a      	str	r2, [r3, #0]
 800255e:	4b0a      	ldr	r3, [pc, #40]	@ (8002588 <main+0x60>)
 8002560:	2200      	movs	r2, #0
 8002562:	605a      	str	r2, [r3, #4]
 8002564:	4b08      	ldr	r3, [pc, #32]	@ (8002588 <main+0x60>)
 8002566:	2200      	movs	r2, #0
 8002568:	609a      	str	r2, [r3, #8]
 800256a:	4b07      	ldr	r3, [pc, #28]	@ (8002588 <main+0x60>)
 800256c:	2200      	movs	r2, #0
 800256e:	60da      	str	r2, [r3, #12]
 8002570:	2201      	movs	r2, #1
 8002572:	2140      	movs	r1, #64	@ 0x40
 8002574:	4805      	ldr	r0, [pc, #20]	@ (800258c <main+0x64>)
 8002576:	f001 f9ef 	bl	8003958 <HAL_GPIO_WritePin>
 800257a:	f7fe fba3 	bl	8000cc4 <ENC28J60_test>
 800257e:	bf00      	nop
 8002580:	e7fd      	b.n	800257e <main+0x56>
 8002582:	bf00      	nop
 8002584:	2000002c 	.word	0x2000002c
 8002588:	200005e0 	.word	0x200005e0
 800258c:	40010c00 	.word	0x40010c00

08002590 <SystemClock_Config>:
 8002590:	b580      	push	{r7, lr}
 8002592:	b090      	sub	sp, #64	@ 0x40
 8002594:	af00      	add	r7, sp, #0
 8002596:	f107 0318 	add.w	r3, r7, #24
 800259a:	2228      	movs	r2, #40	@ 0x28
 800259c:	2100      	movs	r1, #0
 800259e:	4618      	mov	r0, r3
 80025a0:	f004 fd22 	bl	8006fe8 <memset>
 80025a4:	1d3b      	adds	r3, r7, #4
 80025a6:	2200      	movs	r2, #0
 80025a8:	601a      	str	r2, [r3, #0]
 80025aa:	605a      	str	r2, [r3, #4]
 80025ac:	609a      	str	r2, [r3, #8]
 80025ae:	60da      	str	r2, [r3, #12]
 80025b0:	611a      	str	r2, [r3, #16]
 80025b2:	2302      	movs	r3, #2
 80025b4:	61bb      	str	r3, [r7, #24]
 80025b6:	2301      	movs	r3, #1
 80025b8:	62bb      	str	r3, [r7, #40]	@ 0x28
 80025ba:	2310      	movs	r3, #16
 80025bc:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80025be:	2300      	movs	r3, #0
 80025c0:	637b      	str	r3, [r7, #52]	@ 0x34
 80025c2:	f107 0318 	add.w	r3, r7, #24
 80025c6:	4618      	mov	r0, r3
 80025c8:	f001 fa00 	bl	80039cc <HAL_RCC_OscConfig>
 80025cc:	4603      	mov	r3, r0
 80025ce:	2b00      	cmp	r3, #0
 80025d0:	d001      	beq.n	80025d6 <SystemClock_Config+0x46>
 80025d2:	f000 f9c1 	bl	8002958 <Error_Handler>
 80025d6:	230f      	movs	r3, #15
 80025d8:	607b      	str	r3, [r7, #4]
 80025da:	2300      	movs	r3, #0
 80025dc:	60bb      	str	r3, [r7, #8]
 80025de:	2300      	movs	r3, #0
 80025e0:	60fb      	str	r3, [r7, #12]
 80025e2:	2300      	movs	r3, #0
 80025e4:	613b      	str	r3, [r7, #16]
 80025e6:	2300      	movs	r3, #0
 80025e8:	617b      	str	r3, [r7, #20]
 80025ea:	1d3b      	adds	r3, r7, #4
 80025ec:	2100      	movs	r1, #0
 80025ee:	4618      	mov	r0, r3
 80025f0:	f001 fc6e 	bl	8003ed0 <HAL_RCC_ClockConfig>
 80025f4:	4603      	mov	r3, r0
 80025f6:	2b00      	cmp	r3, #0
 80025f8:	d001      	beq.n	80025fe <SystemClock_Config+0x6e>
 80025fa:	f000 f9ad 	bl	8002958 <Error_Handler>
 80025fe:	bf00      	nop
 8002600:	3740      	adds	r7, #64	@ 0x40
 8002602:	46bd      	mov	sp, r7
 8002604:	bd80      	pop	{r7, pc}
	...

08002608 <MX_SPI1_Init>:
 8002608:	b580      	push	{r7, lr}
 800260a:	af00      	add	r7, sp, #0
 800260c:	4b17      	ldr	r3, [pc, #92]	@ (800266c <MX_SPI1_Init+0x64>)
 800260e:	4a18      	ldr	r2, [pc, #96]	@ (8002670 <MX_SPI1_Init+0x68>)
 8002610:	601a      	str	r2, [r3, #0]
 8002612:	4b16      	ldr	r3, [pc, #88]	@ (800266c <MX_SPI1_Init+0x64>)
 8002614:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8002618:	605a      	str	r2, [r3, #4]
 800261a:	4b14      	ldr	r3, [pc, #80]	@ (800266c <MX_SPI1_Init+0x64>)
 800261c:	2200      	movs	r2, #0
 800261e:	609a      	str	r2, [r3, #8]
 8002620:	4b12      	ldr	r3, [pc, #72]	@ (800266c <MX_SPI1_Init+0x64>)
 8002622:	2200      	movs	r2, #0
 8002624:	60da      	str	r2, [r3, #12]
 8002626:	4b11      	ldr	r3, [pc, #68]	@ (800266c <MX_SPI1_Init+0x64>)
 8002628:	2200      	movs	r2, #0
 800262a:	611a      	str	r2, [r3, #16]
 800262c:	4b0f      	ldr	r3, [pc, #60]	@ (800266c <MX_SPI1_Init+0x64>)
 800262e:	2200      	movs	r2, #0
 8002630:	615a      	str	r2, [r3, #20]
 8002632:	4b0e      	ldr	r3, [pc, #56]	@ (800266c <MX_SPI1_Init+0x64>)
 8002634:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002638:	619a      	str	r2, [r3, #24]
 800263a:	4b0c      	ldr	r3, [pc, #48]	@ (800266c <MX_SPI1_Init+0x64>)
 800263c:	2200      	movs	r2, #0
 800263e:	61da      	str	r2, [r3, #28]
 8002640:	4b0a      	ldr	r3, [pc, #40]	@ (800266c <MX_SPI1_Init+0x64>)
 8002642:	2200      	movs	r2, #0
 8002644:	621a      	str	r2, [r3, #32]
 8002646:	4b09      	ldr	r3, [pc, #36]	@ (800266c <MX_SPI1_Init+0x64>)
 8002648:	2200      	movs	r2, #0
 800264a:	625a      	str	r2, [r3, #36]	@ 0x24
 800264c:	4b07      	ldr	r3, [pc, #28]	@ (800266c <MX_SPI1_Init+0x64>)
 800264e:	2200      	movs	r2, #0
 8002650:	629a      	str	r2, [r3, #40]	@ 0x28
 8002652:	4b06      	ldr	r3, [pc, #24]	@ (800266c <MX_SPI1_Init+0x64>)
 8002654:	220a      	movs	r2, #10
 8002656:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002658:	4804      	ldr	r0, [pc, #16]	@ (800266c <MX_SPI1_Init+0x64>)
 800265a:	f001 fdc7 	bl	80041ec <HAL_SPI_Init>
 800265e:	4603      	mov	r3, r0
 8002660:	2b00      	cmp	r3, #0
 8002662:	d001      	beq.n	8002668 <MX_SPI1_Init+0x60>
 8002664:	f000 f978 	bl	8002958 <Error_Handler>
 8002668:	bf00      	nop
 800266a:	bd80      	pop	{r7, pc}
 800266c:	20000470 	.word	0x20000470
 8002670:	40013000 	.word	0x40013000

08002674 <MX_TIM3_Init>:
 8002674:	b580      	push	{r7, lr}
 8002676:	b08a      	sub	sp, #40	@ 0x28
 8002678:	af00      	add	r7, sp, #0
 800267a:	f107 0320 	add.w	r3, r7, #32
 800267e:	2200      	movs	r2, #0
 8002680:	601a      	str	r2, [r3, #0]
 8002682:	605a      	str	r2, [r3, #4]
 8002684:	1d3b      	adds	r3, r7, #4
 8002686:	2200      	movs	r2, #0
 8002688:	601a      	str	r2, [r3, #0]
 800268a:	605a      	str	r2, [r3, #4]
 800268c:	609a      	str	r2, [r3, #8]
 800268e:	60da      	str	r2, [r3, #12]
 8002690:	611a      	str	r2, [r3, #16]
 8002692:	615a      	str	r2, [r3, #20]
 8002694:	619a      	str	r2, [r3, #24]
 8002696:	4b22      	ldr	r3, [pc, #136]	@ (8002720 <MX_TIM3_Init+0xac>)
 8002698:	4a22      	ldr	r2, [pc, #136]	@ (8002724 <MX_TIM3_Init+0xb0>)
 800269a:	601a      	str	r2, [r3, #0]
 800269c:	4b20      	ldr	r3, [pc, #128]	@ (8002720 <MX_TIM3_Init+0xac>)
 800269e:	2200      	movs	r2, #0
 80026a0:	605a      	str	r2, [r3, #4]
 80026a2:	4b1f      	ldr	r3, [pc, #124]	@ (8002720 <MX_TIM3_Init+0xac>)
 80026a4:	2200      	movs	r2, #0
 80026a6:	609a      	str	r2, [r3, #8]
 80026a8:	4b1d      	ldr	r3, [pc, #116]	@ (8002720 <MX_TIM3_Init+0xac>)
 80026aa:	f644 6220 	movw	r2, #20000	@ 0x4e20
 80026ae:	60da      	str	r2, [r3, #12]
 80026b0:	4b1b      	ldr	r3, [pc, #108]	@ (8002720 <MX_TIM3_Init+0xac>)
 80026b2:	2200      	movs	r2, #0
 80026b4:	611a      	str	r2, [r3, #16]
 80026b6:	4b1a      	ldr	r3, [pc, #104]	@ (8002720 <MX_TIM3_Init+0xac>)
 80026b8:	2200      	movs	r2, #0
 80026ba:	619a      	str	r2, [r3, #24]
 80026bc:	4818      	ldr	r0, [pc, #96]	@ (8002720 <MX_TIM3_Init+0xac>)
 80026be:	f002 f976 	bl	80049ae <HAL_TIM_PWM_Init>
 80026c2:	4603      	mov	r3, r0
 80026c4:	2b00      	cmp	r3, #0
 80026c6:	d001      	beq.n	80026cc <MX_TIM3_Init+0x58>
 80026c8:	f000 f946 	bl	8002958 <Error_Handler>
 80026cc:	2300      	movs	r3, #0
 80026ce:	623b      	str	r3, [r7, #32]
 80026d0:	2300      	movs	r3, #0
 80026d2:	627b      	str	r3, [r7, #36]	@ 0x24
 80026d4:	f107 0320 	add.w	r3, r7, #32
 80026d8:	4619      	mov	r1, r3
 80026da:	4811      	ldr	r0, [pc, #68]	@ (8002720 <MX_TIM3_Init+0xac>)
 80026dc:	f002 fd8c 	bl	80051f8 <HAL_TIMEx_MasterConfigSynchronization>
 80026e0:	4603      	mov	r3, r0
 80026e2:	2b00      	cmp	r3, #0
 80026e4:	d001      	beq.n	80026ea <MX_TIM3_Init+0x76>
 80026e6:	f000 f937 	bl	8002958 <Error_Handler>
 80026ea:	2360      	movs	r3, #96	@ 0x60
 80026ec:	607b      	str	r3, [r7, #4]
 80026ee:	2300      	movs	r3, #0
 80026f0:	60bb      	str	r3, [r7, #8]
 80026f2:	2300      	movs	r3, #0
 80026f4:	60fb      	str	r3, [r7, #12]
 80026f6:	2300      	movs	r3, #0
 80026f8:	617b      	str	r3, [r7, #20]
 80026fa:	1d3b      	adds	r3, r7, #4
 80026fc:	2204      	movs	r2, #4
 80026fe:	4619      	mov	r1, r3
 8002700:	4807      	ldr	r0, [pc, #28]	@ (8002720 <MX_TIM3_Init+0xac>)
 8002702:	f002 fa93 	bl	8004c2c <HAL_TIM_PWM_ConfigChannel>
 8002706:	4603      	mov	r3, r0
 8002708:	2b00      	cmp	r3, #0
 800270a:	d001      	beq.n	8002710 <MX_TIM3_Init+0x9c>
 800270c:	f000 f924 	bl	8002958 <Error_Handler>
 8002710:	4803      	ldr	r0, [pc, #12]	@ (8002720 <MX_TIM3_Init+0xac>)
 8002712:	f000 fa29 	bl	8002b68 <HAL_TIM_MspPostInit>
 8002716:	bf00      	nop
 8002718:	3728      	adds	r7, #40	@ 0x28
 800271a:	46bd      	mov	sp, r7
 800271c:	bd80      	pop	{r7, pc}
 800271e:	bf00      	nop
 8002720:	20000550 	.word	0x20000550
 8002724:	40000400 	.word	0x40000400

08002728 <MX_USART2_UART_Init>:
 8002728:	b580      	push	{r7, lr}
 800272a:	af00      	add	r7, sp, #0
 800272c:	4b11      	ldr	r3, [pc, #68]	@ (8002774 <MX_USART2_UART_Init+0x4c>)
 800272e:	4a12      	ldr	r2, [pc, #72]	@ (8002778 <MX_USART2_UART_Init+0x50>)
 8002730:	601a      	str	r2, [r3, #0]
 8002732:	4b10      	ldr	r3, [pc, #64]	@ (8002774 <MX_USART2_UART_Init+0x4c>)
 8002734:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8002738:	605a      	str	r2, [r3, #4]
 800273a:	4b0e      	ldr	r3, [pc, #56]	@ (8002774 <MX_USART2_UART_Init+0x4c>)
 800273c:	2200      	movs	r2, #0
 800273e:	609a      	str	r2, [r3, #8]
 8002740:	4b0c      	ldr	r3, [pc, #48]	@ (8002774 <MX_USART2_UART_Init+0x4c>)
 8002742:	2200      	movs	r2, #0
 8002744:	60da      	str	r2, [r3, #12]
 8002746:	4b0b      	ldr	r3, [pc, #44]	@ (8002774 <MX_USART2_UART_Init+0x4c>)
 8002748:	2200      	movs	r2, #0
 800274a:	611a      	str	r2, [r3, #16]
 800274c:	4b09      	ldr	r3, [pc, #36]	@ (8002774 <MX_USART2_UART_Init+0x4c>)
 800274e:	220c      	movs	r2, #12
 8002750:	615a      	str	r2, [r3, #20]
 8002752:	4b08      	ldr	r3, [pc, #32]	@ (8002774 <MX_USART2_UART_Init+0x4c>)
 8002754:	2200      	movs	r2, #0
 8002756:	619a      	str	r2, [r3, #24]
 8002758:	4b06      	ldr	r3, [pc, #24]	@ (8002774 <MX_USART2_UART_Init+0x4c>)
 800275a:	2200      	movs	r2, #0
 800275c:	61da      	str	r2, [r3, #28]
 800275e:	4805      	ldr	r0, [pc, #20]	@ (8002774 <MX_USART2_UART_Init+0x4c>)
 8002760:	f002 fdba 	bl	80052d8 <HAL_UART_Init>
 8002764:	4603      	mov	r3, r0
 8002766:	2b00      	cmp	r3, #0
 8002768:	d001      	beq.n	800276e <MX_USART2_UART_Init+0x46>
 800276a:	f000 f8f5 	bl	8002958 <Error_Handler>
 800276e:	bf00      	nop
 8002770:	bd80      	pop	{r7, pc}
 8002772:	bf00      	nop
 8002774:	20000598 	.word	0x20000598
 8002778:	40004400 	.word	0x40004400

0800277c <MX_DMA_Init>:
 800277c:	b580      	push	{r7, lr}
 800277e:	b082      	sub	sp, #8
 8002780:	af00      	add	r7, sp, #0
 8002782:	4b10      	ldr	r3, [pc, #64]	@ (80027c4 <MX_DMA_Init+0x48>)
 8002784:	695b      	ldr	r3, [r3, #20]
 8002786:	4a0f      	ldr	r2, [pc, #60]	@ (80027c4 <MX_DMA_Init+0x48>)
 8002788:	f043 0301 	orr.w	r3, r3, #1
 800278c:	6153      	str	r3, [r2, #20]
 800278e:	4b0d      	ldr	r3, [pc, #52]	@ (80027c4 <MX_DMA_Init+0x48>)
 8002790:	695b      	ldr	r3, [r3, #20]
 8002792:	f003 0301 	and.w	r3, r3, #1
 8002796:	607b      	str	r3, [r7, #4]
 8002798:	687b      	ldr	r3, [r7, #4]
 800279a:	2200      	movs	r2, #0
 800279c:	2100      	movs	r1, #0
 800279e:	200c      	movs	r0, #12
 80027a0:	f000 fd0b 	bl	80031ba <HAL_NVIC_SetPriority>
 80027a4:	200c      	movs	r0, #12
 80027a6:	f000 fd24 	bl	80031f2 <HAL_NVIC_EnableIRQ>
 80027aa:	2200      	movs	r2, #0
 80027ac:	2100      	movs	r1, #0
 80027ae:	200d      	movs	r0, #13
 80027b0:	f000 fd03 	bl	80031ba <HAL_NVIC_SetPriority>
 80027b4:	200d      	movs	r0, #13
 80027b6:	f000 fd1c 	bl	80031f2 <HAL_NVIC_EnableIRQ>
 80027ba:	bf00      	nop
 80027bc:	3708      	adds	r7, #8
 80027be:	46bd      	mov	sp, r7
 80027c0:	bd80      	pop	{r7, pc}
 80027c2:	bf00      	nop
 80027c4:	40021000 	.word	0x40021000

080027c8 <MX_GPIO_Init>:
 80027c8:	b580      	push	{r7, lr}
 80027ca:	b088      	sub	sp, #32
 80027cc:	af00      	add	r7, sp, #0
 80027ce:	f107 0310 	add.w	r3, r7, #16
 80027d2:	2200      	movs	r2, #0
 80027d4:	601a      	str	r2, [r3, #0]
 80027d6:	605a      	str	r2, [r3, #4]
 80027d8:	609a      	str	r2, [r3, #8]
 80027da:	60da      	str	r2, [r3, #12]
 80027dc:	4b38      	ldr	r3, [pc, #224]	@ (80028c0 <MX_GPIO_Init+0xf8>)
 80027de:	699b      	ldr	r3, [r3, #24]
 80027e0:	4a37      	ldr	r2, [pc, #220]	@ (80028c0 <MX_GPIO_Init+0xf8>)
 80027e2:	f043 0304 	orr.w	r3, r3, #4
 80027e6:	6193      	str	r3, [r2, #24]
 80027e8:	4b35      	ldr	r3, [pc, #212]	@ (80028c0 <MX_GPIO_Init+0xf8>)
 80027ea:	699b      	ldr	r3, [r3, #24]
 80027ec:	f003 0304 	and.w	r3, r3, #4
 80027f0:	60fb      	str	r3, [r7, #12]
 80027f2:	68fb      	ldr	r3, [r7, #12]
 80027f4:	4b32      	ldr	r3, [pc, #200]	@ (80028c0 <MX_GPIO_Init+0xf8>)
 80027f6:	699b      	ldr	r3, [r3, #24]
 80027f8:	4a31      	ldr	r2, [pc, #196]	@ (80028c0 <MX_GPIO_Init+0xf8>)
 80027fa:	f043 0308 	orr.w	r3, r3, #8
 80027fe:	6193      	str	r3, [r2, #24]
 8002800:	4b2f      	ldr	r3, [pc, #188]	@ (80028c0 <MX_GPIO_Init+0xf8>)
 8002802:	699b      	ldr	r3, [r3, #24]
 8002804:	f003 0308 	and.w	r3, r3, #8
 8002808:	60bb      	str	r3, [r7, #8]
 800280a:	68bb      	ldr	r3, [r7, #8]
 800280c:	4b2c      	ldr	r3, [pc, #176]	@ (80028c0 <MX_GPIO_Init+0xf8>)
 800280e:	699b      	ldr	r3, [r3, #24]
 8002810:	4a2b      	ldr	r2, [pc, #172]	@ (80028c0 <MX_GPIO_Init+0xf8>)
 8002812:	f043 0310 	orr.w	r3, r3, #16
 8002816:	6193      	str	r3, [r2, #24]
 8002818:	4b29      	ldr	r3, [pc, #164]	@ (80028c0 <MX_GPIO_Init+0xf8>)
 800281a:	699b      	ldr	r3, [r3, #24]
 800281c:	f003 0310 	and.w	r3, r3, #16
 8002820:	607b      	str	r3, [r7, #4]
 8002822:	687b      	ldr	r3, [r7, #4]
 8002824:	2200      	movs	r2, #0
 8002826:	f240 3111 	movw	r1, #785	@ 0x311
 800282a:	4826      	ldr	r0, [pc, #152]	@ (80028c4 <MX_GPIO_Init+0xfc>)
 800282c:	f001 f894 	bl	8003958 <HAL_GPIO_WritePin>
 8002830:	2200      	movs	r2, #0
 8002832:	2141      	movs	r1, #65	@ 0x41
 8002834:	4824      	ldr	r0, [pc, #144]	@ (80028c8 <MX_GPIO_Init+0x100>)
 8002836:	f001 f88f 	bl	8003958 <HAL_GPIO_WritePin>
 800283a:	f240 3311 	movw	r3, #785	@ 0x311
 800283e:	613b      	str	r3, [r7, #16]
 8002840:	2301      	movs	r3, #1
 8002842:	617b      	str	r3, [r7, #20]
 8002844:	2300      	movs	r3, #0
 8002846:	61bb      	str	r3, [r7, #24]
 8002848:	2302      	movs	r3, #2
 800284a:	61fb      	str	r3, [r7, #28]
 800284c:	f107 0310 	add.w	r3, r7, #16
 8002850:	4619      	mov	r1, r3
 8002852:	481c      	ldr	r0, [pc, #112]	@ (80028c4 <MX_GPIO_Init+0xfc>)
 8002854:	f000 fefc 	bl	8003650 <HAL_GPIO_Init>
 8002858:	2302      	movs	r3, #2
 800285a:	613b      	str	r3, [r7, #16]
 800285c:	4b1b      	ldr	r3, [pc, #108]	@ (80028cc <MX_GPIO_Init+0x104>)
 800285e:	617b      	str	r3, [r7, #20]
 8002860:	2300      	movs	r3, #0
 8002862:	61bb      	str	r3, [r7, #24]
 8002864:	f107 0310 	add.w	r3, r7, #16
 8002868:	4619      	mov	r1, r3
 800286a:	4816      	ldr	r0, [pc, #88]	@ (80028c4 <MX_GPIO_Init+0xfc>)
 800286c:	f000 fef0 	bl	8003650 <HAL_GPIO_Init>
 8002870:	2341      	movs	r3, #65	@ 0x41
 8002872:	613b      	str	r3, [r7, #16]
 8002874:	2301      	movs	r3, #1
 8002876:	617b      	str	r3, [r7, #20]
 8002878:	2300      	movs	r3, #0
 800287a:	61bb      	str	r3, [r7, #24]
 800287c:	2302      	movs	r3, #2
 800287e:	61fb      	str	r3, [r7, #28]
 8002880:	f107 0310 	add.w	r3, r7, #16
 8002884:	4619      	mov	r1, r3
 8002886:	4810      	ldr	r0, [pc, #64]	@ (80028c8 <MX_GPIO_Init+0x100>)
 8002888:	f000 fee2 	bl	8003650 <HAL_GPIO_Init>
 800288c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8002890:	613b      	str	r3, [r7, #16]
 8002892:	4b0f      	ldr	r3, [pc, #60]	@ (80028d0 <MX_GPIO_Init+0x108>)
 8002894:	617b      	str	r3, [r7, #20]
 8002896:	2300      	movs	r3, #0
 8002898:	61bb      	str	r3, [r7, #24]
 800289a:	f107 0310 	add.w	r3, r7, #16
 800289e:	4619      	mov	r1, r3
 80028a0:	4808      	ldr	r0, [pc, #32]	@ (80028c4 <MX_GPIO_Init+0xfc>)
 80028a2:	f000 fed5 	bl	8003650 <HAL_GPIO_Init>
 80028a6:	2200      	movs	r2, #0
 80028a8:	2100      	movs	r1, #0
 80028aa:	2028      	movs	r0, #40	@ 0x28
 80028ac:	f000 fc85 	bl	80031ba <HAL_NVIC_SetPriority>
 80028b0:	2028      	movs	r0, #40	@ 0x28
 80028b2:	f000 fc9e 	bl	80031f2 <HAL_NVIC_EnableIRQ>
 80028b6:	bf00      	nop
 80028b8:	3720      	adds	r7, #32
 80028ba:	46bd      	mov	sp, r7
 80028bc:	bd80      	pop	{r7, pc}
 80028be:	bf00      	nop
 80028c0:	40021000 	.word	0x40021000
 80028c4:	40010800 	.word	0x40010800
 80028c8:	40010c00 	.word	0x40010c00
 80028cc:	10110000 	.word	0x10110000
 80028d0:	10210000 	.word	0x10210000

080028d4 <HAL_SPI_ErrorCallback>:
 80028d4:	b480      	push	{r7}
 80028d6:	b083      	sub	sp, #12
 80028d8:	af00      	add	r7, sp, #0
 80028da:	6078      	str	r0, [r7, #4]
 80028dc:	4b03      	ldr	r3, [pc, #12]	@ (80028ec <HAL_SPI_ErrorCallback+0x18>)
 80028de:	2202      	movs	r2, #2
 80028e0:	601a      	str	r2, [r3, #0]
 80028e2:	bf00      	nop
 80028e4:	370c      	adds	r7, #12
 80028e6:	46bd      	mov	sp, r7
 80028e8:	bc80      	pop	{r7}
 80028ea:	4770      	bx	lr
 80028ec:	20000010 	.word	0x20000010

080028f0 <_write>:
 80028f0:	b580      	push	{r7, lr}
 80028f2:	b084      	sub	sp, #16
 80028f4:	af00      	add	r7, sp, #0
 80028f6:	60f8      	str	r0, [r7, #12]
 80028f8:	60b9      	str	r1, [r7, #8]
 80028fa:	607a      	str	r2, [r7, #4]
 80028fc:	687b      	ldr	r3, [r7, #4]
 80028fe:	b29a      	uxth	r2, r3
 8002900:	230a      	movs	r3, #10
 8002902:	68b9      	ldr	r1, [r7, #8]
 8002904:	4803      	ldr	r0, [pc, #12]	@ (8002914 <_write+0x24>)
 8002906:	f002 fd37 	bl	8005378 <HAL_UART_Transmit>
 800290a:	687b      	ldr	r3, [r7, #4]
 800290c:	4618      	mov	r0, r3
 800290e:	3710      	adds	r7, #16
 8002910:	46bd      	mov	sp, r7
 8002912:	bd80      	pop	{r7, pc}
 8002914:	20000598 	.word	0x20000598

08002918 <_read>:
 8002918:	b580      	push	{r7, lr}
 800291a:	b086      	sub	sp, #24
 800291c:	af00      	add	r7, sp, #0
 800291e:	60f8      	str	r0, [r7, #12]
 8002920:	60b9      	str	r1, [r7, #8]
 8002922:	607a      	str	r2, [r7, #4]
 8002924:	2300      	movs	r3, #0
 8002926:	617b      	str	r3, [r7, #20]
 8002928:	4b0a      	ldr	r3, [pc, #40]	@ (8002954 <_read+0x3c>)
 800292a:	681b      	ldr	r3, [r3, #0]
 800292c:	681b      	ldr	r3, [r3, #0]
 800292e:	617b      	str	r3, [r7, #20]
 8002930:	4b08      	ldr	r3, [pc, #32]	@ (8002954 <_read+0x3c>)
 8002932:	681b      	ldr	r3, [r3, #0]
 8002934:	685b      	ldr	r3, [r3, #4]
 8002936:	617b      	str	r3, [r7, #20]
 8002938:	697b      	ldr	r3, [r7, #20]
 800293a:	687b      	ldr	r3, [r7, #4]
 800293c:	b29a      	uxth	r2, r3
 800293e:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8002942:	68b9      	ldr	r1, [r7, #8]
 8002944:	4803      	ldr	r0, [pc, #12]	@ (8002954 <_read+0x3c>)
 8002946:	f002 fda2 	bl	800548e <HAL_UART_Receive>
 800294a:	687b      	ldr	r3, [r7, #4]
 800294c:	4618      	mov	r0, r3
 800294e:	3718      	adds	r7, #24
 8002950:	46bd      	mov	sp, r7
 8002952:	bd80      	pop	{r7, pc}
 8002954:	20000598 	.word	0x20000598

08002958 <Error_Handler>:
 8002958:	b480      	push	{r7}
 800295a:	af00      	add	r7, sp, #0
 800295c:	b672      	cpsid	i
 800295e:	bf00      	nop
 8002960:	bf00      	nop
 8002962:	e7fd      	b.n	8002960 <Error_Handler+0x8>

08002964 <HAL_MspInit>:
 8002964:	b480      	push	{r7}
 8002966:	b085      	sub	sp, #20
 8002968:	af00      	add	r7, sp, #0
 800296a:	4b15      	ldr	r3, [pc, #84]	@ (80029c0 <HAL_MspInit+0x5c>)
 800296c:	699b      	ldr	r3, [r3, #24]
 800296e:	4a14      	ldr	r2, [pc, #80]	@ (80029c0 <HAL_MspInit+0x5c>)
 8002970:	f043 0301 	orr.w	r3, r3, #1
 8002974:	6193      	str	r3, [r2, #24]
 8002976:	4b12      	ldr	r3, [pc, #72]	@ (80029c0 <HAL_MspInit+0x5c>)
 8002978:	699b      	ldr	r3, [r3, #24]
 800297a:	f003 0301 	and.w	r3, r3, #1
 800297e:	60bb      	str	r3, [r7, #8]
 8002980:	68bb      	ldr	r3, [r7, #8]
 8002982:	4b0f      	ldr	r3, [pc, #60]	@ (80029c0 <HAL_MspInit+0x5c>)
 8002984:	69db      	ldr	r3, [r3, #28]
 8002986:	4a0e      	ldr	r2, [pc, #56]	@ (80029c0 <HAL_MspInit+0x5c>)
 8002988:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800298c:	61d3      	str	r3, [r2, #28]
 800298e:	4b0c      	ldr	r3, [pc, #48]	@ (80029c0 <HAL_MspInit+0x5c>)
 8002990:	69db      	ldr	r3, [r3, #28]
 8002992:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002996:	607b      	str	r3, [r7, #4]
 8002998:	687b      	ldr	r3, [r7, #4]
 800299a:	4b0a      	ldr	r3, [pc, #40]	@ (80029c4 <HAL_MspInit+0x60>)
 800299c:	685b      	ldr	r3, [r3, #4]
 800299e:	60fb      	str	r3, [r7, #12]
 80029a0:	68fb      	ldr	r3, [r7, #12]
 80029a2:	f023 63e0 	bic.w	r3, r3, #117440512	@ 0x7000000
 80029a6:	60fb      	str	r3, [r7, #12]
 80029a8:	68fb      	ldr	r3, [r7, #12]
 80029aa:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 80029ae:	60fb      	str	r3, [r7, #12]
 80029b0:	4a04      	ldr	r2, [pc, #16]	@ (80029c4 <HAL_MspInit+0x60>)
 80029b2:	68fb      	ldr	r3, [r7, #12]
 80029b4:	6053      	str	r3, [r2, #4]
 80029b6:	bf00      	nop
 80029b8:	3714      	adds	r7, #20
 80029ba:	46bd      	mov	sp, r7
 80029bc:	bc80      	pop	{r7}
 80029be:	4770      	bx	lr
 80029c0:	40021000 	.word	0x40021000
 80029c4:	40010000 	.word	0x40010000

080029c8 <HAL_SPI_MspInit>:
 80029c8:	b580      	push	{r7, lr}
 80029ca:	b088      	sub	sp, #32
 80029cc:	af00      	add	r7, sp, #0
 80029ce:	6078      	str	r0, [r7, #4]
 80029d0:	f107 0310 	add.w	r3, r7, #16
 80029d4:	2200      	movs	r2, #0
 80029d6:	601a      	str	r2, [r3, #0]
 80029d8:	605a      	str	r2, [r3, #4]
 80029da:	609a      	str	r2, [r3, #8]
 80029dc:	60da      	str	r2, [r3, #12]
 80029de:	687b      	ldr	r3, [r7, #4]
 80029e0:	681b      	ldr	r3, [r3, #0]
 80029e2:	4a47      	ldr	r2, [pc, #284]	@ (8002b00 <HAL_SPI_MspInit+0x138>)
 80029e4:	4293      	cmp	r3, r2
 80029e6:	f040 8086 	bne.w	8002af6 <HAL_SPI_MspInit+0x12e>
 80029ea:	4b46      	ldr	r3, [pc, #280]	@ (8002b04 <HAL_SPI_MspInit+0x13c>)
 80029ec:	699b      	ldr	r3, [r3, #24]
 80029ee:	4a45      	ldr	r2, [pc, #276]	@ (8002b04 <HAL_SPI_MspInit+0x13c>)
 80029f0:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 80029f4:	6193      	str	r3, [r2, #24]
 80029f6:	4b43      	ldr	r3, [pc, #268]	@ (8002b04 <HAL_SPI_MspInit+0x13c>)
 80029f8:	699b      	ldr	r3, [r3, #24]
 80029fa:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80029fe:	60fb      	str	r3, [r7, #12]
 8002a00:	68fb      	ldr	r3, [r7, #12]
 8002a02:	4b40      	ldr	r3, [pc, #256]	@ (8002b04 <HAL_SPI_MspInit+0x13c>)
 8002a04:	699b      	ldr	r3, [r3, #24]
 8002a06:	4a3f      	ldr	r2, [pc, #252]	@ (8002b04 <HAL_SPI_MspInit+0x13c>)
 8002a08:	f043 0304 	orr.w	r3, r3, #4
 8002a0c:	6193      	str	r3, [r2, #24]
 8002a0e:	4b3d      	ldr	r3, [pc, #244]	@ (8002b04 <HAL_SPI_MspInit+0x13c>)
 8002a10:	699b      	ldr	r3, [r3, #24]
 8002a12:	f003 0304 	and.w	r3, r3, #4
 8002a16:	60bb      	str	r3, [r7, #8]
 8002a18:	68bb      	ldr	r3, [r7, #8]
 8002a1a:	23a0      	movs	r3, #160	@ 0xa0
 8002a1c:	613b      	str	r3, [r7, #16]
 8002a1e:	2302      	movs	r3, #2
 8002a20:	617b      	str	r3, [r7, #20]
 8002a22:	2303      	movs	r3, #3
 8002a24:	61fb      	str	r3, [r7, #28]
 8002a26:	f107 0310 	add.w	r3, r7, #16
 8002a2a:	4619      	mov	r1, r3
 8002a2c:	4836      	ldr	r0, [pc, #216]	@ (8002b08 <HAL_SPI_MspInit+0x140>)
 8002a2e:	f000 fe0f 	bl	8003650 <HAL_GPIO_Init>
 8002a32:	2340      	movs	r3, #64	@ 0x40
 8002a34:	613b      	str	r3, [r7, #16]
 8002a36:	2300      	movs	r3, #0
 8002a38:	617b      	str	r3, [r7, #20]
 8002a3a:	2300      	movs	r3, #0
 8002a3c:	61bb      	str	r3, [r7, #24]
 8002a3e:	f107 0310 	add.w	r3, r7, #16
 8002a42:	4619      	mov	r1, r3
 8002a44:	4830      	ldr	r0, [pc, #192]	@ (8002b08 <HAL_SPI_MspInit+0x140>)
 8002a46:	f000 fe03 	bl	8003650 <HAL_GPIO_Init>
 8002a4a:	4b30      	ldr	r3, [pc, #192]	@ (8002b0c <HAL_SPI_MspInit+0x144>)
 8002a4c:	4a30      	ldr	r2, [pc, #192]	@ (8002b10 <HAL_SPI_MspInit+0x148>)
 8002a4e:	601a      	str	r2, [r3, #0]
 8002a50:	4b2e      	ldr	r3, [pc, #184]	@ (8002b0c <HAL_SPI_MspInit+0x144>)
 8002a52:	2200      	movs	r2, #0
 8002a54:	605a      	str	r2, [r3, #4]
 8002a56:	4b2d      	ldr	r3, [pc, #180]	@ (8002b0c <HAL_SPI_MspInit+0x144>)
 8002a58:	2200      	movs	r2, #0
 8002a5a:	609a      	str	r2, [r3, #8]
 8002a5c:	4b2b      	ldr	r3, [pc, #172]	@ (8002b0c <HAL_SPI_MspInit+0x144>)
 8002a5e:	2280      	movs	r2, #128	@ 0x80
 8002a60:	60da      	str	r2, [r3, #12]
 8002a62:	4b2a      	ldr	r3, [pc, #168]	@ (8002b0c <HAL_SPI_MspInit+0x144>)
 8002a64:	2200      	movs	r2, #0
 8002a66:	611a      	str	r2, [r3, #16]
 8002a68:	4b28      	ldr	r3, [pc, #160]	@ (8002b0c <HAL_SPI_MspInit+0x144>)
 8002a6a:	2200      	movs	r2, #0
 8002a6c:	615a      	str	r2, [r3, #20]
 8002a6e:	4b27      	ldr	r3, [pc, #156]	@ (8002b0c <HAL_SPI_MspInit+0x144>)
 8002a70:	2200      	movs	r2, #0
 8002a72:	619a      	str	r2, [r3, #24]
 8002a74:	4b25      	ldr	r3, [pc, #148]	@ (8002b0c <HAL_SPI_MspInit+0x144>)
 8002a76:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8002a7a:	61da      	str	r2, [r3, #28]
 8002a7c:	4823      	ldr	r0, [pc, #140]	@ (8002b0c <HAL_SPI_MspInit+0x144>)
 8002a7e:	f000 fbd3 	bl	8003228 <HAL_DMA_Init>
 8002a82:	4603      	mov	r3, r0
 8002a84:	2b00      	cmp	r3, #0
 8002a86:	d001      	beq.n	8002a8c <HAL_SPI_MspInit+0xc4>
 8002a88:	f7ff ff66 	bl	8002958 <Error_Handler>
 8002a8c:	687b      	ldr	r3, [r7, #4]
 8002a8e:	4a1f      	ldr	r2, [pc, #124]	@ (8002b0c <HAL_SPI_MspInit+0x144>)
 8002a90:	64da      	str	r2, [r3, #76]	@ 0x4c
 8002a92:	4a1e      	ldr	r2, [pc, #120]	@ (8002b0c <HAL_SPI_MspInit+0x144>)
 8002a94:	687b      	ldr	r3, [r7, #4]
 8002a96:	6253      	str	r3, [r2, #36]	@ 0x24
 8002a98:	4b1e      	ldr	r3, [pc, #120]	@ (8002b14 <HAL_SPI_MspInit+0x14c>)
 8002a9a:	4a1f      	ldr	r2, [pc, #124]	@ (8002b18 <HAL_SPI_MspInit+0x150>)
 8002a9c:	601a      	str	r2, [r3, #0]
 8002a9e:	4b1d      	ldr	r3, [pc, #116]	@ (8002b14 <HAL_SPI_MspInit+0x14c>)
 8002aa0:	2210      	movs	r2, #16
 8002aa2:	605a      	str	r2, [r3, #4]
 8002aa4:	4b1b      	ldr	r3, [pc, #108]	@ (8002b14 <HAL_SPI_MspInit+0x14c>)
 8002aa6:	2200      	movs	r2, #0
 8002aa8:	609a      	str	r2, [r3, #8]
 8002aaa:	4b1a      	ldr	r3, [pc, #104]	@ (8002b14 <HAL_SPI_MspInit+0x14c>)
 8002aac:	2280      	movs	r2, #128	@ 0x80
 8002aae:	60da      	str	r2, [r3, #12]
 8002ab0:	4b18      	ldr	r3, [pc, #96]	@ (8002b14 <HAL_SPI_MspInit+0x14c>)
 8002ab2:	2200      	movs	r2, #0
 8002ab4:	611a      	str	r2, [r3, #16]
 8002ab6:	4b17      	ldr	r3, [pc, #92]	@ (8002b14 <HAL_SPI_MspInit+0x14c>)
 8002ab8:	2200      	movs	r2, #0
 8002aba:	615a      	str	r2, [r3, #20]
 8002abc:	4b15      	ldr	r3, [pc, #84]	@ (8002b14 <HAL_SPI_MspInit+0x14c>)
 8002abe:	2200      	movs	r2, #0
 8002ac0:	619a      	str	r2, [r3, #24]
 8002ac2:	4b14      	ldr	r3, [pc, #80]	@ (8002b14 <HAL_SPI_MspInit+0x14c>)
 8002ac4:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8002ac8:	61da      	str	r2, [r3, #28]
 8002aca:	4812      	ldr	r0, [pc, #72]	@ (8002b14 <HAL_SPI_MspInit+0x14c>)
 8002acc:	f000 fbac 	bl	8003228 <HAL_DMA_Init>
 8002ad0:	4603      	mov	r3, r0
 8002ad2:	2b00      	cmp	r3, #0
 8002ad4:	d001      	beq.n	8002ada <HAL_SPI_MspInit+0x112>
 8002ad6:	f7ff ff3f 	bl	8002958 <Error_Handler>
 8002ada:	687b      	ldr	r3, [r7, #4]
 8002adc:	4a0d      	ldr	r2, [pc, #52]	@ (8002b14 <HAL_SPI_MspInit+0x14c>)
 8002ade:	649a      	str	r2, [r3, #72]	@ 0x48
 8002ae0:	4a0c      	ldr	r2, [pc, #48]	@ (8002b14 <HAL_SPI_MspInit+0x14c>)
 8002ae2:	687b      	ldr	r3, [r7, #4]
 8002ae4:	6253      	str	r3, [r2, #36]	@ 0x24
 8002ae6:	2200      	movs	r2, #0
 8002ae8:	2100      	movs	r1, #0
 8002aea:	2023      	movs	r0, #35	@ 0x23
 8002aec:	f000 fb65 	bl	80031ba <HAL_NVIC_SetPriority>
 8002af0:	2023      	movs	r0, #35	@ 0x23
 8002af2:	f000 fb7e 	bl	80031f2 <HAL_NVIC_EnableIRQ>
 8002af6:	bf00      	nop
 8002af8:	3720      	adds	r7, #32
 8002afa:	46bd      	mov	sp, r7
 8002afc:	bd80      	pop	{r7, pc}
 8002afe:	bf00      	nop
 8002b00:	40013000 	.word	0x40013000
 8002b04:	40021000 	.word	0x40021000
 8002b08:	40010800 	.word	0x40010800
 8002b0c:	200004c8 	.word	0x200004c8
 8002b10:	4002001c 	.word	0x4002001c
 8002b14:	2000050c 	.word	0x2000050c
 8002b18:	40020030 	.word	0x40020030

08002b1c <HAL_TIM_PWM_MspInit>:
 8002b1c:	b580      	push	{r7, lr}
 8002b1e:	b084      	sub	sp, #16
 8002b20:	af00      	add	r7, sp, #0
 8002b22:	6078      	str	r0, [r7, #4]
 8002b24:	687b      	ldr	r3, [r7, #4]
 8002b26:	681b      	ldr	r3, [r3, #0]
 8002b28:	4a0d      	ldr	r2, [pc, #52]	@ (8002b60 <HAL_TIM_PWM_MspInit+0x44>)
 8002b2a:	4293      	cmp	r3, r2
 8002b2c:	d113      	bne.n	8002b56 <HAL_TIM_PWM_MspInit+0x3a>
 8002b2e:	4b0d      	ldr	r3, [pc, #52]	@ (8002b64 <HAL_TIM_PWM_MspInit+0x48>)
 8002b30:	69db      	ldr	r3, [r3, #28]
 8002b32:	4a0c      	ldr	r2, [pc, #48]	@ (8002b64 <HAL_TIM_PWM_MspInit+0x48>)
 8002b34:	f043 0302 	orr.w	r3, r3, #2
 8002b38:	61d3      	str	r3, [r2, #28]
 8002b3a:	4b0a      	ldr	r3, [pc, #40]	@ (8002b64 <HAL_TIM_PWM_MspInit+0x48>)
 8002b3c:	69db      	ldr	r3, [r3, #28]
 8002b3e:	f003 0302 	and.w	r3, r3, #2
 8002b42:	60fb      	str	r3, [r7, #12]
 8002b44:	68fb      	ldr	r3, [r7, #12]
 8002b46:	2200      	movs	r2, #0
 8002b48:	2100      	movs	r1, #0
 8002b4a:	201d      	movs	r0, #29
 8002b4c:	f000 fb35 	bl	80031ba <HAL_NVIC_SetPriority>
 8002b50:	201d      	movs	r0, #29
 8002b52:	f000 fb4e 	bl	80031f2 <HAL_NVIC_EnableIRQ>
 8002b56:	bf00      	nop
 8002b58:	3710      	adds	r7, #16
 8002b5a:	46bd      	mov	sp, r7
 8002b5c:	bd80      	pop	{r7, pc}
 8002b5e:	bf00      	nop
 8002b60:	40000400 	.word	0x40000400
 8002b64:	40021000 	.word	0x40021000

08002b68 <HAL_TIM_MspPostInit>:
 8002b68:	b580      	push	{r7, lr}
 8002b6a:	b088      	sub	sp, #32
 8002b6c:	af00      	add	r7, sp, #0
 8002b6e:	6078      	str	r0, [r7, #4]
 8002b70:	f107 030c 	add.w	r3, r7, #12
 8002b74:	2200      	movs	r2, #0
 8002b76:	601a      	str	r2, [r3, #0]
 8002b78:	605a      	str	r2, [r3, #4]
 8002b7a:	609a      	str	r2, [r3, #8]
 8002b7c:	60da      	str	r2, [r3, #12]
 8002b7e:	687b      	ldr	r3, [r7, #4]
 8002b80:	681b      	ldr	r3, [r3, #0]
 8002b82:	4a18      	ldr	r2, [pc, #96]	@ (8002be4 <HAL_TIM_MspPostInit+0x7c>)
 8002b84:	4293      	cmp	r3, r2
 8002b86:	d129      	bne.n	8002bdc <HAL_TIM_MspPostInit+0x74>
 8002b88:	4b17      	ldr	r3, [pc, #92]	@ (8002be8 <HAL_TIM_MspPostInit+0x80>)
 8002b8a:	699b      	ldr	r3, [r3, #24]
 8002b8c:	4a16      	ldr	r2, [pc, #88]	@ (8002be8 <HAL_TIM_MspPostInit+0x80>)
 8002b8e:	f043 0310 	orr.w	r3, r3, #16
 8002b92:	6193      	str	r3, [r2, #24]
 8002b94:	4b14      	ldr	r3, [pc, #80]	@ (8002be8 <HAL_TIM_MspPostInit+0x80>)
 8002b96:	699b      	ldr	r3, [r3, #24]
 8002b98:	f003 0310 	and.w	r3, r3, #16
 8002b9c:	60bb      	str	r3, [r7, #8]
 8002b9e:	68bb      	ldr	r3, [r7, #8]
 8002ba0:	2380      	movs	r3, #128	@ 0x80
 8002ba2:	60fb      	str	r3, [r7, #12]
 8002ba4:	2302      	movs	r3, #2
 8002ba6:	613b      	str	r3, [r7, #16]
 8002ba8:	2302      	movs	r3, #2
 8002baa:	61bb      	str	r3, [r7, #24]
 8002bac:	f107 030c 	add.w	r3, r7, #12
 8002bb0:	4619      	mov	r1, r3
 8002bb2:	480e      	ldr	r0, [pc, #56]	@ (8002bec <HAL_TIM_MspPostInit+0x84>)
 8002bb4:	f000 fd4c 	bl	8003650 <HAL_GPIO_Init>
 8002bb8:	4b0d      	ldr	r3, [pc, #52]	@ (8002bf0 <HAL_TIM_MspPostInit+0x88>)
 8002bba:	685b      	ldr	r3, [r3, #4]
 8002bbc:	61fb      	str	r3, [r7, #28]
 8002bbe:	69fb      	ldr	r3, [r7, #28]
 8002bc0:	f423 6340 	bic.w	r3, r3, #3072	@ 0xc00
 8002bc4:	61fb      	str	r3, [r7, #28]
 8002bc6:	69fb      	ldr	r3, [r7, #28]
 8002bc8:	f043 63e0 	orr.w	r3, r3, #117440512	@ 0x7000000
 8002bcc:	61fb      	str	r3, [r7, #28]
 8002bce:	69fb      	ldr	r3, [r7, #28]
 8002bd0:	f443 6340 	orr.w	r3, r3, #3072	@ 0xc00
 8002bd4:	61fb      	str	r3, [r7, #28]
 8002bd6:	4a06      	ldr	r2, [pc, #24]	@ (8002bf0 <HAL_TIM_MspPostInit+0x88>)
 8002bd8:	69fb      	ldr	r3, [r7, #28]
 8002bda:	6053      	str	r3, [r2, #4]
 8002bdc:	bf00      	nop
 8002bde:	3720      	adds	r7, #32
 8002be0:	46bd      	mov	sp, r7
 8002be2:	bd80      	pop	{r7, pc}
 8002be4:	40000400 	.word	0x40000400
 8002be8:	40021000 	.word	0x40021000
 8002bec:	40011000 	.word	0x40011000
 8002bf0:	40010000 	.word	0x40010000

08002bf4 <HAL_UART_MspInit>:
 8002bf4:	b580      	push	{r7, lr}
 8002bf6:	b088      	sub	sp, #32
 8002bf8:	af00      	add	r7, sp, #0
 8002bfa:	6078      	str	r0, [r7, #4]
 8002bfc:	f107 0310 	add.w	r3, r7, #16
 8002c00:	2200      	movs	r2, #0
 8002c02:	601a      	str	r2, [r3, #0]
 8002c04:	605a      	str	r2, [r3, #4]
 8002c06:	609a      	str	r2, [r3, #8]
 8002c08:	60da      	str	r2, [r3, #12]
 8002c0a:	687b      	ldr	r3, [r7, #4]
 8002c0c:	681b      	ldr	r3, [r3, #0]
 8002c0e:	4a1f      	ldr	r2, [pc, #124]	@ (8002c8c <HAL_UART_MspInit+0x98>)
 8002c10:	4293      	cmp	r3, r2
 8002c12:	d137      	bne.n	8002c84 <HAL_UART_MspInit+0x90>
 8002c14:	4b1e      	ldr	r3, [pc, #120]	@ (8002c90 <HAL_UART_MspInit+0x9c>)
 8002c16:	69db      	ldr	r3, [r3, #28]
 8002c18:	4a1d      	ldr	r2, [pc, #116]	@ (8002c90 <HAL_UART_MspInit+0x9c>)
 8002c1a:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8002c1e:	61d3      	str	r3, [r2, #28]
 8002c20:	4b1b      	ldr	r3, [pc, #108]	@ (8002c90 <HAL_UART_MspInit+0x9c>)
 8002c22:	69db      	ldr	r3, [r3, #28]
 8002c24:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002c28:	60fb      	str	r3, [r7, #12]
 8002c2a:	68fb      	ldr	r3, [r7, #12]
 8002c2c:	4b18      	ldr	r3, [pc, #96]	@ (8002c90 <HAL_UART_MspInit+0x9c>)
 8002c2e:	699b      	ldr	r3, [r3, #24]
 8002c30:	4a17      	ldr	r2, [pc, #92]	@ (8002c90 <HAL_UART_MspInit+0x9c>)
 8002c32:	f043 0304 	orr.w	r3, r3, #4
 8002c36:	6193      	str	r3, [r2, #24]
 8002c38:	4b15      	ldr	r3, [pc, #84]	@ (8002c90 <HAL_UART_MspInit+0x9c>)
 8002c3a:	699b      	ldr	r3, [r3, #24]
 8002c3c:	f003 0304 	and.w	r3, r3, #4
 8002c40:	60bb      	str	r3, [r7, #8]
 8002c42:	68bb      	ldr	r3, [r7, #8]
 8002c44:	2304      	movs	r3, #4
 8002c46:	613b      	str	r3, [r7, #16]
 8002c48:	2302      	movs	r3, #2
 8002c4a:	617b      	str	r3, [r7, #20]
 8002c4c:	2303      	movs	r3, #3
 8002c4e:	61fb      	str	r3, [r7, #28]
 8002c50:	f107 0310 	add.w	r3, r7, #16
 8002c54:	4619      	mov	r1, r3
 8002c56:	480f      	ldr	r0, [pc, #60]	@ (8002c94 <HAL_UART_MspInit+0xa0>)
 8002c58:	f000 fcfa 	bl	8003650 <HAL_GPIO_Init>
 8002c5c:	2308      	movs	r3, #8
 8002c5e:	613b      	str	r3, [r7, #16]
 8002c60:	2300      	movs	r3, #0
 8002c62:	617b      	str	r3, [r7, #20]
 8002c64:	2300      	movs	r3, #0
 8002c66:	61bb      	str	r3, [r7, #24]
 8002c68:	f107 0310 	add.w	r3, r7, #16
 8002c6c:	4619      	mov	r1, r3
 8002c6e:	4809      	ldr	r0, [pc, #36]	@ (8002c94 <HAL_UART_MspInit+0xa0>)
 8002c70:	f000 fcee 	bl	8003650 <HAL_GPIO_Init>
 8002c74:	2200      	movs	r2, #0
 8002c76:	2100      	movs	r1, #0
 8002c78:	2026      	movs	r0, #38	@ 0x26
 8002c7a:	f000 fa9e 	bl	80031ba <HAL_NVIC_SetPriority>
 8002c7e:	2026      	movs	r0, #38	@ 0x26
 8002c80:	f000 fab7 	bl	80031f2 <HAL_NVIC_EnableIRQ>
 8002c84:	bf00      	nop
 8002c86:	3720      	adds	r7, #32
 8002c88:	46bd      	mov	sp, r7
 8002c8a:	bd80      	pop	{r7, pc}
 8002c8c:	40004400 	.word	0x40004400
 8002c90:	40021000 	.word	0x40021000
 8002c94:	40010800 	.word	0x40010800

08002c98 <NMI_Handler>:
 8002c98:	b480      	push	{r7}
 8002c9a:	af00      	add	r7, sp, #0
 8002c9c:	bf00      	nop
 8002c9e:	e7fd      	b.n	8002c9c <NMI_Handler+0x4>

08002ca0 <HardFault_Handler>:
 8002ca0:	b480      	push	{r7}
 8002ca2:	af00      	add	r7, sp, #0
 8002ca4:	bf00      	nop
 8002ca6:	e7fd      	b.n	8002ca4 <HardFault_Handler+0x4>

08002ca8 <MemManage_Handler>:
 8002ca8:	b480      	push	{r7}
 8002caa:	af00      	add	r7, sp, #0
 8002cac:	bf00      	nop
 8002cae:	e7fd      	b.n	8002cac <MemManage_Handler+0x4>

08002cb0 <BusFault_Handler>:
 8002cb0:	b480      	push	{r7}
 8002cb2:	af00      	add	r7, sp, #0
 8002cb4:	bf00      	nop
 8002cb6:	e7fd      	b.n	8002cb4 <BusFault_Handler+0x4>

08002cb8 <UsageFault_Handler>:
 8002cb8:	b480      	push	{r7}
 8002cba:	af00      	add	r7, sp, #0
 8002cbc:	bf00      	nop
 8002cbe:	e7fd      	b.n	8002cbc <UsageFault_Handler+0x4>

08002cc0 <SVC_Handler>:
 8002cc0:	b480      	push	{r7}
 8002cc2:	af00      	add	r7, sp, #0
 8002cc4:	bf00      	nop
 8002cc6:	46bd      	mov	sp, r7
 8002cc8:	bc80      	pop	{r7}
 8002cca:	4770      	bx	lr

08002ccc <DebugMon_Handler>:
 8002ccc:	b480      	push	{r7}
 8002cce:	af00      	add	r7, sp, #0
 8002cd0:	bf00      	nop
 8002cd2:	46bd      	mov	sp, r7
 8002cd4:	bc80      	pop	{r7}
 8002cd6:	4770      	bx	lr

08002cd8 <PendSV_Handler>:
 8002cd8:	b480      	push	{r7}
 8002cda:	af00      	add	r7, sp, #0
 8002cdc:	bf00      	nop
 8002cde:	46bd      	mov	sp, r7
 8002ce0:	bc80      	pop	{r7}
 8002ce2:	4770      	bx	lr

08002ce4 <SysTick_Handler>:
 8002ce4:	b580      	push	{r7, lr}
 8002ce6:	af00      	add	r7, sp, #0
 8002ce8:	f000 f950 	bl	8002f8c <HAL_IncTick>
 8002cec:	bf00      	nop
 8002cee:	bd80      	pop	{r7, pc}

08002cf0 <DMA1_Channel2_IRQHandler>:
 8002cf0:	b580      	push	{r7, lr}
 8002cf2:	af00      	add	r7, sp, #0
 8002cf4:	4802      	ldr	r0, [pc, #8]	@ (8002d00 <DMA1_Channel2_IRQHandler+0x10>)
 8002cf6:	f000 fba5 	bl	8003444 <HAL_DMA_IRQHandler>
 8002cfa:	bf00      	nop
 8002cfc:	bd80      	pop	{r7, pc}
 8002cfe:	bf00      	nop
 8002d00:	200004c8 	.word	0x200004c8

08002d04 <DMA1_Channel3_IRQHandler>:
 8002d04:	b580      	push	{r7, lr}
 8002d06:	af00      	add	r7, sp, #0
 8002d08:	4802      	ldr	r0, [pc, #8]	@ (8002d14 <DMA1_Channel3_IRQHandler+0x10>)
 8002d0a:	f000 fb9b 	bl	8003444 <HAL_DMA_IRQHandler>
 8002d0e:	bf00      	nop
 8002d10:	bd80      	pop	{r7, pc}
 8002d12:	bf00      	nop
 8002d14:	2000050c 	.word	0x2000050c

08002d18 <TIM3_IRQHandler>:
 8002d18:	b580      	push	{r7, lr}
 8002d1a:	af00      	add	r7, sp, #0
 8002d1c:	4807      	ldr	r0, [pc, #28]	@ (8002d3c <TIM3_IRQHandler+0x24>)
 8002d1e:	f001 fe95 	bl	8004a4c <HAL_TIM_IRQHandler>
 8002d22:	4b07      	ldr	r3, [pc, #28]	@ (8002d40 <TIM3_IRQHandler+0x28>)
 8002d24:	681b      	ldr	r3, [r3, #0]
 8002d26:	2b00      	cmp	r3, #0
 8002d28:	d005      	beq.n	8002d36 <TIM3_IRQHandler+0x1e>
 8002d2a:	4b05      	ldr	r3, [pc, #20]	@ (8002d40 <TIM3_IRQHandler+0x28>)
 8002d2c:	681b      	ldr	r3, [r3, #0]
 8002d2e:	4a04      	ldr	r2, [pc, #16]	@ (8002d40 <TIM3_IRQHandler+0x28>)
 8002d30:	6852      	ldr	r2, [r2, #4]
 8002d32:	4610      	mov	r0, r2
 8002d34:	4798      	blx	r3
 8002d36:	bf00      	nop
 8002d38:	bd80      	pop	{r7, pc}
 8002d3a:	bf00      	nop
 8002d3c:	20000550 	.word	0x20000550
 8002d40:	200005e0 	.word	0x200005e0

08002d44 <SPI1_IRQHandler>:
 8002d44:	b580      	push	{r7, lr}
 8002d46:	af00      	add	r7, sp, #0
 8002d48:	4802      	ldr	r0, [pc, #8]	@ (8002d54 <SPI1_IRQHandler+0x10>)
 8002d4a:	f001 fc7d 	bl	8004648 <HAL_SPI_IRQHandler>
 8002d4e:	bf00      	nop
 8002d50:	bd80      	pop	{r7, pc}
 8002d52:	bf00      	nop
 8002d54:	20000470 	.word	0x20000470

08002d58 <USART2_IRQHandler>:
 8002d58:	b580      	push	{r7, lr}
 8002d5a:	af00      	add	r7, sp, #0
 8002d5c:	4802      	ldr	r0, [pc, #8]	@ (8002d68 <USART2_IRQHandler+0x10>)
 8002d5e:	f002 fc2d 	bl	80055bc <HAL_UART_IRQHandler>
 8002d62:	bf00      	nop
 8002d64:	bd80      	pop	{r7, pc}
 8002d66:	bf00      	nop
 8002d68:	20000598 	.word	0x20000598

08002d6c <EXTI15_10_IRQHandler>:
 8002d6c:	b580      	push	{r7, lr}
 8002d6e:	af00      	add	r7, sp, #0
 8002d70:	f44f 6080 	mov.w	r0, #1024	@ 0x400
 8002d74:	f000 fe08 	bl	8003988 <HAL_GPIO_EXTI_IRQHandler>
 8002d78:	4b06      	ldr	r3, [pc, #24]	@ (8002d94 <EXTI15_10_IRQHandler+0x28>)
 8002d7a:	689b      	ldr	r3, [r3, #8]
 8002d7c:	2b00      	cmp	r3, #0
 8002d7e:	d006      	beq.n	8002d8e <EXTI15_10_IRQHandler+0x22>
 8002d80:	4b04      	ldr	r3, [pc, #16]	@ (8002d94 <EXTI15_10_IRQHandler+0x28>)
 8002d82:	68db      	ldr	r3, [r3, #12]
 8002d84:	2b00      	cmp	r3, #0
 8002d86:	d002      	beq.n	8002d8e <EXTI15_10_IRQHandler+0x22>
 8002d88:	4b02      	ldr	r3, [pc, #8]	@ (8002d94 <EXTI15_10_IRQHandler+0x28>)
 8002d8a:	689b      	ldr	r3, [r3, #8]
 8002d8c:	4798      	blx	r3
 8002d8e:	bf00      	nop
 8002d90:	bd80      	pop	{r7, pc}
 8002d92:	bf00      	nop
 8002d94:	200005e0 	.word	0x200005e0

08002d98 <_getpid>:
 8002d98:	b480      	push	{r7}
 8002d9a:	af00      	add	r7, sp, #0
 8002d9c:	2301      	movs	r3, #1
 8002d9e:	4618      	mov	r0, r3
 8002da0:	46bd      	mov	sp, r7
 8002da2:	bc80      	pop	{r7}
 8002da4:	4770      	bx	lr

08002da6 <_kill>:
 8002da6:	b580      	push	{r7, lr}
 8002da8:	b082      	sub	sp, #8
 8002daa:	af00      	add	r7, sp, #0
 8002dac:	6078      	str	r0, [r7, #4]
 8002dae:	6039      	str	r1, [r7, #0]
 8002db0:	f004 f998 	bl	80070e4 <__errno>
 8002db4:	4603      	mov	r3, r0
 8002db6:	2216      	movs	r2, #22
 8002db8:	601a      	str	r2, [r3, #0]
 8002dba:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8002dbe:	4618      	mov	r0, r3
 8002dc0:	3708      	adds	r7, #8
 8002dc2:	46bd      	mov	sp, r7
 8002dc4:	bd80      	pop	{r7, pc}

08002dc6 <_exit>:
 8002dc6:	b580      	push	{r7, lr}
 8002dc8:	b082      	sub	sp, #8
 8002dca:	af00      	add	r7, sp, #0
 8002dcc:	6078      	str	r0, [r7, #4]
 8002dce:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 8002dd2:	6878      	ldr	r0, [r7, #4]
 8002dd4:	f7ff ffe7 	bl	8002da6 <_kill>
 8002dd8:	bf00      	nop
 8002dda:	e7fd      	b.n	8002dd8 <_exit+0x12>

08002ddc <_close>:
 8002ddc:	b480      	push	{r7}
 8002dde:	b083      	sub	sp, #12
 8002de0:	af00      	add	r7, sp, #0
 8002de2:	6078      	str	r0, [r7, #4]
 8002de4:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8002de8:	4618      	mov	r0, r3
 8002dea:	370c      	adds	r7, #12
 8002dec:	46bd      	mov	sp, r7
 8002dee:	bc80      	pop	{r7}
 8002df0:	4770      	bx	lr

08002df2 <_fstat>:
 8002df2:	b480      	push	{r7}
 8002df4:	b083      	sub	sp, #12
 8002df6:	af00      	add	r7, sp, #0
 8002df8:	6078      	str	r0, [r7, #4]
 8002dfa:	6039      	str	r1, [r7, #0]
 8002dfc:	683b      	ldr	r3, [r7, #0]
 8002dfe:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8002e02:	605a      	str	r2, [r3, #4]
 8002e04:	2300      	movs	r3, #0
 8002e06:	4618      	mov	r0, r3
 8002e08:	370c      	adds	r7, #12
 8002e0a:	46bd      	mov	sp, r7
 8002e0c:	bc80      	pop	{r7}
 8002e0e:	4770      	bx	lr

08002e10 <_isatty>:
 8002e10:	b480      	push	{r7}
 8002e12:	b083      	sub	sp, #12
 8002e14:	af00      	add	r7, sp, #0
 8002e16:	6078      	str	r0, [r7, #4]
 8002e18:	2301      	movs	r3, #1
 8002e1a:	4618      	mov	r0, r3
 8002e1c:	370c      	adds	r7, #12
 8002e1e:	46bd      	mov	sp, r7
 8002e20:	bc80      	pop	{r7}
 8002e22:	4770      	bx	lr

08002e24 <_lseek>:
 8002e24:	b480      	push	{r7}
 8002e26:	b085      	sub	sp, #20
 8002e28:	af00      	add	r7, sp, #0
 8002e2a:	60f8      	str	r0, [r7, #12]
 8002e2c:	60b9      	str	r1, [r7, #8]
 8002e2e:	607a      	str	r2, [r7, #4]
 8002e30:	2300      	movs	r3, #0
 8002e32:	4618      	mov	r0, r3
 8002e34:	3714      	adds	r7, #20
 8002e36:	46bd      	mov	sp, r7
 8002e38:	bc80      	pop	{r7}
 8002e3a:	4770      	bx	lr

08002e3c <_sbrk>:
 8002e3c:	b580      	push	{r7, lr}
 8002e3e:	b086      	sub	sp, #24
 8002e40:	af00      	add	r7, sp, #0
 8002e42:	6078      	str	r0, [r7, #4]
 8002e44:	4a14      	ldr	r2, [pc, #80]	@ (8002e98 <_sbrk+0x5c>)
 8002e46:	4b15      	ldr	r3, [pc, #84]	@ (8002e9c <_sbrk+0x60>)
 8002e48:	1ad3      	subs	r3, r2, r3
 8002e4a:	617b      	str	r3, [r7, #20]
 8002e4c:	697b      	ldr	r3, [r7, #20]
 8002e4e:	613b      	str	r3, [r7, #16]
 8002e50:	4b13      	ldr	r3, [pc, #76]	@ (8002ea0 <_sbrk+0x64>)
 8002e52:	681b      	ldr	r3, [r3, #0]
 8002e54:	2b00      	cmp	r3, #0
 8002e56:	d102      	bne.n	8002e5e <_sbrk+0x22>
 8002e58:	4b11      	ldr	r3, [pc, #68]	@ (8002ea0 <_sbrk+0x64>)
 8002e5a:	4a12      	ldr	r2, [pc, #72]	@ (8002ea4 <_sbrk+0x68>)
 8002e5c:	601a      	str	r2, [r3, #0]
 8002e5e:	4b10      	ldr	r3, [pc, #64]	@ (8002ea0 <_sbrk+0x64>)
 8002e60:	681a      	ldr	r2, [r3, #0]
 8002e62:	687b      	ldr	r3, [r7, #4]
 8002e64:	4413      	add	r3, r2
 8002e66:	693a      	ldr	r2, [r7, #16]
 8002e68:	429a      	cmp	r2, r3
 8002e6a:	d207      	bcs.n	8002e7c <_sbrk+0x40>
 8002e6c:	f004 f93a 	bl	80070e4 <__errno>
 8002e70:	4603      	mov	r3, r0
 8002e72:	220c      	movs	r2, #12
 8002e74:	601a      	str	r2, [r3, #0]
 8002e76:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8002e7a:	e009      	b.n	8002e90 <_sbrk+0x54>
 8002e7c:	4b08      	ldr	r3, [pc, #32]	@ (8002ea0 <_sbrk+0x64>)
 8002e7e:	681b      	ldr	r3, [r3, #0]
 8002e80:	60fb      	str	r3, [r7, #12]
 8002e82:	4b07      	ldr	r3, [pc, #28]	@ (8002ea0 <_sbrk+0x64>)
 8002e84:	681a      	ldr	r2, [r3, #0]
 8002e86:	687b      	ldr	r3, [r7, #4]
 8002e88:	4413      	add	r3, r2
 8002e8a:	4a05      	ldr	r2, [pc, #20]	@ (8002ea0 <_sbrk+0x64>)
 8002e8c:	6013      	str	r3, [r2, #0]
 8002e8e:	68fb      	ldr	r3, [r7, #12]
 8002e90:	4618      	mov	r0, r3
 8002e92:	3718      	adds	r7, #24
 8002e94:	46bd      	mov	sp, r7
 8002e96:	bd80      	pop	{r7, pc}
 8002e98:	20005000 	.word	0x20005000
 8002e9c:	00000400 	.word	0x00000400
 8002ea0:	200005f0 	.word	0x200005f0
 8002ea4:	20000748 	.word	0x20000748

08002ea8 <SystemInit>:
 8002ea8:	b480      	push	{r7}
 8002eaa:	af00      	add	r7, sp, #0
 8002eac:	bf00      	nop
 8002eae:	46bd      	mov	sp, r7
 8002eb0:	bc80      	pop	{r7}
 8002eb2:	4770      	bx	lr

08002eb4 <Reset_Handler>:
 8002eb4:	f7ff fff8 	bl	8002ea8 <SystemInit>
 8002eb8:	480b      	ldr	r0, [pc, #44]	@ (8002ee8 <LoopFillZerobss+0xe>)
 8002eba:	490c      	ldr	r1, [pc, #48]	@ (8002eec <LoopFillZerobss+0x12>)
 8002ebc:	4a0c      	ldr	r2, [pc, #48]	@ (8002ef0 <LoopFillZerobss+0x16>)
 8002ebe:	2300      	movs	r3, #0
 8002ec0:	e002      	b.n	8002ec8 <LoopCopyDataInit>

08002ec2 <CopyDataInit>:
 8002ec2:	58d4      	ldr	r4, [r2, r3]
 8002ec4:	50c4      	str	r4, [r0, r3]
 8002ec6:	3304      	adds	r3, #4

08002ec8 <LoopCopyDataInit>:
 8002ec8:	18c4      	adds	r4, r0, r3
 8002eca:	428c      	cmp	r4, r1
 8002ecc:	d3f9      	bcc.n	8002ec2 <CopyDataInit>
 8002ece:	4a09      	ldr	r2, [pc, #36]	@ (8002ef4 <LoopFillZerobss+0x1a>)
 8002ed0:	4c09      	ldr	r4, [pc, #36]	@ (8002ef8 <LoopFillZerobss+0x1e>)
 8002ed2:	2300      	movs	r3, #0
 8002ed4:	e001      	b.n	8002eda <LoopFillZerobss>

08002ed6 <FillZerobss>:
 8002ed6:	6013      	str	r3, [r2, #0]
 8002ed8:	3204      	adds	r2, #4

08002eda <LoopFillZerobss>:
 8002eda:	42a2      	cmp	r2, r4
 8002edc:	d3fb      	bcc.n	8002ed6 <FillZerobss>
 8002ede:	f004 f907 	bl	80070f0 <__libc_init_array>
 8002ee2:	f7ff fb21 	bl	8002528 <main>
 8002ee6:	4770      	bx	lr
 8002ee8:	20000000 	.word	0x20000000
 8002eec:	200001e8 	.word	0x200001e8
 8002ef0:	08009480 	.word	0x08009480
 8002ef4:	200001e8 	.word	0x200001e8
 8002ef8:	20000744 	.word	0x20000744

08002efc <ADC1_2_IRQHandler>:
 8002efc:	e7fe      	b.n	8002efc <ADC1_2_IRQHandler>
	...

08002f00 <HAL_Init>:
 8002f00:	b580      	push	{r7, lr}
 8002f02:	af00      	add	r7, sp, #0
 8002f04:	4b08      	ldr	r3, [pc, #32]	@ (8002f28 <HAL_Init+0x28>)
 8002f06:	681b      	ldr	r3, [r3, #0]
 8002f08:	4a07      	ldr	r2, [pc, #28]	@ (8002f28 <HAL_Init+0x28>)
 8002f0a:	f043 0310 	orr.w	r3, r3, #16
 8002f0e:	6013      	str	r3, [r2, #0]
 8002f10:	2003      	movs	r0, #3
 8002f12:	f000 f947 	bl	80031a4 <HAL_NVIC_SetPriorityGrouping>
 8002f16:	200f      	movs	r0, #15
 8002f18:	f000 f808 	bl	8002f2c <HAL_InitTick>
 8002f1c:	f7ff fd22 	bl	8002964 <HAL_MspInit>
 8002f20:	2300      	movs	r3, #0
 8002f22:	4618      	mov	r0, r3
 8002f24:	bd80      	pop	{r7, pc}
 8002f26:	bf00      	nop
 8002f28:	40022000 	.word	0x40022000

08002f2c <HAL_InitTick>:
 8002f2c:	b580      	push	{r7, lr}
 8002f2e:	b082      	sub	sp, #8
 8002f30:	af00      	add	r7, sp, #0
 8002f32:	6078      	str	r0, [r7, #4]
 8002f34:	4b12      	ldr	r3, [pc, #72]	@ (8002f80 <HAL_InitTick+0x54>)
 8002f36:	681a      	ldr	r2, [r3, #0]
 8002f38:	4b12      	ldr	r3, [pc, #72]	@ (8002f84 <HAL_InitTick+0x58>)
 8002f3a:	781b      	ldrb	r3, [r3, #0]
 8002f3c:	4619      	mov	r1, r3
 8002f3e:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8002f42:	fbb3 f3f1 	udiv	r3, r3, r1
 8002f46:	fbb2 f3f3 	udiv	r3, r2, r3
 8002f4a:	4618      	mov	r0, r3
 8002f4c:	f000 f95f 	bl	800320e <HAL_SYSTICK_Config>
 8002f50:	4603      	mov	r3, r0
 8002f52:	2b00      	cmp	r3, #0
 8002f54:	d001      	beq.n	8002f5a <HAL_InitTick+0x2e>
 8002f56:	2301      	movs	r3, #1
 8002f58:	e00e      	b.n	8002f78 <HAL_InitTick+0x4c>
 8002f5a:	687b      	ldr	r3, [r7, #4]
 8002f5c:	2b0f      	cmp	r3, #15
 8002f5e:	d80a      	bhi.n	8002f76 <HAL_InitTick+0x4a>
 8002f60:	2200      	movs	r2, #0
 8002f62:	6879      	ldr	r1, [r7, #4]
 8002f64:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8002f68:	f000 f927 	bl	80031ba <HAL_NVIC_SetPriority>
 8002f6c:	4a06      	ldr	r2, [pc, #24]	@ (8002f88 <HAL_InitTick+0x5c>)
 8002f6e:	687b      	ldr	r3, [r7, #4]
 8002f70:	6013      	str	r3, [r2, #0]
 8002f72:	2300      	movs	r3, #0
 8002f74:	e000      	b.n	8002f78 <HAL_InitTick+0x4c>
 8002f76:	2301      	movs	r3, #1
 8002f78:	4618      	mov	r0, r3
 8002f7a:	3708      	adds	r7, #8
 8002f7c:	46bd      	mov	sp, r7
 8002f7e:	bd80      	pop	{r7, pc}
 8002f80:	20000014 	.word	0x20000014
 8002f84:	2000001c 	.word	0x2000001c
 8002f88:	20000018 	.word	0x20000018

08002f8c <HAL_IncTick>:
 8002f8c:	b480      	push	{r7}
 8002f8e:	af00      	add	r7, sp, #0
 8002f90:	4b05      	ldr	r3, [pc, #20]	@ (8002fa8 <HAL_IncTick+0x1c>)
 8002f92:	781b      	ldrb	r3, [r3, #0]
 8002f94:	461a      	mov	r2, r3
 8002f96:	4b05      	ldr	r3, [pc, #20]	@ (8002fac <HAL_IncTick+0x20>)
 8002f98:	681b      	ldr	r3, [r3, #0]
 8002f9a:	4413      	add	r3, r2
 8002f9c:	4a03      	ldr	r2, [pc, #12]	@ (8002fac <HAL_IncTick+0x20>)
 8002f9e:	6013      	str	r3, [r2, #0]
 8002fa0:	bf00      	nop
 8002fa2:	46bd      	mov	sp, r7
 8002fa4:	bc80      	pop	{r7}
 8002fa6:	4770      	bx	lr
 8002fa8:	2000001c 	.word	0x2000001c
 8002fac:	200005f4 	.word	0x200005f4

08002fb0 <HAL_GetTick>:
 8002fb0:	b480      	push	{r7}
 8002fb2:	af00      	add	r7, sp, #0
 8002fb4:	4b02      	ldr	r3, [pc, #8]	@ (8002fc0 <HAL_GetTick+0x10>)
 8002fb6:	681b      	ldr	r3, [r3, #0]
 8002fb8:	4618      	mov	r0, r3
 8002fba:	46bd      	mov	sp, r7
 8002fbc:	bc80      	pop	{r7}
 8002fbe:	4770      	bx	lr
 8002fc0:	200005f4 	.word	0x200005f4

08002fc4 <HAL_Delay>:
 8002fc4:	b580      	push	{r7, lr}
 8002fc6:	b084      	sub	sp, #16
 8002fc8:	af00      	add	r7, sp, #0
 8002fca:	6078      	str	r0, [r7, #4]
 8002fcc:	f7ff fff0 	bl	8002fb0 <HAL_GetTick>
 8002fd0:	60b8      	str	r0, [r7, #8]
 8002fd2:	687b      	ldr	r3, [r7, #4]
 8002fd4:	60fb      	str	r3, [r7, #12]
 8002fd6:	68fb      	ldr	r3, [r7, #12]
 8002fd8:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8002fdc:	d005      	beq.n	8002fea <HAL_Delay+0x26>
 8002fde:	4b0a      	ldr	r3, [pc, #40]	@ (8003008 <HAL_Delay+0x44>)
 8002fe0:	781b      	ldrb	r3, [r3, #0]
 8002fe2:	461a      	mov	r2, r3
 8002fe4:	68fb      	ldr	r3, [r7, #12]
 8002fe6:	4413      	add	r3, r2
 8002fe8:	60fb      	str	r3, [r7, #12]
 8002fea:	bf00      	nop
 8002fec:	f7ff ffe0 	bl	8002fb0 <HAL_GetTick>
 8002ff0:	4602      	mov	r2, r0
 8002ff2:	68bb      	ldr	r3, [r7, #8]
 8002ff4:	1ad3      	subs	r3, r2, r3
 8002ff6:	68fa      	ldr	r2, [r7, #12]
 8002ff8:	429a      	cmp	r2, r3
 8002ffa:	d8f7      	bhi.n	8002fec <HAL_Delay+0x28>
 8002ffc:	bf00      	nop
 8002ffe:	bf00      	nop
 8003000:	3710      	adds	r7, #16
 8003002:	46bd      	mov	sp, r7
 8003004:	bd80      	pop	{r7, pc}
 8003006:	bf00      	nop
 8003008:	2000001c 	.word	0x2000001c

0800300c <__NVIC_SetPriorityGrouping>:
 800300c:	b480      	push	{r7}
 800300e:	b085      	sub	sp, #20
 8003010:	af00      	add	r7, sp, #0
 8003012:	6078      	str	r0, [r7, #4]
 8003014:	687b      	ldr	r3, [r7, #4]
 8003016:	f003 0307 	and.w	r3, r3, #7
 800301a:	60fb      	str	r3, [r7, #12]
 800301c:	4b0c      	ldr	r3, [pc, #48]	@ (8003050 <__NVIC_SetPriorityGrouping+0x44>)
 800301e:	68db      	ldr	r3, [r3, #12]
 8003020:	60bb      	str	r3, [r7, #8]
 8003022:	68ba      	ldr	r2, [r7, #8]
 8003024:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8003028:	4013      	ands	r3, r2
 800302a:	60bb      	str	r3, [r7, #8]
 800302c:	68fb      	ldr	r3, [r7, #12]
 800302e:	021a      	lsls	r2, r3, #8
 8003030:	68bb      	ldr	r3, [r7, #8]
 8003032:	4313      	orrs	r3, r2
 8003034:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8003038:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800303c:	60bb      	str	r3, [r7, #8]
 800303e:	4a04      	ldr	r2, [pc, #16]	@ (8003050 <__NVIC_SetPriorityGrouping+0x44>)
 8003040:	68bb      	ldr	r3, [r7, #8]
 8003042:	60d3      	str	r3, [r2, #12]
 8003044:	bf00      	nop
 8003046:	3714      	adds	r7, #20
 8003048:	46bd      	mov	sp, r7
 800304a:	bc80      	pop	{r7}
 800304c:	4770      	bx	lr
 800304e:	bf00      	nop
 8003050:	e000ed00 	.word	0xe000ed00

08003054 <__NVIC_GetPriorityGrouping>:
 8003054:	b480      	push	{r7}
 8003056:	af00      	add	r7, sp, #0
 8003058:	4b04      	ldr	r3, [pc, #16]	@ (800306c <__NVIC_GetPriorityGrouping+0x18>)
 800305a:	68db      	ldr	r3, [r3, #12]
 800305c:	0a1b      	lsrs	r3, r3, #8
 800305e:	f003 0307 	and.w	r3, r3, #7
 8003062:	4618      	mov	r0, r3
 8003064:	46bd      	mov	sp, r7
 8003066:	bc80      	pop	{r7}
 8003068:	4770      	bx	lr
 800306a:	bf00      	nop
 800306c:	e000ed00 	.word	0xe000ed00

08003070 <__NVIC_EnableIRQ>:
 8003070:	b480      	push	{r7}
 8003072:	b083      	sub	sp, #12
 8003074:	af00      	add	r7, sp, #0
 8003076:	4603      	mov	r3, r0
 8003078:	71fb      	strb	r3, [r7, #7]
 800307a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800307e:	2b00      	cmp	r3, #0
 8003080:	db0b      	blt.n	800309a <__NVIC_EnableIRQ+0x2a>
 8003082:	79fb      	ldrb	r3, [r7, #7]
 8003084:	f003 021f 	and.w	r2, r3, #31
 8003088:	4906      	ldr	r1, [pc, #24]	@ (80030a4 <__NVIC_EnableIRQ+0x34>)
 800308a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800308e:	095b      	lsrs	r3, r3, #5
 8003090:	2001      	movs	r0, #1
 8003092:	fa00 f202 	lsl.w	r2, r0, r2
 8003096:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800309a:	bf00      	nop
 800309c:	370c      	adds	r7, #12
 800309e:	46bd      	mov	sp, r7
 80030a0:	bc80      	pop	{r7}
 80030a2:	4770      	bx	lr
 80030a4:	e000e100 	.word	0xe000e100

080030a8 <__NVIC_SetPriority>:
 80030a8:	b480      	push	{r7}
 80030aa:	b083      	sub	sp, #12
 80030ac:	af00      	add	r7, sp, #0
 80030ae:	4603      	mov	r3, r0
 80030b0:	6039      	str	r1, [r7, #0]
 80030b2:	71fb      	strb	r3, [r7, #7]
 80030b4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80030b8:	2b00      	cmp	r3, #0
 80030ba:	db0a      	blt.n	80030d2 <__NVIC_SetPriority+0x2a>
 80030bc:	683b      	ldr	r3, [r7, #0]
 80030be:	b2da      	uxtb	r2, r3
 80030c0:	490c      	ldr	r1, [pc, #48]	@ (80030f4 <__NVIC_SetPriority+0x4c>)
 80030c2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80030c6:	0112      	lsls	r2, r2, #4
 80030c8:	b2d2      	uxtb	r2, r2
 80030ca:	440b      	add	r3, r1
 80030cc:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 80030d0:	e00a      	b.n	80030e8 <__NVIC_SetPriority+0x40>
 80030d2:	683b      	ldr	r3, [r7, #0]
 80030d4:	b2da      	uxtb	r2, r3
 80030d6:	4908      	ldr	r1, [pc, #32]	@ (80030f8 <__NVIC_SetPriority+0x50>)
 80030d8:	79fb      	ldrb	r3, [r7, #7]
 80030da:	f003 030f 	and.w	r3, r3, #15
 80030de:	3b04      	subs	r3, #4
 80030e0:	0112      	lsls	r2, r2, #4
 80030e2:	b2d2      	uxtb	r2, r2
 80030e4:	440b      	add	r3, r1
 80030e6:	761a      	strb	r2, [r3, #24]
 80030e8:	bf00      	nop
 80030ea:	370c      	adds	r7, #12
 80030ec:	46bd      	mov	sp, r7
 80030ee:	bc80      	pop	{r7}
 80030f0:	4770      	bx	lr
 80030f2:	bf00      	nop
 80030f4:	e000e100 	.word	0xe000e100
 80030f8:	e000ed00 	.word	0xe000ed00

080030fc <NVIC_EncodePriority>:
 80030fc:	b480      	push	{r7}
 80030fe:	b089      	sub	sp, #36	@ 0x24
 8003100:	af00      	add	r7, sp, #0
 8003102:	60f8      	str	r0, [r7, #12]
 8003104:	60b9      	str	r1, [r7, #8]
 8003106:	607a      	str	r2, [r7, #4]
 8003108:	68fb      	ldr	r3, [r7, #12]
 800310a:	f003 0307 	and.w	r3, r3, #7
 800310e:	61fb      	str	r3, [r7, #28]
 8003110:	69fb      	ldr	r3, [r7, #28]
 8003112:	f1c3 0307 	rsb	r3, r3, #7
 8003116:	2b04      	cmp	r3, #4
 8003118:	bf28      	it	cs
 800311a:	2304      	movcs	r3, #4
 800311c:	61bb      	str	r3, [r7, #24]
 800311e:	69fb      	ldr	r3, [r7, #28]
 8003120:	3304      	adds	r3, #4
 8003122:	2b06      	cmp	r3, #6
 8003124:	d902      	bls.n	800312c <NVIC_EncodePriority+0x30>
 8003126:	69fb      	ldr	r3, [r7, #28]
 8003128:	3b03      	subs	r3, #3
 800312a:	e000      	b.n	800312e <NVIC_EncodePriority+0x32>
 800312c:	2300      	movs	r3, #0
 800312e:	617b      	str	r3, [r7, #20]
 8003130:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8003134:	69bb      	ldr	r3, [r7, #24]
 8003136:	fa02 f303 	lsl.w	r3, r2, r3
 800313a:	43da      	mvns	r2, r3
 800313c:	68bb      	ldr	r3, [r7, #8]
 800313e:	401a      	ands	r2, r3
 8003140:	697b      	ldr	r3, [r7, #20]
 8003142:	409a      	lsls	r2, r3
 8003144:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 8003148:	697b      	ldr	r3, [r7, #20]
 800314a:	fa01 f303 	lsl.w	r3, r1, r3
 800314e:	43d9      	mvns	r1, r3
 8003150:	687b      	ldr	r3, [r7, #4]
 8003152:	400b      	ands	r3, r1
 8003154:	4313      	orrs	r3, r2
 8003156:	4618      	mov	r0, r3
 8003158:	3724      	adds	r7, #36	@ 0x24
 800315a:	46bd      	mov	sp, r7
 800315c:	bc80      	pop	{r7}
 800315e:	4770      	bx	lr

08003160 <SysTick_Config>:
 8003160:	b580      	push	{r7, lr}
 8003162:	b082      	sub	sp, #8
 8003164:	af00      	add	r7, sp, #0
 8003166:	6078      	str	r0, [r7, #4]
 8003168:	687b      	ldr	r3, [r7, #4]
 800316a:	3b01      	subs	r3, #1
 800316c:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8003170:	d301      	bcc.n	8003176 <SysTick_Config+0x16>
 8003172:	2301      	movs	r3, #1
 8003174:	e00f      	b.n	8003196 <SysTick_Config+0x36>
 8003176:	4a0a      	ldr	r2, [pc, #40]	@ (80031a0 <SysTick_Config+0x40>)
 8003178:	687b      	ldr	r3, [r7, #4]
 800317a:	3b01      	subs	r3, #1
 800317c:	6053      	str	r3, [r2, #4]
 800317e:	210f      	movs	r1, #15
 8003180:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003184:	f7ff ff90 	bl	80030a8 <__NVIC_SetPriority>
 8003188:	4b05      	ldr	r3, [pc, #20]	@ (80031a0 <SysTick_Config+0x40>)
 800318a:	2200      	movs	r2, #0
 800318c:	609a      	str	r2, [r3, #8]
 800318e:	4b04      	ldr	r3, [pc, #16]	@ (80031a0 <SysTick_Config+0x40>)
 8003190:	2207      	movs	r2, #7
 8003192:	601a      	str	r2, [r3, #0]
 8003194:	2300      	movs	r3, #0
 8003196:	4618      	mov	r0, r3
 8003198:	3708      	adds	r7, #8
 800319a:	46bd      	mov	sp, r7
 800319c:	bd80      	pop	{r7, pc}
 800319e:	bf00      	nop
 80031a0:	e000e010 	.word	0xe000e010

080031a4 <HAL_NVIC_SetPriorityGrouping>:
 80031a4:	b580      	push	{r7, lr}
 80031a6:	b082      	sub	sp, #8
 80031a8:	af00      	add	r7, sp, #0
 80031aa:	6078      	str	r0, [r7, #4]
 80031ac:	6878      	ldr	r0, [r7, #4]
 80031ae:	f7ff ff2d 	bl	800300c <__NVIC_SetPriorityGrouping>
 80031b2:	bf00      	nop
 80031b4:	3708      	adds	r7, #8
 80031b6:	46bd      	mov	sp, r7
 80031b8:	bd80      	pop	{r7, pc}

080031ba <HAL_NVIC_SetPriority>:
 80031ba:	b580      	push	{r7, lr}
 80031bc:	b086      	sub	sp, #24
 80031be:	af00      	add	r7, sp, #0
 80031c0:	4603      	mov	r3, r0
 80031c2:	60b9      	str	r1, [r7, #8]
 80031c4:	607a      	str	r2, [r7, #4]
 80031c6:	73fb      	strb	r3, [r7, #15]
 80031c8:	2300      	movs	r3, #0
 80031ca:	617b      	str	r3, [r7, #20]
 80031cc:	f7ff ff42 	bl	8003054 <__NVIC_GetPriorityGrouping>
 80031d0:	6178      	str	r0, [r7, #20]
 80031d2:	687a      	ldr	r2, [r7, #4]
 80031d4:	68b9      	ldr	r1, [r7, #8]
 80031d6:	6978      	ldr	r0, [r7, #20]
 80031d8:	f7ff ff90 	bl	80030fc <NVIC_EncodePriority>
 80031dc:	4602      	mov	r2, r0
 80031de:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80031e2:	4611      	mov	r1, r2
 80031e4:	4618      	mov	r0, r3
 80031e6:	f7ff ff5f 	bl	80030a8 <__NVIC_SetPriority>
 80031ea:	bf00      	nop
 80031ec:	3718      	adds	r7, #24
 80031ee:	46bd      	mov	sp, r7
 80031f0:	bd80      	pop	{r7, pc}

080031f2 <HAL_NVIC_EnableIRQ>:
 80031f2:	b580      	push	{r7, lr}
 80031f4:	b082      	sub	sp, #8
 80031f6:	af00      	add	r7, sp, #0
 80031f8:	4603      	mov	r3, r0
 80031fa:	71fb      	strb	r3, [r7, #7]
 80031fc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003200:	4618      	mov	r0, r3
 8003202:	f7ff ff35 	bl	8003070 <__NVIC_EnableIRQ>
 8003206:	bf00      	nop
 8003208:	3708      	adds	r7, #8
 800320a:	46bd      	mov	sp, r7
 800320c:	bd80      	pop	{r7, pc}

0800320e <HAL_SYSTICK_Config>:
 800320e:	b580      	push	{r7, lr}
 8003210:	b082      	sub	sp, #8
 8003212:	af00      	add	r7, sp, #0
 8003214:	6078      	str	r0, [r7, #4]
 8003216:	6878      	ldr	r0, [r7, #4]
 8003218:	f7ff ffa2 	bl	8003160 <SysTick_Config>
 800321c:	4603      	mov	r3, r0
 800321e:	4618      	mov	r0, r3
 8003220:	3708      	adds	r7, #8
 8003222:	46bd      	mov	sp, r7
 8003224:	bd80      	pop	{r7, pc}
	...

08003228 <HAL_DMA_Init>:
 8003228:	b480      	push	{r7}
 800322a:	b085      	sub	sp, #20
 800322c:	af00      	add	r7, sp, #0
 800322e:	6078      	str	r0, [r7, #4]
 8003230:	2300      	movs	r3, #0
 8003232:	60fb      	str	r3, [r7, #12]
 8003234:	687b      	ldr	r3, [r7, #4]
 8003236:	2b00      	cmp	r3, #0
 8003238:	d101      	bne.n	800323e <HAL_DMA_Init+0x16>
 800323a:	2301      	movs	r3, #1
 800323c:	e043      	b.n	80032c6 <HAL_DMA_Init+0x9e>
 800323e:	687b      	ldr	r3, [r7, #4]
 8003240:	681b      	ldr	r3, [r3, #0]
 8003242:	461a      	mov	r2, r3
 8003244:	4b22      	ldr	r3, [pc, #136]	@ (80032d0 <HAL_DMA_Init+0xa8>)
 8003246:	4413      	add	r3, r2
 8003248:	4a22      	ldr	r2, [pc, #136]	@ (80032d4 <HAL_DMA_Init+0xac>)
 800324a:	fba2 2303 	umull	r2, r3, r2, r3
 800324e:	091b      	lsrs	r3, r3, #4
 8003250:	009a      	lsls	r2, r3, #2
 8003252:	687b      	ldr	r3, [r7, #4]
 8003254:	641a      	str	r2, [r3, #64]	@ 0x40
 8003256:	687b      	ldr	r3, [r7, #4]
 8003258:	4a1f      	ldr	r2, [pc, #124]	@ (80032d8 <HAL_DMA_Init+0xb0>)
 800325a:	63da      	str	r2, [r3, #60]	@ 0x3c
 800325c:	687b      	ldr	r3, [r7, #4]
 800325e:	2202      	movs	r2, #2
 8003260:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 8003264:	687b      	ldr	r3, [r7, #4]
 8003266:	681b      	ldr	r3, [r3, #0]
 8003268:	681b      	ldr	r3, [r3, #0]
 800326a:	60fb      	str	r3, [r7, #12]
 800326c:	68fb      	ldr	r3, [r7, #12]
 800326e:	f423 537f 	bic.w	r3, r3, #16320	@ 0x3fc0
 8003272:	f023 0330 	bic.w	r3, r3, #48	@ 0x30
 8003276:	60fb      	str	r3, [r7, #12]
 8003278:	687b      	ldr	r3, [r7, #4]
 800327a:	685a      	ldr	r2, [r3, #4]
 800327c:	687b      	ldr	r3, [r7, #4]
 800327e:	689b      	ldr	r3, [r3, #8]
 8003280:	431a      	orrs	r2, r3
 8003282:	687b      	ldr	r3, [r7, #4]
 8003284:	68db      	ldr	r3, [r3, #12]
 8003286:	431a      	orrs	r2, r3
 8003288:	687b      	ldr	r3, [r7, #4]
 800328a:	691b      	ldr	r3, [r3, #16]
 800328c:	431a      	orrs	r2, r3
 800328e:	687b      	ldr	r3, [r7, #4]
 8003290:	695b      	ldr	r3, [r3, #20]
 8003292:	431a      	orrs	r2, r3
 8003294:	687b      	ldr	r3, [r7, #4]
 8003296:	699b      	ldr	r3, [r3, #24]
 8003298:	431a      	orrs	r2, r3
 800329a:	687b      	ldr	r3, [r7, #4]
 800329c:	69db      	ldr	r3, [r3, #28]
 800329e:	4313      	orrs	r3, r2
 80032a0:	68fa      	ldr	r2, [r7, #12]
 80032a2:	4313      	orrs	r3, r2
 80032a4:	60fb      	str	r3, [r7, #12]
 80032a6:	687b      	ldr	r3, [r7, #4]
 80032a8:	681b      	ldr	r3, [r3, #0]
 80032aa:	68fa      	ldr	r2, [r7, #12]
 80032ac:	601a      	str	r2, [r3, #0]
 80032ae:	687b      	ldr	r3, [r7, #4]
 80032b0:	2200      	movs	r2, #0
 80032b2:	639a      	str	r2, [r3, #56]	@ 0x38
 80032b4:	687b      	ldr	r3, [r7, #4]
 80032b6:	2201      	movs	r2, #1
 80032b8:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 80032bc:	687b      	ldr	r3, [r7, #4]
 80032be:	2200      	movs	r2, #0
 80032c0:	f883 2020 	strb.w	r2, [r3, #32]
 80032c4:	2300      	movs	r3, #0
 80032c6:	4618      	mov	r0, r3
 80032c8:	3714      	adds	r7, #20
 80032ca:	46bd      	mov	sp, r7
 80032cc:	bc80      	pop	{r7}
 80032ce:	4770      	bx	lr
 80032d0:	bffdfff8 	.word	0xbffdfff8
 80032d4:	cccccccd 	.word	0xcccccccd
 80032d8:	40020000 	.word	0x40020000

080032dc <HAL_DMA_Abort>:
 80032dc:	b480      	push	{r7}
 80032de:	b085      	sub	sp, #20
 80032e0:	af00      	add	r7, sp, #0
 80032e2:	6078      	str	r0, [r7, #4]
 80032e4:	2300      	movs	r3, #0
 80032e6:	73fb      	strb	r3, [r7, #15]
 80032e8:	687b      	ldr	r3, [r7, #4]
 80032ea:	f893 3021 	ldrb.w	r3, [r3, #33]	@ 0x21
 80032ee:	b2db      	uxtb	r3, r3
 80032f0:	2b02      	cmp	r3, #2
 80032f2:	d008      	beq.n	8003306 <HAL_DMA_Abort+0x2a>
 80032f4:	687b      	ldr	r3, [r7, #4]
 80032f6:	2204      	movs	r2, #4
 80032f8:	639a      	str	r2, [r3, #56]	@ 0x38
 80032fa:	687b      	ldr	r3, [r7, #4]
 80032fc:	2200      	movs	r2, #0
 80032fe:	f883 2020 	strb.w	r2, [r3, #32]
 8003302:	2301      	movs	r3, #1
 8003304:	e020      	b.n	8003348 <HAL_DMA_Abort+0x6c>
 8003306:	687b      	ldr	r3, [r7, #4]
 8003308:	681b      	ldr	r3, [r3, #0]
 800330a:	681a      	ldr	r2, [r3, #0]
 800330c:	687b      	ldr	r3, [r7, #4]
 800330e:	681b      	ldr	r3, [r3, #0]
 8003310:	f022 020e 	bic.w	r2, r2, #14
 8003314:	601a      	str	r2, [r3, #0]
 8003316:	687b      	ldr	r3, [r7, #4]
 8003318:	681b      	ldr	r3, [r3, #0]
 800331a:	681a      	ldr	r2, [r3, #0]
 800331c:	687b      	ldr	r3, [r7, #4]
 800331e:	681b      	ldr	r3, [r3, #0]
 8003320:	f022 0201 	bic.w	r2, r2, #1
 8003324:	601a      	str	r2, [r3, #0]
 8003326:	687b      	ldr	r3, [r7, #4]
 8003328:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800332a:	687b      	ldr	r3, [r7, #4]
 800332c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800332e:	2101      	movs	r1, #1
 8003330:	fa01 f202 	lsl.w	r2, r1, r2
 8003334:	605a      	str	r2, [r3, #4]
 8003336:	687b      	ldr	r3, [r7, #4]
 8003338:	2201      	movs	r2, #1
 800333a:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 800333e:	687b      	ldr	r3, [r7, #4]
 8003340:	2200      	movs	r2, #0
 8003342:	f883 2020 	strb.w	r2, [r3, #32]
 8003346:	7bfb      	ldrb	r3, [r7, #15]
 8003348:	4618      	mov	r0, r3
 800334a:	3714      	adds	r7, #20
 800334c:	46bd      	mov	sp, r7
 800334e:	bc80      	pop	{r7}
 8003350:	4770      	bx	lr
	...

08003354 <HAL_DMA_Abort_IT>:
 8003354:	b580      	push	{r7, lr}
 8003356:	b084      	sub	sp, #16
 8003358:	af00      	add	r7, sp, #0
 800335a:	6078      	str	r0, [r7, #4]
 800335c:	2300      	movs	r3, #0
 800335e:	73fb      	strb	r3, [r7, #15]
 8003360:	687b      	ldr	r3, [r7, #4]
 8003362:	f893 3021 	ldrb.w	r3, [r3, #33]	@ 0x21
 8003366:	b2db      	uxtb	r3, r3
 8003368:	2b02      	cmp	r3, #2
 800336a:	d005      	beq.n	8003378 <HAL_DMA_Abort_IT+0x24>
 800336c:	687b      	ldr	r3, [r7, #4]
 800336e:	2204      	movs	r2, #4
 8003370:	639a      	str	r2, [r3, #56]	@ 0x38
 8003372:	2301      	movs	r3, #1
 8003374:	73fb      	strb	r3, [r7, #15]
 8003376:	e051      	b.n	800341c <HAL_DMA_Abort_IT+0xc8>
 8003378:	687b      	ldr	r3, [r7, #4]
 800337a:	681b      	ldr	r3, [r3, #0]
 800337c:	681a      	ldr	r2, [r3, #0]
 800337e:	687b      	ldr	r3, [r7, #4]
 8003380:	681b      	ldr	r3, [r3, #0]
 8003382:	f022 020e 	bic.w	r2, r2, #14
 8003386:	601a      	str	r2, [r3, #0]
 8003388:	687b      	ldr	r3, [r7, #4]
 800338a:	681b      	ldr	r3, [r3, #0]
 800338c:	681a      	ldr	r2, [r3, #0]
 800338e:	687b      	ldr	r3, [r7, #4]
 8003390:	681b      	ldr	r3, [r3, #0]
 8003392:	f022 0201 	bic.w	r2, r2, #1
 8003396:	601a      	str	r2, [r3, #0]
 8003398:	687b      	ldr	r3, [r7, #4]
 800339a:	681b      	ldr	r3, [r3, #0]
 800339c:	4a22      	ldr	r2, [pc, #136]	@ (8003428 <HAL_DMA_Abort_IT+0xd4>)
 800339e:	4293      	cmp	r3, r2
 80033a0:	d029      	beq.n	80033f6 <HAL_DMA_Abort_IT+0xa2>
 80033a2:	687b      	ldr	r3, [r7, #4]
 80033a4:	681b      	ldr	r3, [r3, #0]
 80033a6:	4a21      	ldr	r2, [pc, #132]	@ (800342c <HAL_DMA_Abort_IT+0xd8>)
 80033a8:	4293      	cmp	r3, r2
 80033aa:	d022      	beq.n	80033f2 <HAL_DMA_Abort_IT+0x9e>
 80033ac:	687b      	ldr	r3, [r7, #4]
 80033ae:	681b      	ldr	r3, [r3, #0]
 80033b0:	4a1f      	ldr	r2, [pc, #124]	@ (8003430 <HAL_DMA_Abort_IT+0xdc>)
 80033b2:	4293      	cmp	r3, r2
 80033b4:	d01a      	beq.n	80033ec <HAL_DMA_Abort_IT+0x98>
 80033b6:	687b      	ldr	r3, [r7, #4]
 80033b8:	681b      	ldr	r3, [r3, #0]
 80033ba:	4a1e      	ldr	r2, [pc, #120]	@ (8003434 <HAL_DMA_Abort_IT+0xe0>)
 80033bc:	4293      	cmp	r3, r2
 80033be:	d012      	beq.n	80033e6 <HAL_DMA_Abort_IT+0x92>
 80033c0:	687b      	ldr	r3, [r7, #4]
 80033c2:	681b      	ldr	r3, [r3, #0]
 80033c4:	4a1c      	ldr	r2, [pc, #112]	@ (8003438 <HAL_DMA_Abort_IT+0xe4>)
 80033c6:	4293      	cmp	r3, r2
 80033c8:	d00a      	beq.n	80033e0 <HAL_DMA_Abort_IT+0x8c>
 80033ca:	687b      	ldr	r3, [r7, #4]
 80033cc:	681b      	ldr	r3, [r3, #0]
 80033ce:	4a1b      	ldr	r2, [pc, #108]	@ (800343c <HAL_DMA_Abort_IT+0xe8>)
 80033d0:	4293      	cmp	r3, r2
 80033d2:	d102      	bne.n	80033da <HAL_DMA_Abort_IT+0x86>
 80033d4:	f44f 1380 	mov.w	r3, #1048576	@ 0x100000
 80033d8:	e00e      	b.n	80033f8 <HAL_DMA_Abort_IT+0xa4>
 80033da:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 80033de:	e00b      	b.n	80033f8 <HAL_DMA_Abort_IT+0xa4>
 80033e0:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 80033e4:	e008      	b.n	80033f8 <HAL_DMA_Abort_IT+0xa4>
 80033e6:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80033ea:	e005      	b.n	80033f8 <HAL_DMA_Abort_IT+0xa4>
 80033ec:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80033f0:	e002      	b.n	80033f8 <HAL_DMA_Abort_IT+0xa4>
 80033f2:	2310      	movs	r3, #16
 80033f4:	e000      	b.n	80033f8 <HAL_DMA_Abort_IT+0xa4>
 80033f6:	2301      	movs	r3, #1
 80033f8:	4a11      	ldr	r2, [pc, #68]	@ (8003440 <HAL_DMA_Abort_IT+0xec>)
 80033fa:	6053      	str	r3, [r2, #4]
 80033fc:	687b      	ldr	r3, [r7, #4]
 80033fe:	2201      	movs	r2, #1
 8003400:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 8003404:	687b      	ldr	r3, [r7, #4]
 8003406:	2200      	movs	r2, #0
 8003408:	f883 2020 	strb.w	r2, [r3, #32]
 800340c:	687b      	ldr	r3, [r7, #4]
 800340e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8003410:	2b00      	cmp	r3, #0
 8003412:	d003      	beq.n	800341c <HAL_DMA_Abort_IT+0xc8>
 8003414:	687b      	ldr	r3, [r7, #4]
 8003416:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8003418:	6878      	ldr	r0, [r7, #4]
 800341a:	4798      	blx	r3
 800341c:	7bfb      	ldrb	r3, [r7, #15]
 800341e:	4618      	mov	r0, r3
 8003420:	3710      	adds	r7, #16
 8003422:	46bd      	mov	sp, r7
 8003424:	bd80      	pop	{r7, pc}
 8003426:	bf00      	nop
 8003428:	40020008 	.word	0x40020008
 800342c:	4002001c 	.word	0x4002001c
 8003430:	40020030 	.word	0x40020030
 8003434:	40020044 	.word	0x40020044
 8003438:	40020058 	.word	0x40020058
 800343c:	4002006c 	.word	0x4002006c
 8003440:	40020000 	.word	0x40020000

08003444 <HAL_DMA_IRQHandler>:
 8003444:	b580      	push	{r7, lr}
 8003446:	b084      	sub	sp, #16
 8003448:	af00      	add	r7, sp, #0
 800344a:	6078      	str	r0, [r7, #4]
 800344c:	687b      	ldr	r3, [r7, #4]
 800344e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003450:	681b      	ldr	r3, [r3, #0]
 8003452:	60fb      	str	r3, [r7, #12]
 8003454:	687b      	ldr	r3, [r7, #4]
 8003456:	681b      	ldr	r3, [r3, #0]
 8003458:	681b      	ldr	r3, [r3, #0]
 800345a:	60bb      	str	r3, [r7, #8]
 800345c:	687b      	ldr	r3, [r7, #4]
 800345e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003460:	2204      	movs	r2, #4
 8003462:	409a      	lsls	r2, r3
 8003464:	68fb      	ldr	r3, [r7, #12]
 8003466:	4013      	ands	r3, r2
 8003468:	2b00      	cmp	r3, #0
 800346a:	d04f      	beq.n	800350c <HAL_DMA_IRQHandler+0xc8>
 800346c:	68bb      	ldr	r3, [r7, #8]
 800346e:	f003 0304 	and.w	r3, r3, #4
 8003472:	2b00      	cmp	r3, #0
 8003474:	d04a      	beq.n	800350c <HAL_DMA_IRQHandler+0xc8>
 8003476:	687b      	ldr	r3, [r7, #4]
 8003478:	681b      	ldr	r3, [r3, #0]
 800347a:	681b      	ldr	r3, [r3, #0]
 800347c:	f003 0320 	and.w	r3, r3, #32
 8003480:	2b00      	cmp	r3, #0
 8003482:	d107      	bne.n	8003494 <HAL_DMA_IRQHandler+0x50>
 8003484:	687b      	ldr	r3, [r7, #4]
 8003486:	681b      	ldr	r3, [r3, #0]
 8003488:	681a      	ldr	r2, [r3, #0]
 800348a:	687b      	ldr	r3, [r7, #4]
 800348c:	681b      	ldr	r3, [r3, #0]
 800348e:	f022 0204 	bic.w	r2, r2, #4
 8003492:	601a      	str	r2, [r3, #0]
 8003494:	687b      	ldr	r3, [r7, #4]
 8003496:	681b      	ldr	r3, [r3, #0]
 8003498:	4a66      	ldr	r2, [pc, #408]	@ (8003634 <HAL_DMA_IRQHandler+0x1f0>)
 800349a:	4293      	cmp	r3, r2
 800349c:	d029      	beq.n	80034f2 <HAL_DMA_IRQHandler+0xae>
 800349e:	687b      	ldr	r3, [r7, #4]
 80034a0:	681b      	ldr	r3, [r3, #0]
 80034a2:	4a65      	ldr	r2, [pc, #404]	@ (8003638 <HAL_DMA_IRQHandler+0x1f4>)
 80034a4:	4293      	cmp	r3, r2
 80034a6:	d022      	beq.n	80034ee <HAL_DMA_IRQHandler+0xaa>
 80034a8:	687b      	ldr	r3, [r7, #4]
 80034aa:	681b      	ldr	r3, [r3, #0]
 80034ac:	4a63      	ldr	r2, [pc, #396]	@ (800363c <HAL_DMA_IRQHandler+0x1f8>)
 80034ae:	4293      	cmp	r3, r2
 80034b0:	d01a      	beq.n	80034e8 <HAL_DMA_IRQHandler+0xa4>
 80034b2:	687b      	ldr	r3, [r7, #4]
 80034b4:	681b      	ldr	r3, [r3, #0]
 80034b6:	4a62      	ldr	r2, [pc, #392]	@ (8003640 <HAL_DMA_IRQHandler+0x1fc>)
 80034b8:	4293      	cmp	r3, r2
 80034ba:	d012      	beq.n	80034e2 <HAL_DMA_IRQHandler+0x9e>
 80034bc:	687b      	ldr	r3, [r7, #4]
 80034be:	681b      	ldr	r3, [r3, #0]
 80034c0:	4a60      	ldr	r2, [pc, #384]	@ (8003644 <HAL_DMA_IRQHandler+0x200>)
 80034c2:	4293      	cmp	r3, r2
 80034c4:	d00a      	beq.n	80034dc <HAL_DMA_IRQHandler+0x98>
 80034c6:	687b      	ldr	r3, [r7, #4]
 80034c8:	681b      	ldr	r3, [r3, #0]
 80034ca:	4a5f      	ldr	r2, [pc, #380]	@ (8003648 <HAL_DMA_IRQHandler+0x204>)
 80034cc:	4293      	cmp	r3, r2
 80034ce:	d102      	bne.n	80034d6 <HAL_DMA_IRQHandler+0x92>
 80034d0:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 80034d4:	e00e      	b.n	80034f4 <HAL_DMA_IRQHandler+0xb0>
 80034d6:	f04f 6380 	mov.w	r3, #67108864	@ 0x4000000
 80034da:	e00b      	b.n	80034f4 <HAL_DMA_IRQHandler+0xb0>
 80034dc:	f44f 2380 	mov.w	r3, #262144	@ 0x40000
 80034e0:	e008      	b.n	80034f4 <HAL_DMA_IRQHandler+0xb0>
 80034e2:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
 80034e6:	e005      	b.n	80034f4 <HAL_DMA_IRQHandler+0xb0>
 80034e8:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80034ec:	e002      	b.n	80034f4 <HAL_DMA_IRQHandler+0xb0>
 80034ee:	2340      	movs	r3, #64	@ 0x40
 80034f0:	e000      	b.n	80034f4 <HAL_DMA_IRQHandler+0xb0>
 80034f2:	2304      	movs	r3, #4
 80034f4:	4a55      	ldr	r2, [pc, #340]	@ (800364c <HAL_DMA_IRQHandler+0x208>)
 80034f6:	6053      	str	r3, [r2, #4]
 80034f8:	687b      	ldr	r3, [r7, #4]
 80034fa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80034fc:	2b00      	cmp	r3, #0
 80034fe:	f000 8094 	beq.w	800362a <HAL_DMA_IRQHandler+0x1e6>
 8003502:	687b      	ldr	r3, [r7, #4]
 8003504:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003506:	6878      	ldr	r0, [r7, #4]
 8003508:	4798      	blx	r3
 800350a:	e08e      	b.n	800362a <HAL_DMA_IRQHandler+0x1e6>
 800350c:	687b      	ldr	r3, [r7, #4]
 800350e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003510:	2202      	movs	r2, #2
 8003512:	409a      	lsls	r2, r3
 8003514:	68fb      	ldr	r3, [r7, #12]
 8003516:	4013      	ands	r3, r2
 8003518:	2b00      	cmp	r3, #0
 800351a:	d056      	beq.n	80035ca <HAL_DMA_IRQHandler+0x186>
 800351c:	68bb      	ldr	r3, [r7, #8]
 800351e:	f003 0302 	and.w	r3, r3, #2
 8003522:	2b00      	cmp	r3, #0
 8003524:	d051      	beq.n	80035ca <HAL_DMA_IRQHandler+0x186>
 8003526:	687b      	ldr	r3, [r7, #4]
 8003528:	681b      	ldr	r3, [r3, #0]
 800352a:	681b      	ldr	r3, [r3, #0]
 800352c:	f003 0320 	and.w	r3, r3, #32
 8003530:	2b00      	cmp	r3, #0
 8003532:	d10b      	bne.n	800354c <HAL_DMA_IRQHandler+0x108>
 8003534:	687b      	ldr	r3, [r7, #4]
 8003536:	681b      	ldr	r3, [r3, #0]
 8003538:	681a      	ldr	r2, [r3, #0]
 800353a:	687b      	ldr	r3, [r7, #4]
 800353c:	681b      	ldr	r3, [r3, #0]
 800353e:	f022 020a 	bic.w	r2, r2, #10
 8003542:	601a      	str	r2, [r3, #0]
 8003544:	687b      	ldr	r3, [r7, #4]
 8003546:	2201      	movs	r2, #1
 8003548:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 800354c:	687b      	ldr	r3, [r7, #4]
 800354e:	681b      	ldr	r3, [r3, #0]
 8003550:	4a38      	ldr	r2, [pc, #224]	@ (8003634 <HAL_DMA_IRQHandler+0x1f0>)
 8003552:	4293      	cmp	r3, r2
 8003554:	d029      	beq.n	80035aa <HAL_DMA_IRQHandler+0x166>
 8003556:	687b      	ldr	r3, [r7, #4]
 8003558:	681b      	ldr	r3, [r3, #0]
 800355a:	4a37      	ldr	r2, [pc, #220]	@ (8003638 <HAL_DMA_IRQHandler+0x1f4>)
 800355c:	4293      	cmp	r3, r2
 800355e:	d022      	beq.n	80035a6 <HAL_DMA_IRQHandler+0x162>
 8003560:	687b      	ldr	r3, [r7, #4]
 8003562:	681b      	ldr	r3, [r3, #0]
 8003564:	4a35      	ldr	r2, [pc, #212]	@ (800363c <HAL_DMA_IRQHandler+0x1f8>)
 8003566:	4293      	cmp	r3, r2
 8003568:	d01a      	beq.n	80035a0 <HAL_DMA_IRQHandler+0x15c>
 800356a:	687b      	ldr	r3, [r7, #4]
 800356c:	681b      	ldr	r3, [r3, #0]
 800356e:	4a34      	ldr	r2, [pc, #208]	@ (8003640 <HAL_DMA_IRQHandler+0x1fc>)
 8003570:	4293      	cmp	r3, r2
 8003572:	d012      	beq.n	800359a <HAL_DMA_IRQHandler+0x156>
 8003574:	687b      	ldr	r3, [r7, #4]
 8003576:	681b      	ldr	r3, [r3, #0]
 8003578:	4a32      	ldr	r2, [pc, #200]	@ (8003644 <HAL_DMA_IRQHandler+0x200>)
 800357a:	4293      	cmp	r3, r2
 800357c:	d00a      	beq.n	8003594 <HAL_DMA_IRQHandler+0x150>
 800357e:	687b      	ldr	r3, [r7, #4]
 8003580:	681b      	ldr	r3, [r3, #0]
 8003582:	4a31      	ldr	r2, [pc, #196]	@ (8003648 <HAL_DMA_IRQHandler+0x204>)
 8003584:	4293      	cmp	r3, r2
 8003586:	d102      	bne.n	800358e <HAL_DMA_IRQHandler+0x14a>
 8003588:	f44f 1300 	mov.w	r3, #2097152	@ 0x200000
 800358c:	e00e      	b.n	80035ac <HAL_DMA_IRQHandler+0x168>
 800358e:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8003592:	e00b      	b.n	80035ac <HAL_DMA_IRQHandler+0x168>
 8003594:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8003598:	e008      	b.n	80035ac <HAL_DMA_IRQHandler+0x168>
 800359a:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 800359e:	e005      	b.n	80035ac <HAL_DMA_IRQHandler+0x168>
 80035a0:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80035a4:	e002      	b.n	80035ac <HAL_DMA_IRQHandler+0x168>
 80035a6:	2320      	movs	r3, #32
 80035a8:	e000      	b.n	80035ac <HAL_DMA_IRQHandler+0x168>
 80035aa:	2302      	movs	r3, #2
 80035ac:	4a27      	ldr	r2, [pc, #156]	@ (800364c <HAL_DMA_IRQHandler+0x208>)
 80035ae:	6053      	str	r3, [r2, #4]
 80035b0:	687b      	ldr	r3, [r7, #4]
 80035b2:	2200      	movs	r2, #0
 80035b4:	f883 2020 	strb.w	r2, [r3, #32]
 80035b8:	687b      	ldr	r3, [r7, #4]
 80035ba:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80035bc:	2b00      	cmp	r3, #0
 80035be:	d034      	beq.n	800362a <HAL_DMA_IRQHandler+0x1e6>
 80035c0:	687b      	ldr	r3, [r7, #4]
 80035c2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80035c4:	6878      	ldr	r0, [r7, #4]
 80035c6:	4798      	blx	r3
 80035c8:	e02f      	b.n	800362a <HAL_DMA_IRQHandler+0x1e6>
 80035ca:	687b      	ldr	r3, [r7, #4]
 80035cc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80035ce:	2208      	movs	r2, #8
 80035d0:	409a      	lsls	r2, r3
 80035d2:	68fb      	ldr	r3, [r7, #12]
 80035d4:	4013      	ands	r3, r2
 80035d6:	2b00      	cmp	r3, #0
 80035d8:	d028      	beq.n	800362c <HAL_DMA_IRQHandler+0x1e8>
 80035da:	68bb      	ldr	r3, [r7, #8]
 80035dc:	f003 0308 	and.w	r3, r3, #8
 80035e0:	2b00      	cmp	r3, #0
 80035e2:	d023      	beq.n	800362c <HAL_DMA_IRQHandler+0x1e8>
 80035e4:	687b      	ldr	r3, [r7, #4]
 80035e6:	681b      	ldr	r3, [r3, #0]
 80035e8:	681a      	ldr	r2, [r3, #0]
 80035ea:	687b      	ldr	r3, [r7, #4]
 80035ec:	681b      	ldr	r3, [r3, #0]
 80035ee:	f022 020e 	bic.w	r2, r2, #14
 80035f2:	601a      	str	r2, [r3, #0]
 80035f4:	687b      	ldr	r3, [r7, #4]
 80035f6:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80035f8:	687b      	ldr	r3, [r7, #4]
 80035fa:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80035fc:	2101      	movs	r1, #1
 80035fe:	fa01 f202 	lsl.w	r2, r1, r2
 8003602:	605a      	str	r2, [r3, #4]
 8003604:	687b      	ldr	r3, [r7, #4]
 8003606:	2201      	movs	r2, #1
 8003608:	639a      	str	r2, [r3, #56]	@ 0x38
 800360a:	687b      	ldr	r3, [r7, #4]
 800360c:	2201      	movs	r2, #1
 800360e:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 8003612:	687b      	ldr	r3, [r7, #4]
 8003614:	2200      	movs	r2, #0
 8003616:	f883 2020 	strb.w	r2, [r3, #32]
 800361a:	687b      	ldr	r3, [r7, #4]
 800361c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800361e:	2b00      	cmp	r3, #0
 8003620:	d004      	beq.n	800362c <HAL_DMA_IRQHandler+0x1e8>
 8003622:	687b      	ldr	r3, [r7, #4]
 8003624:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003626:	6878      	ldr	r0, [r7, #4]
 8003628:	4798      	blx	r3
 800362a:	bf00      	nop
 800362c:	bf00      	nop
 800362e:	3710      	adds	r7, #16
 8003630:	46bd      	mov	sp, r7
 8003632:	bd80      	pop	{r7, pc}
 8003634:	40020008 	.word	0x40020008
 8003638:	4002001c 	.word	0x4002001c
 800363c:	40020030 	.word	0x40020030
 8003640:	40020044 	.word	0x40020044
 8003644:	40020058 	.word	0x40020058
 8003648:	4002006c 	.word	0x4002006c
 800364c:	40020000 	.word	0x40020000

08003650 <HAL_GPIO_Init>:
 8003650:	b480      	push	{r7}
 8003652:	b08b      	sub	sp, #44	@ 0x2c
 8003654:	af00      	add	r7, sp, #0
 8003656:	6078      	str	r0, [r7, #4]
 8003658:	6039      	str	r1, [r7, #0]
 800365a:	2300      	movs	r3, #0
 800365c:	627b      	str	r3, [r7, #36]	@ 0x24
 800365e:	2300      	movs	r3, #0
 8003660:	623b      	str	r3, [r7, #32]
 8003662:	e169      	b.n	8003938 <HAL_GPIO_Init+0x2e8>
 8003664:	2201      	movs	r2, #1
 8003666:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003668:	fa02 f303 	lsl.w	r3, r2, r3
 800366c:	61fb      	str	r3, [r7, #28]
 800366e:	683b      	ldr	r3, [r7, #0]
 8003670:	681b      	ldr	r3, [r3, #0]
 8003672:	69fa      	ldr	r2, [r7, #28]
 8003674:	4013      	ands	r3, r2
 8003676:	61bb      	str	r3, [r7, #24]
 8003678:	69ba      	ldr	r2, [r7, #24]
 800367a:	69fb      	ldr	r3, [r7, #28]
 800367c:	429a      	cmp	r2, r3
 800367e:	f040 8158 	bne.w	8003932 <HAL_GPIO_Init+0x2e2>
 8003682:	683b      	ldr	r3, [r7, #0]
 8003684:	685b      	ldr	r3, [r3, #4]
 8003686:	4a9a      	ldr	r2, [pc, #616]	@ (80038f0 <HAL_GPIO_Init+0x2a0>)
 8003688:	4293      	cmp	r3, r2
 800368a:	d05e      	beq.n	800374a <HAL_GPIO_Init+0xfa>
 800368c:	4a98      	ldr	r2, [pc, #608]	@ (80038f0 <HAL_GPIO_Init+0x2a0>)
 800368e:	4293      	cmp	r3, r2
 8003690:	d875      	bhi.n	800377e <HAL_GPIO_Init+0x12e>
 8003692:	4a98      	ldr	r2, [pc, #608]	@ (80038f4 <HAL_GPIO_Init+0x2a4>)
 8003694:	4293      	cmp	r3, r2
 8003696:	d058      	beq.n	800374a <HAL_GPIO_Init+0xfa>
 8003698:	4a96      	ldr	r2, [pc, #600]	@ (80038f4 <HAL_GPIO_Init+0x2a4>)
 800369a:	4293      	cmp	r3, r2
 800369c:	d86f      	bhi.n	800377e <HAL_GPIO_Init+0x12e>
 800369e:	4a96      	ldr	r2, [pc, #600]	@ (80038f8 <HAL_GPIO_Init+0x2a8>)
 80036a0:	4293      	cmp	r3, r2
 80036a2:	d052      	beq.n	800374a <HAL_GPIO_Init+0xfa>
 80036a4:	4a94      	ldr	r2, [pc, #592]	@ (80038f8 <HAL_GPIO_Init+0x2a8>)
 80036a6:	4293      	cmp	r3, r2
 80036a8:	d869      	bhi.n	800377e <HAL_GPIO_Init+0x12e>
 80036aa:	4a94      	ldr	r2, [pc, #592]	@ (80038fc <HAL_GPIO_Init+0x2ac>)
 80036ac:	4293      	cmp	r3, r2
 80036ae:	d04c      	beq.n	800374a <HAL_GPIO_Init+0xfa>
 80036b0:	4a92      	ldr	r2, [pc, #584]	@ (80038fc <HAL_GPIO_Init+0x2ac>)
 80036b2:	4293      	cmp	r3, r2
 80036b4:	d863      	bhi.n	800377e <HAL_GPIO_Init+0x12e>
 80036b6:	4a92      	ldr	r2, [pc, #584]	@ (8003900 <HAL_GPIO_Init+0x2b0>)
 80036b8:	4293      	cmp	r3, r2
 80036ba:	d046      	beq.n	800374a <HAL_GPIO_Init+0xfa>
 80036bc:	4a90      	ldr	r2, [pc, #576]	@ (8003900 <HAL_GPIO_Init+0x2b0>)
 80036be:	4293      	cmp	r3, r2
 80036c0:	d85d      	bhi.n	800377e <HAL_GPIO_Init+0x12e>
 80036c2:	2b12      	cmp	r3, #18
 80036c4:	d82a      	bhi.n	800371c <HAL_GPIO_Init+0xcc>
 80036c6:	2b12      	cmp	r3, #18
 80036c8:	d859      	bhi.n	800377e <HAL_GPIO_Init+0x12e>
 80036ca:	a201      	add	r2, pc, #4	@ (adr r2, 80036d0 <HAL_GPIO_Init+0x80>)
 80036cc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80036d0:	0800374b 	.word	0x0800374b
 80036d4:	08003725 	.word	0x08003725
 80036d8:	08003737 	.word	0x08003737
 80036dc:	08003779 	.word	0x08003779
 80036e0:	0800377f 	.word	0x0800377f
 80036e4:	0800377f 	.word	0x0800377f
 80036e8:	0800377f 	.word	0x0800377f
 80036ec:	0800377f 	.word	0x0800377f
 80036f0:	0800377f 	.word	0x0800377f
 80036f4:	0800377f 	.word	0x0800377f
 80036f8:	0800377f 	.word	0x0800377f
 80036fc:	0800377f 	.word	0x0800377f
 8003700:	0800377f 	.word	0x0800377f
 8003704:	0800377f 	.word	0x0800377f
 8003708:	0800377f 	.word	0x0800377f
 800370c:	0800377f 	.word	0x0800377f
 8003710:	0800377f 	.word	0x0800377f
 8003714:	0800372d 	.word	0x0800372d
 8003718:	08003741 	.word	0x08003741
 800371c:	4a79      	ldr	r2, [pc, #484]	@ (8003904 <HAL_GPIO_Init+0x2b4>)
 800371e:	4293      	cmp	r3, r2
 8003720:	d013      	beq.n	800374a <HAL_GPIO_Init+0xfa>
 8003722:	e02c      	b.n	800377e <HAL_GPIO_Init+0x12e>
 8003724:	683b      	ldr	r3, [r7, #0]
 8003726:	68db      	ldr	r3, [r3, #12]
 8003728:	623b      	str	r3, [r7, #32]
 800372a:	e029      	b.n	8003780 <HAL_GPIO_Init+0x130>
 800372c:	683b      	ldr	r3, [r7, #0]
 800372e:	68db      	ldr	r3, [r3, #12]
 8003730:	3304      	adds	r3, #4
 8003732:	623b      	str	r3, [r7, #32]
 8003734:	e024      	b.n	8003780 <HAL_GPIO_Init+0x130>
 8003736:	683b      	ldr	r3, [r7, #0]
 8003738:	68db      	ldr	r3, [r3, #12]
 800373a:	3308      	adds	r3, #8
 800373c:	623b      	str	r3, [r7, #32]
 800373e:	e01f      	b.n	8003780 <HAL_GPIO_Init+0x130>
 8003740:	683b      	ldr	r3, [r7, #0]
 8003742:	68db      	ldr	r3, [r3, #12]
 8003744:	330c      	adds	r3, #12
 8003746:	623b      	str	r3, [r7, #32]
 8003748:	e01a      	b.n	8003780 <HAL_GPIO_Init+0x130>
 800374a:	683b      	ldr	r3, [r7, #0]
 800374c:	689b      	ldr	r3, [r3, #8]
 800374e:	2b00      	cmp	r3, #0
 8003750:	d102      	bne.n	8003758 <HAL_GPIO_Init+0x108>
 8003752:	2304      	movs	r3, #4
 8003754:	623b      	str	r3, [r7, #32]
 8003756:	e013      	b.n	8003780 <HAL_GPIO_Init+0x130>
 8003758:	683b      	ldr	r3, [r7, #0]
 800375a:	689b      	ldr	r3, [r3, #8]
 800375c:	2b01      	cmp	r3, #1
 800375e:	d105      	bne.n	800376c <HAL_GPIO_Init+0x11c>
 8003760:	2308      	movs	r3, #8
 8003762:	623b      	str	r3, [r7, #32]
 8003764:	687b      	ldr	r3, [r7, #4]
 8003766:	69fa      	ldr	r2, [r7, #28]
 8003768:	611a      	str	r2, [r3, #16]
 800376a:	e009      	b.n	8003780 <HAL_GPIO_Init+0x130>
 800376c:	2308      	movs	r3, #8
 800376e:	623b      	str	r3, [r7, #32]
 8003770:	687b      	ldr	r3, [r7, #4]
 8003772:	69fa      	ldr	r2, [r7, #28]
 8003774:	615a      	str	r2, [r3, #20]
 8003776:	e003      	b.n	8003780 <HAL_GPIO_Init+0x130>
 8003778:	2300      	movs	r3, #0
 800377a:	623b      	str	r3, [r7, #32]
 800377c:	e000      	b.n	8003780 <HAL_GPIO_Init+0x130>
 800377e:	bf00      	nop
 8003780:	69bb      	ldr	r3, [r7, #24]
 8003782:	2bff      	cmp	r3, #255	@ 0xff
 8003784:	d801      	bhi.n	800378a <HAL_GPIO_Init+0x13a>
 8003786:	687b      	ldr	r3, [r7, #4]
 8003788:	e001      	b.n	800378e <HAL_GPIO_Init+0x13e>
 800378a:	687b      	ldr	r3, [r7, #4]
 800378c:	3304      	adds	r3, #4
 800378e:	617b      	str	r3, [r7, #20]
 8003790:	69bb      	ldr	r3, [r7, #24]
 8003792:	2bff      	cmp	r3, #255	@ 0xff
 8003794:	d802      	bhi.n	800379c <HAL_GPIO_Init+0x14c>
 8003796:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003798:	009b      	lsls	r3, r3, #2
 800379a:	e002      	b.n	80037a2 <HAL_GPIO_Init+0x152>
 800379c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800379e:	3b08      	subs	r3, #8
 80037a0:	009b      	lsls	r3, r3, #2
 80037a2:	613b      	str	r3, [r7, #16]
 80037a4:	697b      	ldr	r3, [r7, #20]
 80037a6:	681a      	ldr	r2, [r3, #0]
 80037a8:	210f      	movs	r1, #15
 80037aa:	693b      	ldr	r3, [r7, #16]
 80037ac:	fa01 f303 	lsl.w	r3, r1, r3
 80037b0:	43db      	mvns	r3, r3
 80037b2:	401a      	ands	r2, r3
 80037b4:	6a39      	ldr	r1, [r7, #32]
 80037b6:	693b      	ldr	r3, [r7, #16]
 80037b8:	fa01 f303 	lsl.w	r3, r1, r3
 80037bc:	431a      	orrs	r2, r3
 80037be:	697b      	ldr	r3, [r7, #20]
 80037c0:	601a      	str	r2, [r3, #0]
 80037c2:	683b      	ldr	r3, [r7, #0]
 80037c4:	685b      	ldr	r3, [r3, #4]
 80037c6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80037ca:	2b00      	cmp	r3, #0
 80037cc:	f000 80b1 	beq.w	8003932 <HAL_GPIO_Init+0x2e2>
 80037d0:	4b4d      	ldr	r3, [pc, #308]	@ (8003908 <HAL_GPIO_Init+0x2b8>)
 80037d2:	699b      	ldr	r3, [r3, #24]
 80037d4:	4a4c      	ldr	r2, [pc, #304]	@ (8003908 <HAL_GPIO_Init+0x2b8>)
 80037d6:	f043 0301 	orr.w	r3, r3, #1
 80037da:	6193      	str	r3, [r2, #24]
 80037dc:	4b4a      	ldr	r3, [pc, #296]	@ (8003908 <HAL_GPIO_Init+0x2b8>)
 80037de:	699b      	ldr	r3, [r3, #24]
 80037e0:	f003 0301 	and.w	r3, r3, #1
 80037e4:	60bb      	str	r3, [r7, #8]
 80037e6:	68bb      	ldr	r3, [r7, #8]
 80037e8:	4a48      	ldr	r2, [pc, #288]	@ (800390c <HAL_GPIO_Init+0x2bc>)
 80037ea:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80037ec:	089b      	lsrs	r3, r3, #2
 80037ee:	3302      	adds	r3, #2
 80037f0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80037f4:	60fb      	str	r3, [r7, #12]
 80037f6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80037f8:	f003 0303 	and.w	r3, r3, #3
 80037fc:	009b      	lsls	r3, r3, #2
 80037fe:	220f      	movs	r2, #15
 8003800:	fa02 f303 	lsl.w	r3, r2, r3
 8003804:	43db      	mvns	r3, r3
 8003806:	68fa      	ldr	r2, [r7, #12]
 8003808:	4013      	ands	r3, r2
 800380a:	60fb      	str	r3, [r7, #12]
 800380c:	687b      	ldr	r3, [r7, #4]
 800380e:	4a40      	ldr	r2, [pc, #256]	@ (8003910 <HAL_GPIO_Init+0x2c0>)
 8003810:	4293      	cmp	r3, r2
 8003812:	d013      	beq.n	800383c <HAL_GPIO_Init+0x1ec>
 8003814:	687b      	ldr	r3, [r7, #4]
 8003816:	4a3f      	ldr	r2, [pc, #252]	@ (8003914 <HAL_GPIO_Init+0x2c4>)
 8003818:	4293      	cmp	r3, r2
 800381a:	d00d      	beq.n	8003838 <HAL_GPIO_Init+0x1e8>
 800381c:	687b      	ldr	r3, [r7, #4]
 800381e:	4a3e      	ldr	r2, [pc, #248]	@ (8003918 <HAL_GPIO_Init+0x2c8>)
 8003820:	4293      	cmp	r3, r2
 8003822:	d007      	beq.n	8003834 <HAL_GPIO_Init+0x1e4>
 8003824:	687b      	ldr	r3, [r7, #4]
 8003826:	4a3d      	ldr	r2, [pc, #244]	@ (800391c <HAL_GPIO_Init+0x2cc>)
 8003828:	4293      	cmp	r3, r2
 800382a:	d101      	bne.n	8003830 <HAL_GPIO_Init+0x1e0>
 800382c:	2303      	movs	r3, #3
 800382e:	e006      	b.n	800383e <HAL_GPIO_Init+0x1ee>
 8003830:	2304      	movs	r3, #4
 8003832:	e004      	b.n	800383e <HAL_GPIO_Init+0x1ee>
 8003834:	2302      	movs	r3, #2
 8003836:	e002      	b.n	800383e <HAL_GPIO_Init+0x1ee>
 8003838:	2301      	movs	r3, #1
 800383a:	e000      	b.n	800383e <HAL_GPIO_Init+0x1ee>
 800383c:	2300      	movs	r3, #0
 800383e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003840:	f002 0203 	and.w	r2, r2, #3
 8003844:	0092      	lsls	r2, r2, #2
 8003846:	4093      	lsls	r3, r2
 8003848:	68fa      	ldr	r2, [r7, #12]
 800384a:	4313      	orrs	r3, r2
 800384c:	60fb      	str	r3, [r7, #12]
 800384e:	492f      	ldr	r1, [pc, #188]	@ (800390c <HAL_GPIO_Init+0x2bc>)
 8003850:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003852:	089b      	lsrs	r3, r3, #2
 8003854:	3302      	adds	r3, #2
 8003856:	68fa      	ldr	r2, [r7, #12]
 8003858:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800385c:	683b      	ldr	r3, [r7, #0]
 800385e:	685b      	ldr	r3, [r3, #4]
 8003860:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8003864:	2b00      	cmp	r3, #0
 8003866:	d006      	beq.n	8003876 <HAL_GPIO_Init+0x226>
 8003868:	4b2d      	ldr	r3, [pc, #180]	@ (8003920 <HAL_GPIO_Init+0x2d0>)
 800386a:	689a      	ldr	r2, [r3, #8]
 800386c:	492c      	ldr	r1, [pc, #176]	@ (8003920 <HAL_GPIO_Init+0x2d0>)
 800386e:	69bb      	ldr	r3, [r7, #24]
 8003870:	4313      	orrs	r3, r2
 8003872:	608b      	str	r3, [r1, #8]
 8003874:	e006      	b.n	8003884 <HAL_GPIO_Init+0x234>
 8003876:	4b2a      	ldr	r3, [pc, #168]	@ (8003920 <HAL_GPIO_Init+0x2d0>)
 8003878:	689a      	ldr	r2, [r3, #8]
 800387a:	69bb      	ldr	r3, [r7, #24]
 800387c:	43db      	mvns	r3, r3
 800387e:	4928      	ldr	r1, [pc, #160]	@ (8003920 <HAL_GPIO_Init+0x2d0>)
 8003880:	4013      	ands	r3, r2
 8003882:	608b      	str	r3, [r1, #8]
 8003884:	683b      	ldr	r3, [r7, #0]
 8003886:	685b      	ldr	r3, [r3, #4]
 8003888:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800388c:	2b00      	cmp	r3, #0
 800388e:	d006      	beq.n	800389e <HAL_GPIO_Init+0x24e>
 8003890:	4b23      	ldr	r3, [pc, #140]	@ (8003920 <HAL_GPIO_Init+0x2d0>)
 8003892:	68da      	ldr	r2, [r3, #12]
 8003894:	4922      	ldr	r1, [pc, #136]	@ (8003920 <HAL_GPIO_Init+0x2d0>)
 8003896:	69bb      	ldr	r3, [r7, #24]
 8003898:	4313      	orrs	r3, r2
 800389a:	60cb      	str	r3, [r1, #12]
 800389c:	e006      	b.n	80038ac <HAL_GPIO_Init+0x25c>
 800389e:	4b20      	ldr	r3, [pc, #128]	@ (8003920 <HAL_GPIO_Init+0x2d0>)
 80038a0:	68da      	ldr	r2, [r3, #12]
 80038a2:	69bb      	ldr	r3, [r7, #24]
 80038a4:	43db      	mvns	r3, r3
 80038a6:	491e      	ldr	r1, [pc, #120]	@ (8003920 <HAL_GPIO_Init+0x2d0>)
 80038a8:	4013      	ands	r3, r2
 80038aa:	60cb      	str	r3, [r1, #12]
 80038ac:	683b      	ldr	r3, [r7, #0]
 80038ae:	685b      	ldr	r3, [r3, #4]
 80038b0:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80038b4:	2b00      	cmp	r3, #0
 80038b6:	d006      	beq.n	80038c6 <HAL_GPIO_Init+0x276>
 80038b8:	4b19      	ldr	r3, [pc, #100]	@ (8003920 <HAL_GPIO_Init+0x2d0>)
 80038ba:	685a      	ldr	r2, [r3, #4]
 80038bc:	4918      	ldr	r1, [pc, #96]	@ (8003920 <HAL_GPIO_Init+0x2d0>)
 80038be:	69bb      	ldr	r3, [r7, #24]
 80038c0:	4313      	orrs	r3, r2
 80038c2:	604b      	str	r3, [r1, #4]
 80038c4:	e006      	b.n	80038d4 <HAL_GPIO_Init+0x284>
 80038c6:	4b16      	ldr	r3, [pc, #88]	@ (8003920 <HAL_GPIO_Init+0x2d0>)
 80038c8:	685a      	ldr	r2, [r3, #4]
 80038ca:	69bb      	ldr	r3, [r7, #24]
 80038cc:	43db      	mvns	r3, r3
 80038ce:	4914      	ldr	r1, [pc, #80]	@ (8003920 <HAL_GPIO_Init+0x2d0>)
 80038d0:	4013      	ands	r3, r2
 80038d2:	604b      	str	r3, [r1, #4]
 80038d4:	683b      	ldr	r3, [r7, #0]
 80038d6:	685b      	ldr	r3, [r3, #4]
 80038d8:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80038dc:	2b00      	cmp	r3, #0
 80038de:	d021      	beq.n	8003924 <HAL_GPIO_Init+0x2d4>
 80038e0:	4b0f      	ldr	r3, [pc, #60]	@ (8003920 <HAL_GPIO_Init+0x2d0>)
 80038e2:	681a      	ldr	r2, [r3, #0]
 80038e4:	490e      	ldr	r1, [pc, #56]	@ (8003920 <HAL_GPIO_Init+0x2d0>)
 80038e6:	69bb      	ldr	r3, [r7, #24]
 80038e8:	4313      	orrs	r3, r2
 80038ea:	600b      	str	r3, [r1, #0]
 80038ec:	e021      	b.n	8003932 <HAL_GPIO_Init+0x2e2>
 80038ee:	bf00      	nop
 80038f0:	10320000 	.word	0x10320000
 80038f4:	10310000 	.word	0x10310000
 80038f8:	10220000 	.word	0x10220000
 80038fc:	10210000 	.word	0x10210000
 8003900:	10120000 	.word	0x10120000
 8003904:	10110000 	.word	0x10110000
 8003908:	40021000 	.word	0x40021000
 800390c:	40010000 	.word	0x40010000
 8003910:	40010800 	.word	0x40010800
 8003914:	40010c00 	.word	0x40010c00
 8003918:	40011000 	.word	0x40011000
 800391c:	40011400 	.word	0x40011400
 8003920:	40010400 	.word	0x40010400
 8003924:	4b0b      	ldr	r3, [pc, #44]	@ (8003954 <HAL_GPIO_Init+0x304>)
 8003926:	681a      	ldr	r2, [r3, #0]
 8003928:	69bb      	ldr	r3, [r7, #24]
 800392a:	43db      	mvns	r3, r3
 800392c:	4909      	ldr	r1, [pc, #36]	@ (8003954 <HAL_GPIO_Init+0x304>)
 800392e:	4013      	ands	r3, r2
 8003930:	600b      	str	r3, [r1, #0]
 8003932:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003934:	3301      	adds	r3, #1
 8003936:	627b      	str	r3, [r7, #36]	@ 0x24
 8003938:	683b      	ldr	r3, [r7, #0]
 800393a:	681a      	ldr	r2, [r3, #0]
 800393c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800393e:	fa22 f303 	lsr.w	r3, r2, r3
 8003942:	2b00      	cmp	r3, #0
 8003944:	f47f ae8e 	bne.w	8003664 <HAL_GPIO_Init+0x14>
 8003948:	bf00      	nop
 800394a:	bf00      	nop
 800394c:	372c      	adds	r7, #44	@ 0x2c
 800394e:	46bd      	mov	sp, r7
 8003950:	bc80      	pop	{r7}
 8003952:	4770      	bx	lr
 8003954:	40010400 	.word	0x40010400

08003958 <HAL_GPIO_WritePin>:
 8003958:	b480      	push	{r7}
 800395a:	b083      	sub	sp, #12
 800395c:	af00      	add	r7, sp, #0
 800395e:	6078      	str	r0, [r7, #4]
 8003960:	460b      	mov	r3, r1
 8003962:	807b      	strh	r3, [r7, #2]
 8003964:	4613      	mov	r3, r2
 8003966:	707b      	strb	r3, [r7, #1]
 8003968:	787b      	ldrb	r3, [r7, #1]
 800396a:	2b00      	cmp	r3, #0
 800396c:	d003      	beq.n	8003976 <HAL_GPIO_WritePin+0x1e>
 800396e:	887a      	ldrh	r2, [r7, #2]
 8003970:	687b      	ldr	r3, [r7, #4]
 8003972:	611a      	str	r2, [r3, #16]
 8003974:	e003      	b.n	800397e <HAL_GPIO_WritePin+0x26>
 8003976:	887b      	ldrh	r3, [r7, #2]
 8003978:	041a      	lsls	r2, r3, #16
 800397a:	687b      	ldr	r3, [r7, #4]
 800397c:	611a      	str	r2, [r3, #16]
 800397e:	bf00      	nop
 8003980:	370c      	adds	r7, #12
 8003982:	46bd      	mov	sp, r7
 8003984:	bc80      	pop	{r7}
 8003986:	4770      	bx	lr

08003988 <HAL_GPIO_EXTI_IRQHandler>:
 8003988:	b580      	push	{r7, lr}
 800398a:	b082      	sub	sp, #8
 800398c:	af00      	add	r7, sp, #0
 800398e:	4603      	mov	r3, r0
 8003990:	80fb      	strh	r3, [r7, #6]
 8003992:	4b08      	ldr	r3, [pc, #32]	@ (80039b4 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8003994:	695a      	ldr	r2, [r3, #20]
 8003996:	88fb      	ldrh	r3, [r7, #6]
 8003998:	4013      	ands	r3, r2
 800399a:	2b00      	cmp	r3, #0
 800399c:	d006      	beq.n	80039ac <HAL_GPIO_EXTI_IRQHandler+0x24>
 800399e:	4a05      	ldr	r2, [pc, #20]	@ (80039b4 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80039a0:	88fb      	ldrh	r3, [r7, #6]
 80039a2:	6153      	str	r3, [r2, #20]
 80039a4:	88fb      	ldrh	r3, [r7, #6]
 80039a6:	4618      	mov	r0, r3
 80039a8:	f000 f806 	bl	80039b8 <HAL_GPIO_EXTI_Callback>
 80039ac:	bf00      	nop
 80039ae:	3708      	adds	r7, #8
 80039b0:	46bd      	mov	sp, r7
 80039b2:	bd80      	pop	{r7, pc}
 80039b4:	40010400 	.word	0x40010400

080039b8 <HAL_GPIO_EXTI_Callback>:
 80039b8:	b480      	push	{r7}
 80039ba:	b083      	sub	sp, #12
 80039bc:	af00      	add	r7, sp, #0
 80039be:	4603      	mov	r3, r0
 80039c0:	80fb      	strh	r3, [r7, #6]
 80039c2:	bf00      	nop
 80039c4:	370c      	adds	r7, #12
 80039c6:	46bd      	mov	sp, r7
 80039c8:	bc80      	pop	{r7}
 80039ca:	4770      	bx	lr

080039cc <HAL_RCC_OscConfig>:
 80039cc:	b580      	push	{r7, lr}
 80039ce:	b086      	sub	sp, #24
 80039d0:	af00      	add	r7, sp, #0
 80039d2:	6078      	str	r0, [r7, #4]
 80039d4:	687b      	ldr	r3, [r7, #4]
 80039d6:	2b00      	cmp	r3, #0
 80039d8:	d101      	bne.n	80039de <HAL_RCC_OscConfig+0x12>
 80039da:	2301      	movs	r3, #1
 80039dc:	e272      	b.n	8003ec4 <HAL_RCC_OscConfig+0x4f8>
 80039de:	687b      	ldr	r3, [r7, #4]
 80039e0:	681b      	ldr	r3, [r3, #0]
 80039e2:	f003 0301 	and.w	r3, r3, #1
 80039e6:	2b00      	cmp	r3, #0
 80039e8:	f000 8087 	beq.w	8003afa <HAL_RCC_OscConfig+0x12e>
 80039ec:	4b92      	ldr	r3, [pc, #584]	@ (8003c38 <HAL_RCC_OscConfig+0x26c>)
 80039ee:	685b      	ldr	r3, [r3, #4]
 80039f0:	f003 030c 	and.w	r3, r3, #12
 80039f4:	2b04      	cmp	r3, #4
 80039f6:	d00c      	beq.n	8003a12 <HAL_RCC_OscConfig+0x46>
 80039f8:	4b8f      	ldr	r3, [pc, #572]	@ (8003c38 <HAL_RCC_OscConfig+0x26c>)
 80039fa:	685b      	ldr	r3, [r3, #4]
 80039fc:	f003 030c 	and.w	r3, r3, #12
 8003a00:	2b08      	cmp	r3, #8
 8003a02:	d112      	bne.n	8003a2a <HAL_RCC_OscConfig+0x5e>
 8003a04:	4b8c      	ldr	r3, [pc, #560]	@ (8003c38 <HAL_RCC_OscConfig+0x26c>)
 8003a06:	685b      	ldr	r3, [r3, #4]
 8003a08:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003a0c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8003a10:	d10b      	bne.n	8003a2a <HAL_RCC_OscConfig+0x5e>
 8003a12:	4b89      	ldr	r3, [pc, #548]	@ (8003c38 <HAL_RCC_OscConfig+0x26c>)
 8003a14:	681b      	ldr	r3, [r3, #0]
 8003a16:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003a1a:	2b00      	cmp	r3, #0
 8003a1c:	d06c      	beq.n	8003af8 <HAL_RCC_OscConfig+0x12c>
 8003a1e:	687b      	ldr	r3, [r7, #4]
 8003a20:	685b      	ldr	r3, [r3, #4]
 8003a22:	2b00      	cmp	r3, #0
 8003a24:	d168      	bne.n	8003af8 <HAL_RCC_OscConfig+0x12c>
 8003a26:	2301      	movs	r3, #1
 8003a28:	e24c      	b.n	8003ec4 <HAL_RCC_OscConfig+0x4f8>
 8003a2a:	687b      	ldr	r3, [r7, #4]
 8003a2c:	685b      	ldr	r3, [r3, #4]
 8003a2e:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8003a32:	d106      	bne.n	8003a42 <HAL_RCC_OscConfig+0x76>
 8003a34:	4b80      	ldr	r3, [pc, #512]	@ (8003c38 <HAL_RCC_OscConfig+0x26c>)
 8003a36:	681b      	ldr	r3, [r3, #0]
 8003a38:	4a7f      	ldr	r2, [pc, #508]	@ (8003c38 <HAL_RCC_OscConfig+0x26c>)
 8003a3a:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8003a3e:	6013      	str	r3, [r2, #0]
 8003a40:	e02e      	b.n	8003aa0 <HAL_RCC_OscConfig+0xd4>
 8003a42:	687b      	ldr	r3, [r7, #4]
 8003a44:	685b      	ldr	r3, [r3, #4]
 8003a46:	2b00      	cmp	r3, #0
 8003a48:	d10c      	bne.n	8003a64 <HAL_RCC_OscConfig+0x98>
 8003a4a:	4b7b      	ldr	r3, [pc, #492]	@ (8003c38 <HAL_RCC_OscConfig+0x26c>)
 8003a4c:	681b      	ldr	r3, [r3, #0]
 8003a4e:	4a7a      	ldr	r2, [pc, #488]	@ (8003c38 <HAL_RCC_OscConfig+0x26c>)
 8003a50:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8003a54:	6013      	str	r3, [r2, #0]
 8003a56:	4b78      	ldr	r3, [pc, #480]	@ (8003c38 <HAL_RCC_OscConfig+0x26c>)
 8003a58:	681b      	ldr	r3, [r3, #0]
 8003a5a:	4a77      	ldr	r2, [pc, #476]	@ (8003c38 <HAL_RCC_OscConfig+0x26c>)
 8003a5c:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8003a60:	6013      	str	r3, [r2, #0]
 8003a62:	e01d      	b.n	8003aa0 <HAL_RCC_OscConfig+0xd4>
 8003a64:	687b      	ldr	r3, [r7, #4]
 8003a66:	685b      	ldr	r3, [r3, #4]
 8003a68:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8003a6c:	d10c      	bne.n	8003a88 <HAL_RCC_OscConfig+0xbc>
 8003a6e:	4b72      	ldr	r3, [pc, #456]	@ (8003c38 <HAL_RCC_OscConfig+0x26c>)
 8003a70:	681b      	ldr	r3, [r3, #0]
 8003a72:	4a71      	ldr	r2, [pc, #452]	@ (8003c38 <HAL_RCC_OscConfig+0x26c>)
 8003a74:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8003a78:	6013      	str	r3, [r2, #0]
 8003a7a:	4b6f      	ldr	r3, [pc, #444]	@ (8003c38 <HAL_RCC_OscConfig+0x26c>)
 8003a7c:	681b      	ldr	r3, [r3, #0]
 8003a7e:	4a6e      	ldr	r2, [pc, #440]	@ (8003c38 <HAL_RCC_OscConfig+0x26c>)
 8003a80:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8003a84:	6013      	str	r3, [r2, #0]
 8003a86:	e00b      	b.n	8003aa0 <HAL_RCC_OscConfig+0xd4>
 8003a88:	4b6b      	ldr	r3, [pc, #428]	@ (8003c38 <HAL_RCC_OscConfig+0x26c>)
 8003a8a:	681b      	ldr	r3, [r3, #0]
 8003a8c:	4a6a      	ldr	r2, [pc, #424]	@ (8003c38 <HAL_RCC_OscConfig+0x26c>)
 8003a8e:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8003a92:	6013      	str	r3, [r2, #0]
 8003a94:	4b68      	ldr	r3, [pc, #416]	@ (8003c38 <HAL_RCC_OscConfig+0x26c>)
 8003a96:	681b      	ldr	r3, [r3, #0]
 8003a98:	4a67      	ldr	r2, [pc, #412]	@ (8003c38 <HAL_RCC_OscConfig+0x26c>)
 8003a9a:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8003a9e:	6013      	str	r3, [r2, #0]
 8003aa0:	687b      	ldr	r3, [r7, #4]
 8003aa2:	685b      	ldr	r3, [r3, #4]
 8003aa4:	2b00      	cmp	r3, #0
 8003aa6:	d013      	beq.n	8003ad0 <HAL_RCC_OscConfig+0x104>
 8003aa8:	f7ff fa82 	bl	8002fb0 <HAL_GetTick>
 8003aac:	6138      	str	r0, [r7, #16]
 8003aae:	e008      	b.n	8003ac2 <HAL_RCC_OscConfig+0xf6>
 8003ab0:	f7ff fa7e 	bl	8002fb0 <HAL_GetTick>
 8003ab4:	4602      	mov	r2, r0
 8003ab6:	693b      	ldr	r3, [r7, #16]
 8003ab8:	1ad3      	subs	r3, r2, r3
 8003aba:	2b64      	cmp	r3, #100	@ 0x64
 8003abc:	d901      	bls.n	8003ac2 <HAL_RCC_OscConfig+0xf6>
 8003abe:	2303      	movs	r3, #3
 8003ac0:	e200      	b.n	8003ec4 <HAL_RCC_OscConfig+0x4f8>
 8003ac2:	4b5d      	ldr	r3, [pc, #372]	@ (8003c38 <HAL_RCC_OscConfig+0x26c>)
 8003ac4:	681b      	ldr	r3, [r3, #0]
 8003ac6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003aca:	2b00      	cmp	r3, #0
 8003acc:	d0f0      	beq.n	8003ab0 <HAL_RCC_OscConfig+0xe4>
 8003ace:	e014      	b.n	8003afa <HAL_RCC_OscConfig+0x12e>
 8003ad0:	f7ff fa6e 	bl	8002fb0 <HAL_GetTick>
 8003ad4:	6138      	str	r0, [r7, #16]
 8003ad6:	e008      	b.n	8003aea <HAL_RCC_OscConfig+0x11e>
 8003ad8:	f7ff fa6a 	bl	8002fb0 <HAL_GetTick>
 8003adc:	4602      	mov	r2, r0
 8003ade:	693b      	ldr	r3, [r7, #16]
 8003ae0:	1ad3      	subs	r3, r2, r3
 8003ae2:	2b64      	cmp	r3, #100	@ 0x64
 8003ae4:	d901      	bls.n	8003aea <HAL_RCC_OscConfig+0x11e>
 8003ae6:	2303      	movs	r3, #3
 8003ae8:	e1ec      	b.n	8003ec4 <HAL_RCC_OscConfig+0x4f8>
 8003aea:	4b53      	ldr	r3, [pc, #332]	@ (8003c38 <HAL_RCC_OscConfig+0x26c>)
 8003aec:	681b      	ldr	r3, [r3, #0]
 8003aee:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003af2:	2b00      	cmp	r3, #0
 8003af4:	d1f0      	bne.n	8003ad8 <HAL_RCC_OscConfig+0x10c>
 8003af6:	e000      	b.n	8003afa <HAL_RCC_OscConfig+0x12e>
 8003af8:	bf00      	nop
 8003afa:	687b      	ldr	r3, [r7, #4]
 8003afc:	681b      	ldr	r3, [r3, #0]
 8003afe:	f003 0302 	and.w	r3, r3, #2
 8003b02:	2b00      	cmp	r3, #0
 8003b04:	d063      	beq.n	8003bce <HAL_RCC_OscConfig+0x202>
 8003b06:	4b4c      	ldr	r3, [pc, #304]	@ (8003c38 <HAL_RCC_OscConfig+0x26c>)
 8003b08:	685b      	ldr	r3, [r3, #4]
 8003b0a:	f003 030c 	and.w	r3, r3, #12
 8003b0e:	2b00      	cmp	r3, #0
 8003b10:	d00b      	beq.n	8003b2a <HAL_RCC_OscConfig+0x15e>
 8003b12:	4b49      	ldr	r3, [pc, #292]	@ (8003c38 <HAL_RCC_OscConfig+0x26c>)
 8003b14:	685b      	ldr	r3, [r3, #4]
 8003b16:	f003 030c 	and.w	r3, r3, #12
 8003b1a:	2b08      	cmp	r3, #8
 8003b1c:	d11c      	bne.n	8003b58 <HAL_RCC_OscConfig+0x18c>
 8003b1e:	4b46      	ldr	r3, [pc, #280]	@ (8003c38 <HAL_RCC_OscConfig+0x26c>)
 8003b20:	685b      	ldr	r3, [r3, #4]
 8003b22:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003b26:	2b00      	cmp	r3, #0
 8003b28:	d116      	bne.n	8003b58 <HAL_RCC_OscConfig+0x18c>
 8003b2a:	4b43      	ldr	r3, [pc, #268]	@ (8003c38 <HAL_RCC_OscConfig+0x26c>)
 8003b2c:	681b      	ldr	r3, [r3, #0]
 8003b2e:	f003 0302 	and.w	r3, r3, #2
 8003b32:	2b00      	cmp	r3, #0
 8003b34:	d005      	beq.n	8003b42 <HAL_RCC_OscConfig+0x176>
 8003b36:	687b      	ldr	r3, [r7, #4]
 8003b38:	691b      	ldr	r3, [r3, #16]
 8003b3a:	2b01      	cmp	r3, #1
 8003b3c:	d001      	beq.n	8003b42 <HAL_RCC_OscConfig+0x176>
 8003b3e:	2301      	movs	r3, #1
 8003b40:	e1c0      	b.n	8003ec4 <HAL_RCC_OscConfig+0x4f8>
 8003b42:	4b3d      	ldr	r3, [pc, #244]	@ (8003c38 <HAL_RCC_OscConfig+0x26c>)
 8003b44:	681b      	ldr	r3, [r3, #0]
 8003b46:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8003b4a:	687b      	ldr	r3, [r7, #4]
 8003b4c:	695b      	ldr	r3, [r3, #20]
 8003b4e:	00db      	lsls	r3, r3, #3
 8003b50:	4939      	ldr	r1, [pc, #228]	@ (8003c38 <HAL_RCC_OscConfig+0x26c>)
 8003b52:	4313      	orrs	r3, r2
 8003b54:	600b      	str	r3, [r1, #0]
 8003b56:	e03a      	b.n	8003bce <HAL_RCC_OscConfig+0x202>
 8003b58:	687b      	ldr	r3, [r7, #4]
 8003b5a:	691b      	ldr	r3, [r3, #16]
 8003b5c:	2b00      	cmp	r3, #0
 8003b5e:	d020      	beq.n	8003ba2 <HAL_RCC_OscConfig+0x1d6>
 8003b60:	4b36      	ldr	r3, [pc, #216]	@ (8003c3c <HAL_RCC_OscConfig+0x270>)
 8003b62:	2201      	movs	r2, #1
 8003b64:	601a      	str	r2, [r3, #0]
 8003b66:	f7ff fa23 	bl	8002fb0 <HAL_GetTick>
 8003b6a:	6138      	str	r0, [r7, #16]
 8003b6c:	e008      	b.n	8003b80 <HAL_RCC_OscConfig+0x1b4>
 8003b6e:	f7ff fa1f 	bl	8002fb0 <HAL_GetTick>
 8003b72:	4602      	mov	r2, r0
 8003b74:	693b      	ldr	r3, [r7, #16]
 8003b76:	1ad3      	subs	r3, r2, r3
 8003b78:	2b02      	cmp	r3, #2
 8003b7a:	d901      	bls.n	8003b80 <HAL_RCC_OscConfig+0x1b4>
 8003b7c:	2303      	movs	r3, #3
 8003b7e:	e1a1      	b.n	8003ec4 <HAL_RCC_OscConfig+0x4f8>
 8003b80:	4b2d      	ldr	r3, [pc, #180]	@ (8003c38 <HAL_RCC_OscConfig+0x26c>)
 8003b82:	681b      	ldr	r3, [r3, #0]
 8003b84:	f003 0302 	and.w	r3, r3, #2
 8003b88:	2b00      	cmp	r3, #0
 8003b8a:	d0f0      	beq.n	8003b6e <HAL_RCC_OscConfig+0x1a2>
 8003b8c:	4b2a      	ldr	r3, [pc, #168]	@ (8003c38 <HAL_RCC_OscConfig+0x26c>)
 8003b8e:	681b      	ldr	r3, [r3, #0]
 8003b90:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8003b94:	687b      	ldr	r3, [r7, #4]
 8003b96:	695b      	ldr	r3, [r3, #20]
 8003b98:	00db      	lsls	r3, r3, #3
 8003b9a:	4927      	ldr	r1, [pc, #156]	@ (8003c38 <HAL_RCC_OscConfig+0x26c>)
 8003b9c:	4313      	orrs	r3, r2
 8003b9e:	600b      	str	r3, [r1, #0]
 8003ba0:	e015      	b.n	8003bce <HAL_RCC_OscConfig+0x202>
 8003ba2:	4b26      	ldr	r3, [pc, #152]	@ (8003c3c <HAL_RCC_OscConfig+0x270>)
 8003ba4:	2200      	movs	r2, #0
 8003ba6:	601a      	str	r2, [r3, #0]
 8003ba8:	f7ff fa02 	bl	8002fb0 <HAL_GetTick>
 8003bac:	6138      	str	r0, [r7, #16]
 8003bae:	e008      	b.n	8003bc2 <HAL_RCC_OscConfig+0x1f6>
 8003bb0:	f7ff f9fe 	bl	8002fb0 <HAL_GetTick>
 8003bb4:	4602      	mov	r2, r0
 8003bb6:	693b      	ldr	r3, [r7, #16]
 8003bb8:	1ad3      	subs	r3, r2, r3
 8003bba:	2b02      	cmp	r3, #2
 8003bbc:	d901      	bls.n	8003bc2 <HAL_RCC_OscConfig+0x1f6>
 8003bbe:	2303      	movs	r3, #3
 8003bc0:	e180      	b.n	8003ec4 <HAL_RCC_OscConfig+0x4f8>
 8003bc2:	4b1d      	ldr	r3, [pc, #116]	@ (8003c38 <HAL_RCC_OscConfig+0x26c>)
 8003bc4:	681b      	ldr	r3, [r3, #0]
 8003bc6:	f003 0302 	and.w	r3, r3, #2
 8003bca:	2b00      	cmp	r3, #0
 8003bcc:	d1f0      	bne.n	8003bb0 <HAL_RCC_OscConfig+0x1e4>
 8003bce:	687b      	ldr	r3, [r7, #4]
 8003bd0:	681b      	ldr	r3, [r3, #0]
 8003bd2:	f003 0308 	and.w	r3, r3, #8
 8003bd6:	2b00      	cmp	r3, #0
 8003bd8:	d03a      	beq.n	8003c50 <HAL_RCC_OscConfig+0x284>
 8003bda:	687b      	ldr	r3, [r7, #4]
 8003bdc:	699b      	ldr	r3, [r3, #24]
 8003bde:	2b00      	cmp	r3, #0
 8003be0:	d019      	beq.n	8003c16 <HAL_RCC_OscConfig+0x24a>
 8003be2:	4b17      	ldr	r3, [pc, #92]	@ (8003c40 <HAL_RCC_OscConfig+0x274>)
 8003be4:	2201      	movs	r2, #1
 8003be6:	601a      	str	r2, [r3, #0]
 8003be8:	f7ff f9e2 	bl	8002fb0 <HAL_GetTick>
 8003bec:	6138      	str	r0, [r7, #16]
 8003bee:	e008      	b.n	8003c02 <HAL_RCC_OscConfig+0x236>
 8003bf0:	f7ff f9de 	bl	8002fb0 <HAL_GetTick>
 8003bf4:	4602      	mov	r2, r0
 8003bf6:	693b      	ldr	r3, [r7, #16]
 8003bf8:	1ad3      	subs	r3, r2, r3
 8003bfa:	2b02      	cmp	r3, #2
 8003bfc:	d901      	bls.n	8003c02 <HAL_RCC_OscConfig+0x236>
 8003bfe:	2303      	movs	r3, #3
 8003c00:	e160      	b.n	8003ec4 <HAL_RCC_OscConfig+0x4f8>
 8003c02:	4b0d      	ldr	r3, [pc, #52]	@ (8003c38 <HAL_RCC_OscConfig+0x26c>)
 8003c04:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003c06:	f003 0302 	and.w	r3, r3, #2
 8003c0a:	2b00      	cmp	r3, #0
 8003c0c:	d0f0      	beq.n	8003bf0 <HAL_RCC_OscConfig+0x224>
 8003c0e:	2001      	movs	r0, #1
 8003c10:	f000 face 	bl	80041b0 <RCC_Delay>
 8003c14:	e01c      	b.n	8003c50 <HAL_RCC_OscConfig+0x284>
 8003c16:	4b0a      	ldr	r3, [pc, #40]	@ (8003c40 <HAL_RCC_OscConfig+0x274>)
 8003c18:	2200      	movs	r2, #0
 8003c1a:	601a      	str	r2, [r3, #0]
 8003c1c:	f7ff f9c8 	bl	8002fb0 <HAL_GetTick>
 8003c20:	6138      	str	r0, [r7, #16]
 8003c22:	e00f      	b.n	8003c44 <HAL_RCC_OscConfig+0x278>
 8003c24:	f7ff f9c4 	bl	8002fb0 <HAL_GetTick>
 8003c28:	4602      	mov	r2, r0
 8003c2a:	693b      	ldr	r3, [r7, #16]
 8003c2c:	1ad3      	subs	r3, r2, r3
 8003c2e:	2b02      	cmp	r3, #2
 8003c30:	d908      	bls.n	8003c44 <HAL_RCC_OscConfig+0x278>
 8003c32:	2303      	movs	r3, #3
 8003c34:	e146      	b.n	8003ec4 <HAL_RCC_OscConfig+0x4f8>
 8003c36:	bf00      	nop
 8003c38:	40021000 	.word	0x40021000
 8003c3c:	42420000 	.word	0x42420000
 8003c40:	42420480 	.word	0x42420480
 8003c44:	4b92      	ldr	r3, [pc, #584]	@ (8003e90 <HAL_RCC_OscConfig+0x4c4>)
 8003c46:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003c48:	f003 0302 	and.w	r3, r3, #2
 8003c4c:	2b00      	cmp	r3, #0
 8003c4e:	d1e9      	bne.n	8003c24 <HAL_RCC_OscConfig+0x258>
 8003c50:	687b      	ldr	r3, [r7, #4]
 8003c52:	681b      	ldr	r3, [r3, #0]
 8003c54:	f003 0304 	and.w	r3, r3, #4
 8003c58:	2b00      	cmp	r3, #0
 8003c5a:	f000 80a6 	beq.w	8003daa <HAL_RCC_OscConfig+0x3de>
 8003c5e:	2300      	movs	r3, #0
 8003c60:	75fb      	strb	r3, [r7, #23]
 8003c62:	4b8b      	ldr	r3, [pc, #556]	@ (8003e90 <HAL_RCC_OscConfig+0x4c4>)
 8003c64:	69db      	ldr	r3, [r3, #28]
 8003c66:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003c6a:	2b00      	cmp	r3, #0
 8003c6c:	d10d      	bne.n	8003c8a <HAL_RCC_OscConfig+0x2be>
 8003c6e:	4b88      	ldr	r3, [pc, #544]	@ (8003e90 <HAL_RCC_OscConfig+0x4c4>)
 8003c70:	69db      	ldr	r3, [r3, #28]
 8003c72:	4a87      	ldr	r2, [pc, #540]	@ (8003e90 <HAL_RCC_OscConfig+0x4c4>)
 8003c74:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8003c78:	61d3      	str	r3, [r2, #28]
 8003c7a:	4b85      	ldr	r3, [pc, #532]	@ (8003e90 <HAL_RCC_OscConfig+0x4c4>)
 8003c7c:	69db      	ldr	r3, [r3, #28]
 8003c7e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003c82:	60bb      	str	r3, [r7, #8]
 8003c84:	68bb      	ldr	r3, [r7, #8]
 8003c86:	2301      	movs	r3, #1
 8003c88:	75fb      	strb	r3, [r7, #23]
 8003c8a:	4b82      	ldr	r3, [pc, #520]	@ (8003e94 <HAL_RCC_OscConfig+0x4c8>)
 8003c8c:	681b      	ldr	r3, [r3, #0]
 8003c8e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003c92:	2b00      	cmp	r3, #0
 8003c94:	d118      	bne.n	8003cc8 <HAL_RCC_OscConfig+0x2fc>
 8003c96:	4b7f      	ldr	r3, [pc, #508]	@ (8003e94 <HAL_RCC_OscConfig+0x4c8>)
 8003c98:	681b      	ldr	r3, [r3, #0]
 8003c9a:	4a7e      	ldr	r2, [pc, #504]	@ (8003e94 <HAL_RCC_OscConfig+0x4c8>)
 8003c9c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003ca0:	6013      	str	r3, [r2, #0]
 8003ca2:	f7ff f985 	bl	8002fb0 <HAL_GetTick>
 8003ca6:	6138      	str	r0, [r7, #16]
 8003ca8:	e008      	b.n	8003cbc <HAL_RCC_OscConfig+0x2f0>
 8003caa:	f7ff f981 	bl	8002fb0 <HAL_GetTick>
 8003cae:	4602      	mov	r2, r0
 8003cb0:	693b      	ldr	r3, [r7, #16]
 8003cb2:	1ad3      	subs	r3, r2, r3
 8003cb4:	2b64      	cmp	r3, #100	@ 0x64
 8003cb6:	d901      	bls.n	8003cbc <HAL_RCC_OscConfig+0x2f0>
 8003cb8:	2303      	movs	r3, #3
 8003cba:	e103      	b.n	8003ec4 <HAL_RCC_OscConfig+0x4f8>
 8003cbc:	4b75      	ldr	r3, [pc, #468]	@ (8003e94 <HAL_RCC_OscConfig+0x4c8>)
 8003cbe:	681b      	ldr	r3, [r3, #0]
 8003cc0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003cc4:	2b00      	cmp	r3, #0
 8003cc6:	d0f0      	beq.n	8003caa <HAL_RCC_OscConfig+0x2de>
 8003cc8:	687b      	ldr	r3, [r7, #4]
 8003cca:	68db      	ldr	r3, [r3, #12]
 8003ccc:	2b01      	cmp	r3, #1
 8003cce:	d106      	bne.n	8003cde <HAL_RCC_OscConfig+0x312>
 8003cd0:	4b6f      	ldr	r3, [pc, #444]	@ (8003e90 <HAL_RCC_OscConfig+0x4c4>)
 8003cd2:	6a1b      	ldr	r3, [r3, #32]
 8003cd4:	4a6e      	ldr	r2, [pc, #440]	@ (8003e90 <HAL_RCC_OscConfig+0x4c4>)
 8003cd6:	f043 0301 	orr.w	r3, r3, #1
 8003cda:	6213      	str	r3, [r2, #32]
 8003cdc:	e02d      	b.n	8003d3a <HAL_RCC_OscConfig+0x36e>
 8003cde:	687b      	ldr	r3, [r7, #4]
 8003ce0:	68db      	ldr	r3, [r3, #12]
 8003ce2:	2b00      	cmp	r3, #0
 8003ce4:	d10c      	bne.n	8003d00 <HAL_RCC_OscConfig+0x334>
 8003ce6:	4b6a      	ldr	r3, [pc, #424]	@ (8003e90 <HAL_RCC_OscConfig+0x4c4>)
 8003ce8:	6a1b      	ldr	r3, [r3, #32]
 8003cea:	4a69      	ldr	r2, [pc, #420]	@ (8003e90 <HAL_RCC_OscConfig+0x4c4>)
 8003cec:	f023 0301 	bic.w	r3, r3, #1
 8003cf0:	6213      	str	r3, [r2, #32]
 8003cf2:	4b67      	ldr	r3, [pc, #412]	@ (8003e90 <HAL_RCC_OscConfig+0x4c4>)
 8003cf4:	6a1b      	ldr	r3, [r3, #32]
 8003cf6:	4a66      	ldr	r2, [pc, #408]	@ (8003e90 <HAL_RCC_OscConfig+0x4c4>)
 8003cf8:	f023 0304 	bic.w	r3, r3, #4
 8003cfc:	6213      	str	r3, [r2, #32]
 8003cfe:	e01c      	b.n	8003d3a <HAL_RCC_OscConfig+0x36e>
 8003d00:	687b      	ldr	r3, [r7, #4]
 8003d02:	68db      	ldr	r3, [r3, #12]
 8003d04:	2b05      	cmp	r3, #5
 8003d06:	d10c      	bne.n	8003d22 <HAL_RCC_OscConfig+0x356>
 8003d08:	4b61      	ldr	r3, [pc, #388]	@ (8003e90 <HAL_RCC_OscConfig+0x4c4>)
 8003d0a:	6a1b      	ldr	r3, [r3, #32]
 8003d0c:	4a60      	ldr	r2, [pc, #384]	@ (8003e90 <HAL_RCC_OscConfig+0x4c4>)
 8003d0e:	f043 0304 	orr.w	r3, r3, #4
 8003d12:	6213      	str	r3, [r2, #32]
 8003d14:	4b5e      	ldr	r3, [pc, #376]	@ (8003e90 <HAL_RCC_OscConfig+0x4c4>)
 8003d16:	6a1b      	ldr	r3, [r3, #32]
 8003d18:	4a5d      	ldr	r2, [pc, #372]	@ (8003e90 <HAL_RCC_OscConfig+0x4c4>)
 8003d1a:	f043 0301 	orr.w	r3, r3, #1
 8003d1e:	6213      	str	r3, [r2, #32]
 8003d20:	e00b      	b.n	8003d3a <HAL_RCC_OscConfig+0x36e>
 8003d22:	4b5b      	ldr	r3, [pc, #364]	@ (8003e90 <HAL_RCC_OscConfig+0x4c4>)
 8003d24:	6a1b      	ldr	r3, [r3, #32]
 8003d26:	4a5a      	ldr	r2, [pc, #360]	@ (8003e90 <HAL_RCC_OscConfig+0x4c4>)
 8003d28:	f023 0301 	bic.w	r3, r3, #1
 8003d2c:	6213      	str	r3, [r2, #32]
 8003d2e:	4b58      	ldr	r3, [pc, #352]	@ (8003e90 <HAL_RCC_OscConfig+0x4c4>)
 8003d30:	6a1b      	ldr	r3, [r3, #32]
 8003d32:	4a57      	ldr	r2, [pc, #348]	@ (8003e90 <HAL_RCC_OscConfig+0x4c4>)
 8003d34:	f023 0304 	bic.w	r3, r3, #4
 8003d38:	6213      	str	r3, [r2, #32]
 8003d3a:	687b      	ldr	r3, [r7, #4]
 8003d3c:	68db      	ldr	r3, [r3, #12]
 8003d3e:	2b00      	cmp	r3, #0
 8003d40:	d015      	beq.n	8003d6e <HAL_RCC_OscConfig+0x3a2>
 8003d42:	f7ff f935 	bl	8002fb0 <HAL_GetTick>
 8003d46:	6138      	str	r0, [r7, #16]
 8003d48:	e00a      	b.n	8003d60 <HAL_RCC_OscConfig+0x394>
 8003d4a:	f7ff f931 	bl	8002fb0 <HAL_GetTick>
 8003d4e:	4602      	mov	r2, r0
 8003d50:	693b      	ldr	r3, [r7, #16]
 8003d52:	1ad3      	subs	r3, r2, r3
 8003d54:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003d58:	4293      	cmp	r3, r2
 8003d5a:	d901      	bls.n	8003d60 <HAL_RCC_OscConfig+0x394>
 8003d5c:	2303      	movs	r3, #3
 8003d5e:	e0b1      	b.n	8003ec4 <HAL_RCC_OscConfig+0x4f8>
 8003d60:	4b4b      	ldr	r3, [pc, #300]	@ (8003e90 <HAL_RCC_OscConfig+0x4c4>)
 8003d62:	6a1b      	ldr	r3, [r3, #32]
 8003d64:	f003 0302 	and.w	r3, r3, #2
 8003d68:	2b00      	cmp	r3, #0
 8003d6a:	d0ee      	beq.n	8003d4a <HAL_RCC_OscConfig+0x37e>
 8003d6c:	e014      	b.n	8003d98 <HAL_RCC_OscConfig+0x3cc>
 8003d6e:	f7ff f91f 	bl	8002fb0 <HAL_GetTick>
 8003d72:	6138      	str	r0, [r7, #16]
 8003d74:	e00a      	b.n	8003d8c <HAL_RCC_OscConfig+0x3c0>
 8003d76:	f7ff f91b 	bl	8002fb0 <HAL_GetTick>
 8003d7a:	4602      	mov	r2, r0
 8003d7c:	693b      	ldr	r3, [r7, #16]
 8003d7e:	1ad3      	subs	r3, r2, r3
 8003d80:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003d84:	4293      	cmp	r3, r2
 8003d86:	d901      	bls.n	8003d8c <HAL_RCC_OscConfig+0x3c0>
 8003d88:	2303      	movs	r3, #3
 8003d8a:	e09b      	b.n	8003ec4 <HAL_RCC_OscConfig+0x4f8>
 8003d8c:	4b40      	ldr	r3, [pc, #256]	@ (8003e90 <HAL_RCC_OscConfig+0x4c4>)
 8003d8e:	6a1b      	ldr	r3, [r3, #32]
 8003d90:	f003 0302 	and.w	r3, r3, #2
 8003d94:	2b00      	cmp	r3, #0
 8003d96:	d1ee      	bne.n	8003d76 <HAL_RCC_OscConfig+0x3aa>
 8003d98:	7dfb      	ldrb	r3, [r7, #23]
 8003d9a:	2b01      	cmp	r3, #1
 8003d9c:	d105      	bne.n	8003daa <HAL_RCC_OscConfig+0x3de>
 8003d9e:	4b3c      	ldr	r3, [pc, #240]	@ (8003e90 <HAL_RCC_OscConfig+0x4c4>)
 8003da0:	69db      	ldr	r3, [r3, #28]
 8003da2:	4a3b      	ldr	r2, [pc, #236]	@ (8003e90 <HAL_RCC_OscConfig+0x4c4>)
 8003da4:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8003da8:	61d3      	str	r3, [r2, #28]
 8003daa:	687b      	ldr	r3, [r7, #4]
 8003dac:	69db      	ldr	r3, [r3, #28]
 8003dae:	2b00      	cmp	r3, #0
 8003db0:	f000 8087 	beq.w	8003ec2 <HAL_RCC_OscConfig+0x4f6>
 8003db4:	4b36      	ldr	r3, [pc, #216]	@ (8003e90 <HAL_RCC_OscConfig+0x4c4>)
 8003db6:	685b      	ldr	r3, [r3, #4]
 8003db8:	f003 030c 	and.w	r3, r3, #12
 8003dbc:	2b08      	cmp	r3, #8
 8003dbe:	d061      	beq.n	8003e84 <HAL_RCC_OscConfig+0x4b8>
 8003dc0:	687b      	ldr	r3, [r7, #4]
 8003dc2:	69db      	ldr	r3, [r3, #28]
 8003dc4:	2b02      	cmp	r3, #2
 8003dc6:	d146      	bne.n	8003e56 <HAL_RCC_OscConfig+0x48a>
 8003dc8:	4b33      	ldr	r3, [pc, #204]	@ (8003e98 <HAL_RCC_OscConfig+0x4cc>)
 8003dca:	2200      	movs	r2, #0
 8003dcc:	601a      	str	r2, [r3, #0]
 8003dce:	f7ff f8ef 	bl	8002fb0 <HAL_GetTick>
 8003dd2:	6138      	str	r0, [r7, #16]
 8003dd4:	e008      	b.n	8003de8 <HAL_RCC_OscConfig+0x41c>
 8003dd6:	f7ff f8eb 	bl	8002fb0 <HAL_GetTick>
 8003dda:	4602      	mov	r2, r0
 8003ddc:	693b      	ldr	r3, [r7, #16]
 8003dde:	1ad3      	subs	r3, r2, r3
 8003de0:	2b02      	cmp	r3, #2
 8003de2:	d901      	bls.n	8003de8 <HAL_RCC_OscConfig+0x41c>
 8003de4:	2303      	movs	r3, #3
 8003de6:	e06d      	b.n	8003ec4 <HAL_RCC_OscConfig+0x4f8>
 8003de8:	4b29      	ldr	r3, [pc, #164]	@ (8003e90 <HAL_RCC_OscConfig+0x4c4>)
 8003dea:	681b      	ldr	r3, [r3, #0]
 8003dec:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003df0:	2b00      	cmp	r3, #0
 8003df2:	d1f0      	bne.n	8003dd6 <HAL_RCC_OscConfig+0x40a>
 8003df4:	687b      	ldr	r3, [r7, #4]
 8003df6:	6a1b      	ldr	r3, [r3, #32]
 8003df8:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8003dfc:	d108      	bne.n	8003e10 <HAL_RCC_OscConfig+0x444>
 8003dfe:	4b24      	ldr	r3, [pc, #144]	@ (8003e90 <HAL_RCC_OscConfig+0x4c4>)
 8003e00:	685b      	ldr	r3, [r3, #4]
 8003e02:	f423 3200 	bic.w	r2, r3, #131072	@ 0x20000
 8003e06:	687b      	ldr	r3, [r7, #4]
 8003e08:	689b      	ldr	r3, [r3, #8]
 8003e0a:	4921      	ldr	r1, [pc, #132]	@ (8003e90 <HAL_RCC_OscConfig+0x4c4>)
 8003e0c:	4313      	orrs	r3, r2
 8003e0e:	604b      	str	r3, [r1, #4]
 8003e10:	4b1f      	ldr	r3, [pc, #124]	@ (8003e90 <HAL_RCC_OscConfig+0x4c4>)
 8003e12:	685b      	ldr	r3, [r3, #4]
 8003e14:	f423 1274 	bic.w	r2, r3, #3997696	@ 0x3d0000
 8003e18:	687b      	ldr	r3, [r7, #4]
 8003e1a:	6a19      	ldr	r1, [r3, #32]
 8003e1c:	687b      	ldr	r3, [r7, #4]
 8003e1e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003e20:	430b      	orrs	r3, r1
 8003e22:	491b      	ldr	r1, [pc, #108]	@ (8003e90 <HAL_RCC_OscConfig+0x4c4>)
 8003e24:	4313      	orrs	r3, r2
 8003e26:	604b      	str	r3, [r1, #4]
 8003e28:	4b1b      	ldr	r3, [pc, #108]	@ (8003e98 <HAL_RCC_OscConfig+0x4cc>)
 8003e2a:	2201      	movs	r2, #1
 8003e2c:	601a      	str	r2, [r3, #0]
 8003e2e:	f7ff f8bf 	bl	8002fb0 <HAL_GetTick>
 8003e32:	6138      	str	r0, [r7, #16]
 8003e34:	e008      	b.n	8003e48 <HAL_RCC_OscConfig+0x47c>
 8003e36:	f7ff f8bb 	bl	8002fb0 <HAL_GetTick>
 8003e3a:	4602      	mov	r2, r0
 8003e3c:	693b      	ldr	r3, [r7, #16]
 8003e3e:	1ad3      	subs	r3, r2, r3
 8003e40:	2b02      	cmp	r3, #2
 8003e42:	d901      	bls.n	8003e48 <HAL_RCC_OscConfig+0x47c>
 8003e44:	2303      	movs	r3, #3
 8003e46:	e03d      	b.n	8003ec4 <HAL_RCC_OscConfig+0x4f8>
 8003e48:	4b11      	ldr	r3, [pc, #68]	@ (8003e90 <HAL_RCC_OscConfig+0x4c4>)
 8003e4a:	681b      	ldr	r3, [r3, #0]
 8003e4c:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003e50:	2b00      	cmp	r3, #0
 8003e52:	d0f0      	beq.n	8003e36 <HAL_RCC_OscConfig+0x46a>
 8003e54:	e035      	b.n	8003ec2 <HAL_RCC_OscConfig+0x4f6>
 8003e56:	4b10      	ldr	r3, [pc, #64]	@ (8003e98 <HAL_RCC_OscConfig+0x4cc>)
 8003e58:	2200      	movs	r2, #0
 8003e5a:	601a      	str	r2, [r3, #0]
 8003e5c:	f7ff f8a8 	bl	8002fb0 <HAL_GetTick>
 8003e60:	6138      	str	r0, [r7, #16]
 8003e62:	e008      	b.n	8003e76 <HAL_RCC_OscConfig+0x4aa>
 8003e64:	f7ff f8a4 	bl	8002fb0 <HAL_GetTick>
 8003e68:	4602      	mov	r2, r0
 8003e6a:	693b      	ldr	r3, [r7, #16]
 8003e6c:	1ad3      	subs	r3, r2, r3
 8003e6e:	2b02      	cmp	r3, #2
 8003e70:	d901      	bls.n	8003e76 <HAL_RCC_OscConfig+0x4aa>
 8003e72:	2303      	movs	r3, #3
 8003e74:	e026      	b.n	8003ec4 <HAL_RCC_OscConfig+0x4f8>
 8003e76:	4b06      	ldr	r3, [pc, #24]	@ (8003e90 <HAL_RCC_OscConfig+0x4c4>)
 8003e78:	681b      	ldr	r3, [r3, #0]
 8003e7a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003e7e:	2b00      	cmp	r3, #0
 8003e80:	d1f0      	bne.n	8003e64 <HAL_RCC_OscConfig+0x498>
 8003e82:	e01e      	b.n	8003ec2 <HAL_RCC_OscConfig+0x4f6>
 8003e84:	687b      	ldr	r3, [r7, #4]
 8003e86:	69db      	ldr	r3, [r3, #28]
 8003e88:	2b01      	cmp	r3, #1
 8003e8a:	d107      	bne.n	8003e9c <HAL_RCC_OscConfig+0x4d0>
 8003e8c:	2301      	movs	r3, #1
 8003e8e:	e019      	b.n	8003ec4 <HAL_RCC_OscConfig+0x4f8>
 8003e90:	40021000 	.word	0x40021000
 8003e94:	40007000 	.word	0x40007000
 8003e98:	42420060 	.word	0x42420060
 8003e9c:	4b0b      	ldr	r3, [pc, #44]	@ (8003ecc <HAL_RCC_OscConfig+0x500>)
 8003e9e:	685b      	ldr	r3, [r3, #4]
 8003ea0:	60fb      	str	r3, [r7, #12]
 8003ea2:	68fb      	ldr	r3, [r7, #12]
 8003ea4:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 8003ea8:	687b      	ldr	r3, [r7, #4]
 8003eaa:	6a1b      	ldr	r3, [r3, #32]
 8003eac:	429a      	cmp	r2, r3
 8003eae:	d106      	bne.n	8003ebe <HAL_RCC_OscConfig+0x4f2>
 8003eb0:	68fb      	ldr	r3, [r7, #12]
 8003eb2:	f403 1270 	and.w	r2, r3, #3932160	@ 0x3c0000
 8003eb6:	687b      	ldr	r3, [r7, #4]
 8003eb8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003eba:	429a      	cmp	r2, r3
 8003ebc:	d001      	beq.n	8003ec2 <HAL_RCC_OscConfig+0x4f6>
 8003ebe:	2301      	movs	r3, #1
 8003ec0:	e000      	b.n	8003ec4 <HAL_RCC_OscConfig+0x4f8>
 8003ec2:	2300      	movs	r3, #0
 8003ec4:	4618      	mov	r0, r3
 8003ec6:	3718      	adds	r7, #24
 8003ec8:	46bd      	mov	sp, r7
 8003eca:	bd80      	pop	{r7, pc}
 8003ecc:	40021000 	.word	0x40021000

08003ed0 <HAL_RCC_ClockConfig>:
 8003ed0:	b580      	push	{r7, lr}
 8003ed2:	b084      	sub	sp, #16
 8003ed4:	af00      	add	r7, sp, #0
 8003ed6:	6078      	str	r0, [r7, #4]
 8003ed8:	6039      	str	r1, [r7, #0]
 8003eda:	687b      	ldr	r3, [r7, #4]
 8003edc:	2b00      	cmp	r3, #0
 8003ede:	d101      	bne.n	8003ee4 <HAL_RCC_ClockConfig+0x14>
 8003ee0:	2301      	movs	r3, #1
 8003ee2:	e0d0      	b.n	8004086 <HAL_RCC_ClockConfig+0x1b6>
 8003ee4:	4b6a      	ldr	r3, [pc, #424]	@ (8004090 <HAL_RCC_ClockConfig+0x1c0>)
 8003ee6:	681b      	ldr	r3, [r3, #0]
 8003ee8:	f003 0307 	and.w	r3, r3, #7
 8003eec:	683a      	ldr	r2, [r7, #0]
 8003eee:	429a      	cmp	r2, r3
 8003ef0:	d910      	bls.n	8003f14 <HAL_RCC_ClockConfig+0x44>
 8003ef2:	4b67      	ldr	r3, [pc, #412]	@ (8004090 <HAL_RCC_ClockConfig+0x1c0>)
 8003ef4:	681b      	ldr	r3, [r3, #0]
 8003ef6:	f023 0207 	bic.w	r2, r3, #7
 8003efa:	4965      	ldr	r1, [pc, #404]	@ (8004090 <HAL_RCC_ClockConfig+0x1c0>)
 8003efc:	683b      	ldr	r3, [r7, #0]
 8003efe:	4313      	orrs	r3, r2
 8003f00:	600b      	str	r3, [r1, #0]
 8003f02:	4b63      	ldr	r3, [pc, #396]	@ (8004090 <HAL_RCC_ClockConfig+0x1c0>)
 8003f04:	681b      	ldr	r3, [r3, #0]
 8003f06:	f003 0307 	and.w	r3, r3, #7
 8003f0a:	683a      	ldr	r2, [r7, #0]
 8003f0c:	429a      	cmp	r2, r3
 8003f0e:	d001      	beq.n	8003f14 <HAL_RCC_ClockConfig+0x44>
 8003f10:	2301      	movs	r3, #1
 8003f12:	e0b8      	b.n	8004086 <HAL_RCC_ClockConfig+0x1b6>
 8003f14:	687b      	ldr	r3, [r7, #4]
 8003f16:	681b      	ldr	r3, [r3, #0]
 8003f18:	f003 0302 	and.w	r3, r3, #2
 8003f1c:	2b00      	cmp	r3, #0
 8003f1e:	d020      	beq.n	8003f62 <HAL_RCC_ClockConfig+0x92>
 8003f20:	687b      	ldr	r3, [r7, #4]
 8003f22:	681b      	ldr	r3, [r3, #0]
 8003f24:	f003 0304 	and.w	r3, r3, #4
 8003f28:	2b00      	cmp	r3, #0
 8003f2a:	d005      	beq.n	8003f38 <HAL_RCC_ClockConfig+0x68>
 8003f2c:	4b59      	ldr	r3, [pc, #356]	@ (8004094 <HAL_RCC_ClockConfig+0x1c4>)
 8003f2e:	685b      	ldr	r3, [r3, #4]
 8003f30:	4a58      	ldr	r2, [pc, #352]	@ (8004094 <HAL_RCC_ClockConfig+0x1c4>)
 8003f32:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 8003f36:	6053      	str	r3, [r2, #4]
 8003f38:	687b      	ldr	r3, [r7, #4]
 8003f3a:	681b      	ldr	r3, [r3, #0]
 8003f3c:	f003 0308 	and.w	r3, r3, #8
 8003f40:	2b00      	cmp	r3, #0
 8003f42:	d005      	beq.n	8003f50 <HAL_RCC_ClockConfig+0x80>
 8003f44:	4b53      	ldr	r3, [pc, #332]	@ (8004094 <HAL_RCC_ClockConfig+0x1c4>)
 8003f46:	685b      	ldr	r3, [r3, #4]
 8003f48:	4a52      	ldr	r2, [pc, #328]	@ (8004094 <HAL_RCC_ClockConfig+0x1c4>)
 8003f4a:	f443 5360 	orr.w	r3, r3, #14336	@ 0x3800
 8003f4e:	6053      	str	r3, [r2, #4]
 8003f50:	4b50      	ldr	r3, [pc, #320]	@ (8004094 <HAL_RCC_ClockConfig+0x1c4>)
 8003f52:	685b      	ldr	r3, [r3, #4]
 8003f54:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8003f58:	687b      	ldr	r3, [r7, #4]
 8003f5a:	689b      	ldr	r3, [r3, #8]
 8003f5c:	494d      	ldr	r1, [pc, #308]	@ (8004094 <HAL_RCC_ClockConfig+0x1c4>)
 8003f5e:	4313      	orrs	r3, r2
 8003f60:	604b      	str	r3, [r1, #4]
 8003f62:	687b      	ldr	r3, [r7, #4]
 8003f64:	681b      	ldr	r3, [r3, #0]
 8003f66:	f003 0301 	and.w	r3, r3, #1
 8003f6a:	2b00      	cmp	r3, #0
 8003f6c:	d040      	beq.n	8003ff0 <HAL_RCC_ClockConfig+0x120>
 8003f6e:	687b      	ldr	r3, [r7, #4]
 8003f70:	685b      	ldr	r3, [r3, #4]
 8003f72:	2b01      	cmp	r3, #1
 8003f74:	d107      	bne.n	8003f86 <HAL_RCC_ClockConfig+0xb6>
 8003f76:	4b47      	ldr	r3, [pc, #284]	@ (8004094 <HAL_RCC_ClockConfig+0x1c4>)
 8003f78:	681b      	ldr	r3, [r3, #0]
 8003f7a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003f7e:	2b00      	cmp	r3, #0
 8003f80:	d115      	bne.n	8003fae <HAL_RCC_ClockConfig+0xde>
 8003f82:	2301      	movs	r3, #1
 8003f84:	e07f      	b.n	8004086 <HAL_RCC_ClockConfig+0x1b6>
 8003f86:	687b      	ldr	r3, [r7, #4]
 8003f88:	685b      	ldr	r3, [r3, #4]
 8003f8a:	2b02      	cmp	r3, #2
 8003f8c:	d107      	bne.n	8003f9e <HAL_RCC_ClockConfig+0xce>
 8003f8e:	4b41      	ldr	r3, [pc, #260]	@ (8004094 <HAL_RCC_ClockConfig+0x1c4>)
 8003f90:	681b      	ldr	r3, [r3, #0]
 8003f92:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003f96:	2b00      	cmp	r3, #0
 8003f98:	d109      	bne.n	8003fae <HAL_RCC_ClockConfig+0xde>
 8003f9a:	2301      	movs	r3, #1
 8003f9c:	e073      	b.n	8004086 <HAL_RCC_ClockConfig+0x1b6>
 8003f9e:	4b3d      	ldr	r3, [pc, #244]	@ (8004094 <HAL_RCC_ClockConfig+0x1c4>)
 8003fa0:	681b      	ldr	r3, [r3, #0]
 8003fa2:	f003 0302 	and.w	r3, r3, #2
 8003fa6:	2b00      	cmp	r3, #0
 8003fa8:	d101      	bne.n	8003fae <HAL_RCC_ClockConfig+0xde>
 8003faa:	2301      	movs	r3, #1
 8003fac:	e06b      	b.n	8004086 <HAL_RCC_ClockConfig+0x1b6>
 8003fae:	4b39      	ldr	r3, [pc, #228]	@ (8004094 <HAL_RCC_ClockConfig+0x1c4>)
 8003fb0:	685b      	ldr	r3, [r3, #4]
 8003fb2:	f023 0203 	bic.w	r2, r3, #3
 8003fb6:	687b      	ldr	r3, [r7, #4]
 8003fb8:	685b      	ldr	r3, [r3, #4]
 8003fba:	4936      	ldr	r1, [pc, #216]	@ (8004094 <HAL_RCC_ClockConfig+0x1c4>)
 8003fbc:	4313      	orrs	r3, r2
 8003fbe:	604b      	str	r3, [r1, #4]
 8003fc0:	f7fe fff6 	bl	8002fb0 <HAL_GetTick>
 8003fc4:	60f8      	str	r0, [r7, #12]
 8003fc6:	e00a      	b.n	8003fde <HAL_RCC_ClockConfig+0x10e>
 8003fc8:	f7fe fff2 	bl	8002fb0 <HAL_GetTick>
 8003fcc:	4602      	mov	r2, r0
 8003fce:	68fb      	ldr	r3, [r7, #12]
 8003fd0:	1ad3      	subs	r3, r2, r3
 8003fd2:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003fd6:	4293      	cmp	r3, r2
 8003fd8:	d901      	bls.n	8003fde <HAL_RCC_ClockConfig+0x10e>
 8003fda:	2303      	movs	r3, #3
 8003fdc:	e053      	b.n	8004086 <HAL_RCC_ClockConfig+0x1b6>
 8003fde:	4b2d      	ldr	r3, [pc, #180]	@ (8004094 <HAL_RCC_ClockConfig+0x1c4>)
 8003fe0:	685b      	ldr	r3, [r3, #4]
 8003fe2:	f003 020c 	and.w	r2, r3, #12
 8003fe6:	687b      	ldr	r3, [r7, #4]
 8003fe8:	685b      	ldr	r3, [r3, #4]
 8003fea:	009b      	lsls	r3, r3, #2
 8003fec:	429a      	cmp	r2, r3
 8003fee:	d1eb      	bne.n	8003fc8 <HAL_RCC_ClockConfig+0xf8>
 8003ff0:	4b27      	ldr	r3, [pc, #156]	@ (8004090 <HAL_RCC_ClockConfig+0x1c0>)
 8003ff2:	681b      	ldr	r3, [r3, #0]
 8003ff4:	f003 0307 	and.w	r3, r3, #7
 8003ff8:	683a      	ldr	r2, [r7, #0]
 8003ffa:	429a      	cmp	r2, r3
 8003ffc:	d210      	bcs.n	8004020 <HAL_RCC_ClockConfig+0x150>
 8003ffe:	4b24      	ldr	r3, [pc, #144]	@ (8004090 <HAL_RCC_ClockConfig+0x1c0>)
 8004000:	681b      	ldr	r3, [r3, #0]
 8004002:	f023 0207 	bic.w	r2, r3, #7
 8004006:	4922      	ldr	r1, [pc, #136]	@ (8004090 <HAL_RCC_ClockConfig+0x1c0>)
 8004008:	683b      	ldr	r3, [r7, #0]
 800400a:	4313      	orrs	r3, r2
 800400c:	600b      	str	r3, [r1, #0]
 800400e:	4b20      	ldr	r3, [pc, #128]	@ (8004090 <HAL_RCC_ClockConfig+0x1c0>)
 8004010:	681b      	ldr	r3, [r3, #0]
 8004012:	f003 0307 	and.w	r3, r3, #7
 8004016:	683a      	ldr	r2, [r7, #0]
 8004018:	429a      	cmp	r2, r3
 800401a:	d001      	beq.n	8004020 <HAL_RCC_ClockConfig+0x150>
 800401c:	2301      	movs	r3, #1
 800401e:	e032      	b.n	8004086 <HAL_RCC_ClockConfig+0x1b6>
 8004020:	687b      	ldr	r3, [r7, #4]
 8004022:	681b      	ldr	r3, [r3, #0]
 8004024:	f003 0304 	and.w	r3, r3, #4
 8004028:	2b00      	cmp	r3, #0
 800402a:	d008      	beq.n	800403e <HAL_RCC_ClockConfig+0x16e>
 800402c:	4b19      	ldr	r3, [pc, #100]	@ (8004094 <HAL_RCC_ClockConfig+0x1c4>)
 800402e:	685b      	ldr	r3, [r3, #4]
 8004030:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 8004034:	687b      	ldr	r3, [r7, #4]
 8004036:	68db      	ldr	r3, [r3, #12]
 8004038:	4916      	ldr	r1, [pc, #88]	@ (8004094 <HAL_RCC_ClockConfig+0x1c4>)
 800403a:	4313      	orrs	r3, r2
 800403c:	604b      	str	r3, [r1, #4]
 800403e:	687b      	ldr	r3, [r7, #4]
 8004040:	681b      	ldr	r3, [r3, #0]
 8004042:	f003 0308 	and.w	r3, r3, #8
 8004046:	2b00      	cmp	r3, #0
 8004048:	d009      	beq.n	800405e <HAL_RCC_ClockConfig+0x18e>
 800404a:	4b12      	ldr	r3, [pc, #72]	@ (8004094 <HAL_RCC_ClockConfig+0x1c4>)
 800404c:	685b      	ldr	r3, [r3, #4]
 800404e:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 8004052:	687b      	ldr	r3, [r7, #4]
 8004054:	691b      	ldr	r3, [r3, #16]
 8004056:	00db      	lsls	r3, r3, #3
 8004058:	490e      	ldr	r1, [pc, #56]	@ (8004094 <HAL_RCC_ClockConfig+0x1c4>)
 800405a:	4313      	orrs	r3, r2
 800405c:	604b      	str	r3, [r1, #4]
 800405e:	f000 f821 	bl	80040a4 <HAL_RCC_GetSysClockFreq>
 8004062:	4602      	mov	r2, r0
 8004064:	4b0b      	ldr	r3, [pc, #44]	@ (8004094 <HAL_RCC_ClockConfig+0x1c4>)
 8004066:	685b      	ldr	r3, [r3, #4]
 8004068:	091b      	lsrs	r3, r3, #4
 800406a:	f003 030f 	and.w	r3, r3, #15
 800406e:	490a      	ldr	r1, [pc, #40]	@ (8004098 <HAL_RCC_ClockConfig+0x1c8>)
 8004070:	5ccb      	ldrb	r3, [r1, r3]
 8004072:	fa22 f303 	lsr.w	r3, r2, r3
 8004076:	4a09      	ldr	r2, [pc, #36]	@ (800409c <HAL_RCC_ClockConfig+0x1cc>)
 8004078:	6013      	str	r3, [r2, #0]
 800407a:	4b09      	ldr	r3, [pc, #36]	@ (80040a0 <HAL_RCC_ClockConfig+0x1d0>)
 800407c:	681b      	ldr	r3, [r3, #0]
 800407e:	4618      	mov	r0, r3
 8004080:	f7fe ff54 	bl	8002f2c <HAL_InitTick>
 8004084:	2300      	movs	r3, #0
 8004086:	4618      	mov	r0, r3
 8004088:	3710      	adds	r7, #16
 800408a:	46bd      	mov	sp, r7
 800408c:	bd80      	pop	{r7, pc}
 800408e:	bf00      	nop
 8004090:	40022000 	.word	0x40022000
 8004094:	40021000 	.word	0x40021000
 8004098:	080090d4 	.word	0x080090d4
 800409c:	20000014 	.word	0x20000014
 80040a0:	20000018 	.word	0x20000018

080040a4 <HAL_RCC_GetSysClockFreq>:
 80040a4:	b480      	push	{r7}
 80040a6:	b087      	sub	sp, #28
 80040a8:	af00      	add	r7, sp, #0
 80040aa:	2300      	movs	r3, #0
 80040ac:	60fb      	str	r3, [r7, #12]
 80040ae:	2300      	movs	r3, #0
 80040b0:	60bb      	str	r3, [r7, #8]
 80040b2:	2300      	movs	r3, #0
 80040b4:	617b      	str	r3, [r7, #20]
 80040b6:	2300      	movs	r3, #0
 80040b8:	607b      	str	r3, [r7, #4]
 80040ba:	2300      	movs	r3, #0
 80040bc:	613b      	str	r3, [r7, #16]
 80040be:	4b1e      	ldr	r3, [pc, #120]	@ (8004138 <HAL_RCC_GetSysClockFreq+0x94>)
 80040c0:	685b      	ldr	r3, [r3, #4]
 80040c2:	60fb      	str	r3, [r7, #12]
 80040c4:	68fb      	ldr	r3, [r7, #12]
 80040c6:	f003 030c 	and.w	r3, r3, #12
 80040ca:	2b04      	cmp	r3, #4
 80040cc:	d002      	beq.n	80040d4 <HAL_RCC_GetSysClockFreq+0x30>
 80040ce:	2b08      	cmp	r3, #8
 80040d0:	d003      	beq.n	80040da <HAL_RCC_GetSysClockFreq+0x36>
 80040d2:	e027      	b.n	8004124 <HAL_RCC_GetSysClockFreq+0x80>
 80040d4:	4b19      	ldr	r3, [pc, #100]	@ (800413c <HAL_RCC_GetSysClockFreq+0x98>)
 80040d6:	613b      	str	r3, [r7, #16]
 80040d8:	e027      	b.n	800412a <HAL_RCC_GetSysClockFreq+0x86>
 80040da:	68fb      	ldr	r3, [r7, #12]
 80040dc:	0c9b      	lsrs	r3, r3, #18
 80040de:	f003 030f 	and.w	r3, r3, #15
 80040e2:	4a17      	ldr	r2, [pc, #92]	@ (8004140 <HAL_RCC_GetSysClockFreq+0x9c>)
 80040e4:	5cd3      	ldrb	r3, [r2, r3]
 80040e6:	607b      	str	r3, [r7, #4]
 80040e8:	68fb      	ldr	r3, [r7, #12]
 80040ea:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80040ee:	2b00      	cmp	r3, #0
 80040f0:	d010      	beq.n	8004114 <HAL_RCC_GetSysClockFreq+0x70>
 80040f2:	4b11      	ldr	r3, [pc, #68]	@ (8004138 <HAL_RCC_GetSysClockFreq+0x94>)
 80040f4:	685b      	ldr	r3, [r3, #4]
 80040f6:	0c5b      	lsrs	r3, r3, #17
 80040f8:	f003 0301 	and.w	r3, r3, #1
 80040fc:	4a11      	ldr	r2, [pc, #68]	@ (8004144 <HAL_RCC_GetSysClockFreq+0xa0>)
 80040fe:	5cd3      	ldrb	r3, [r2, r3]
 8004100:	60bb      	str	r3, [r7, #8]
 8004102:	687b      	ldr	r3, [r7, #4]
 8004104:	4a0d      	ldr	r2, [pc, #52]	@ (800413c <HAL_RCC_GetSysClockFreq+0x98>)
 8004106:	fb03 f202 	mul.w	r2, r3, r2
 800410a:	68bb      	ldr	r3, [r7, #8]
 800410c:	fbb2 f3f3 	udiv	r3, r2, r3
 8004110:	617b      	str	r3, [r7, #20]
 8004112:	e004      	b.n	800411e <HAL_RCC_GetSysClockFreq+0x7a>
 8004114:	687b      	ldr	r3, [r7, #4]
 8004116:	4a0c      	ldr	r2, [pc, #48]	@ (8004148 <HAL_RCC_GetSysClockFreq+0xa4>)
 8004118:	fb02 f303 	mul.w	r3, r2, r3
 800411c:	617b      	str	r3, [r7, #20]
 800411e:	697b      	ldr	r3, [r7, #20]
 8004120:	613b      	str	r3, [r7, #16]
 8004122:	e002      	b.n	800412a <HAL_RCC_GetSysClockFreq+0x86>
 8004124:	4b05      	ldr	r3, [pc, #20]	@ (800413c <HAL_RCC_GetSysClockFreq+0x98>)
 8004126:	613b      	str	r3, [r7, #16]
 8004128:	bf00      	nop
 800412a:	693b      	ldr	r3, [r7, #16]
 800412c:	4618      	mov	r0, r3
 800412e:	371c      	adds	r7, #28
 8004130:	46bd      	mov	sp, r7
 8004132:	bc80      	pop	{r7}
 8004134:	4770      	bx	lr
 8004136:	bf00      	nop
 8004138:	40021000 	.word	0x40021000
 800413c:	007a1200 	.word	0x007a1200
 8004140:	080090ec 	.word	0x080090ec
 8004144:	080090fc 	.word	0x080090fc
 8004148:	003d0900 	.word	0x003d0900

0800414c <HAL_RCC_GetHCLKFreq>:
 800414c:	b480      	push	{r7}
 800414e:	af00      	add	r7, sp, #0
 8004150:	4b02      	ldr	r3, [pc, #8]	@ (800415c <HAL_RCC_GetHCLKFreq+0x10>)
 8004152:	681b      	ldr	r3, [r3, #0]
 8004154:	4618      	mov	r0, r3
 8004156:	46bd      	mov	sp, r7
 8004158:	bc80      	pop	{r7}
 800415a:	4770      	bx	lr
 800415c:	20000014 	.word	0x20000014

08004160 <HAL_RCC_GetPCLK1Freq>:
 8004160:	b580      	push	{r7, lr}
 8004162:	af00      	add	r7, sp, #0
 8004164:	f7ff fff2 	bl	800414c <HAL_RCC_GetHCLKFreq>
 8004168:	4602      	mov	r2, r0
 800416a:	4b05      	ldr	r3, [pc, #20]	@ (8004180 <HAL_RCC_GetPCLK1Freq+0x20>)
 800416c:	685b      	ldr	r3, [r3, #4]
 800416e:	0a1b      	lsrs	r3, r3, #8
 8004170:	f003 0307 	and.w	r3, r3, #7
 8004174:	4903      	ldr	r1, [pc, #12]	@ (8004184 <HAL_RCC_GetPCLK1Freq+0x24>)
 8004176:	5ccb      	ldrb	r3, [r1, r3]
 8004178:	fa22 f303 	lsr.w	r3, r2, r3
 800417c:	4618      	mov	r0, r3
 800417e:	bd80      	pop	{r7, pc}
 8004180:	40021000 	.word	0x40021000
 8004184:	080090e4 	.word	0x080090e4

08004188 <HAL_RCC_GetPCLK2Freq>:
 8004188:	b580      	push	{r7, lr}
 800418a:	af00      	add	r7, sp, #0
 800418c:	f7ff ffde 	bl	800414c <HAL_RCC_GetHCLKFreq>
 8004190:	4602      	mov	r2, r0
 8004192:	4b05      	ldr	r3, [pc, #20]	@ (80041a8 <HAL_RCC_GetPCLK2Freq+0x20>)
 8004194:	685b      	ldr	r3, [r3, #4]
 8004196:	0adb      	lsrs	r3, r3, #11
 8004198:	f003 0307 	and.w	r3, r3, #7
 800419c:	4903      	ldr	r1, [pc, #12]	@ (80041ac <HAL_RCC_GetPCLK2Freq+0x24>)
 800419e:	5ccb      	ldrb	r3, [r1, r3]
 80041a0:	fa22 f303 	lsr.w	r3, r2, r3
 80041a4:	4618      	mov	r0, r3
 80041a6:	bd80      	pop	{r7, pc}
 80041a8:	40021000 	.word	0x40021000
 80041ac:	080090e4 	.word	0x080090e4

080041b0 <RCC_Delay>:
 80041b0:	b480      	push	{r7}
 80041b2:	b085      	sub	sp, #20
 80041b4:	af00      	add	r7, sp, #0
 80041b6:	6078      	str	r0, [r7, #4]
 80041b8:	4b0a      	ldr	r3, [pc, #40]	@ (80041e4 <RCC_Delay+0x34>)
 80041ba:	681b      	ldr	r3, [r3, #0]
 80041bc:	4a0a      	ldr	r2, [pc, #40]	@ (80041e8 <RCC_Delay+0x38>)
 80041be:	fba2 2303 	umull	r2, r3, r2, r3
 80041c2:	0a5b      	lsrs	r3, r3, #9
 80041c4:	687a      	ldr	r2, [r7, #4]
 80041c6:	fb02 f303 	mul.w	r3, r2, r3
 80041ca:	60fb      	str	r3, [r7, #12]
 80041cc:	bf00      	nop
 80041ce:	68fb      	ldr	r3, [r7, #12]
 80041d0:	1e5a      	subs	r2, r3, #1
 80041d2:	60fa      	str	r2, [r7, #12]
 80041d4:	2b00      	cmp	r3, #0
 80041d6:	d1f9      	bne.n	80041cc <RCC_Delay+0x1c>
 80041d8:	bf00      	nop
 80041da:	bf00      	nop
 80041dc:	3714      	adds	r7, #20
 80041de:	46bd      	mov	sp, r7
 80041e0:	bc80      	pop	{r7}
 80041e2:	4770      	bx	lr
 80041e4:	20000014 	.word	0x20000014
 80041e8:	10624dd3 	.word	0x10624dd3

080041ec <HAL_SPI_Init>:
 80041ec:	b580      	push	{r7, lr}
 80041ee:	b082      	sub	sp, #8
 80041f0:	af00      	add	r7, sp, #0
 80041f2:	6078      	str	r0, [r7, #4]
 80041f4:	687b      	ldr	r3, [r7, #4]
 80041f6:	2b00      	cmp	r3, #0
 80041f8:	d101      	bne.n	80041fe <HAL_SPI_Init+0x12>
 80041fa:	2301      	movs	r3, #1
 80041fc:	e076      	b.n	80042ec <HAL_SPI_Init+0x100>
 80041fe:	687b      	ldr	r3, [r7, #4]
 8004200:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004202:	2b00      	cmp	r3, #0
 8004204:	d108      	bne.n	8004218 <HAL_SPI_Init+0x2c>
 8004206:	687b      	ldr	r3, [r7, #4]
 8004208:	685b      	ldr	r3, [r3, #4]
 800420a:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800420e:	d009      	beq.n	8004224 <HAL_SPI_Init+0x38>
 8004210:	687b      	ldr	r3, [r7, #4]
 8004212:	2200      	movs	r2, #0
 8004214:	61da      	str	r2, [r3, #28]
 8004216:	e005      	b.n	8004224 <HAL_SPI_Init+0x38>
 8004218:	687b      	ldr	r3, [r7, #4]
 800421a:	2200      	movs	r2, #0
 800421c:	611a      	str	r2, [r3, #16]
 800421e:	687b      	ldr	r3, [r7, #4]
 8004220:	2200      	movs	r2, #0
 8004222:	615a      	str	r2, [r3, #20]
 8004224:	687b      	ldr	r3, [r7, #4]
 8004226:	2200      	movs	r2, #0
 8004228:	629a      	str	r2, [r3, #40]	@ 0x28
 800422a:	687b      	ldr	r3, [r7, #4]
 800422c:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8004230:	b2db      	uxtb	r3, r3
 8004232:	2b00      	cmp	r3, #0
 8004234:	d106      	bne.n	8004244 <HAL_SPI_Init+0x58>
 8004236:	687b      	ldr	r3, [r7, #4]
 8004238:	2200      	movs	r2, #0
 800423a:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 800423e:	6878      	ldr	r0, [r7, #4]
 8004240:	f7fe fbc2 	bl	80029c8 <HAL_SPI_MspInit>
 8004244:	687b      	ldr	r3, [r7, #4]
 8004246:	2202      	movs	r2, #2
 8004248:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 800424c:	687b      	ldr	r3, [r7, #4]
 800424e:	681b      	ldr	r3, [r3, #0]
 8004250:	681a      	ldr	r2, [r3, #0]
 8004252:	687b      	ldr	r3, [r7, #4]
 8004254:	681b      	ldr	r3, [r3, #0]
 8004256:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800425a:	601a      	str	r2, [r3, #0]
 800425c:	687b      	ldr	r3, [r7, #4]
 800425e:	685b      	ldr	r3, [r3, #4]
 8004260:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 8004264:	687b      	ldr	r3, [r7, #4]
 8004266:	689b      	ldr	r3, [r3, #8]
 8004268:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 800426c:	431a      	orrs	r2, r3
 800426e:	687b      	ldr	r3, [r7, #4]
 8004270:	68db      	ldr	r3, [r3, #12]
 8004272:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8004276:	431a      	orrs	r2, r3
 8004278:	687b      	ldr	r3, [r7, #4]
 800427a:	691b      	ldr	r3, [r3, #16]
 800427c:	f003 0302 	and.w	r3, r3, #2
 8004280:	431a      	orrs	r2, r3
 8004282:	687b      	ldr	r3, [r7, #4]
 8004284:	695b      	ldr	r3, [r3, #20]
 8004286:	f003 0301 	and.w	r3, r3, #1
 800428a:	431a      	orrs	r2, r3
 800428c:	687b      	ldr	r3, [r7, #4]
 800428e:	699b      	ldr	r3, [r3, #24]
 8004290:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8004294:	431a      	orrs	r2, r3
 8004296:	687b      	ldr	r3, [r7, #4]
 8004298:	69db      	ldr	r3, [r3, #28]
 800429a:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 800429e:	431a      	orrs	r2, r3
 80042a0:	687b      	ldr	r3, [r7, #4]
 80042a2:	6a1b      	ldr	r3, [r3, #32]
 80042a4:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80042a8:	ea42 0103 	orr.w	r1, r2, r3
 80042ac:	687b      	ldr	r3, [r7, #4]
 80042ae:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80042b0:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 80042b4:	687b      	ldr	r3, [r7, #4]
 80042b6:	681b      	ldr	r3, [r3, #0]
 80042b8:	430a      	orrs	r2, r1
 80042ba:	601a      	str	r2, [r3, #0]
 80042bc:	687b      	ldr	r3, [r7, #4]
 80042be:	699b      	ldr	r3, [r3, #24]
 80042c0:	0c1a      	lsrs	r2, r3, #16
 80042c2:	687b      	ldr	r3, [r7, #4]
 80042c4:	681b      	ldr	r3, [r3, #0]
 80042c6:	f002 0204 	and.w	r2, r2, #4
 80042ca:	605a      	str	r2, [r3, #4]
 80042cc:	687b      	ldr	r3, [r7, #4]
 80042ce:	681b      	ldr	r3, [r3, #0]
 80042d0:	69da      	ldr	r2, [r3, #28]
 80042d2:	687b      	ldr	r3, [r7, #4]
 80042d4:	681b      	ldr	r3, [r3, #0]
 80042d6:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80042da:	61da      	str	r2, [r3, #28]
 80042dc:	687b      	ldr	r3, [r7, #4]
 80042de:	2200      	movs	r2, #0
 80042e0:	655a      	str	r2, [r3, #84]	@ 0x54
 80042e2:	687b      	ldr	r3, [r7, #4]
 80042e4:	2201      	movs	r2, #1
 80042e6:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80042ea:	2300      	movs	r3, #0
 80042ec:	4618      	mov	r0, r3
 80042ee:	3708      	adds	r7, #8
 80042f0:	46bd      	mov	sp, r7
 80042f2:	bd80      	pop	{r7, pc}

080042f4 <HAL_SPI_TransmitReceive>:
 80042f4:	b580      	push	{r7, lr}
 80042f6:	b08a      	sub	sp, #40	@ 0x28
 80042f8:	af00      	add	r7, sp, #0
 80042fa:	60f8      	str	r0, [r7, #12]
 80042fc:	60b9      	str	r1, [r7, #8]
 80042fe:	607a      	str	r2, [r7, #4]
 8004300:	807b      	strh	r3, [r7, #2]
 8004302:	2301      	movs	r3, #1
 8004304:	627b      	str	r3, [r7, #36]	@ 0x24
 8004306:	f7fe fe53 	bl	8002fb0 <HAL_GetTick>
 800430a:	6238      	str	r0, [r7, #32]
 800430c:	68fb      	ldr	r3, [r7, #12]
 800430e:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8004312:	77fb      	strb	r3, [r7, #31]
 8004314:	68fb      	ldr	r3, [r7, #12]
 8004316:	685b      	ldr	r3, [r3, #4]
 8004318:	61bb      	str	r3, [r7, #24]
 800431a:	887b      	ldrh	r3, [r7, #2]
 800431c:	82fb      	strh	r3, [r7, #22]
 800431e:	7ffb      	ldrb	r3, [r7, #31]
 8004320:	2b01      	cmp	r3, #1
 8004322:	d00c      	beq.n	800433e <HAL_SPI_TransmitReceive+0x4a>
 8004324:	69bb      	ldr	r3, [r7, #24]
 8004326:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800432a:	d106      	bne.n	800433a <HAL_SPI_TransmitReceive+0x46>
 800432c:	68fb      	ldr	r3, [r7, #12]
 800432e:	689b      	ldr	r3, [r3, #8]
 8004330:	2b00      	cmp	r3, #0
 8004332:	d102      	bne.n	800433a <HAL_SPI_TransmitReceive+0x46>
 8004334:	7ffb      	ldrb	r3, [r7, #31]
 8004336:	2b04      	cmp	r3, #4
 8004338:	d001      	beq.n	800433e <HAL_SPI_TransmitReceive+0x4a>
 800433a:	2302      	movs	r3, #2
 800433c:	e17f      	b.n	800463e <HAL_SPI_TransmitReceive+0x34a>
 800433e:	68bb      	ldr	r3, [r7, #8]
 8004340:	2b00      	cmp	r3, #0
 8004342:	d005      	beq.n	8004350 <HAL_SPI_TransmitReceive+0x5c>
 8004344:	687b      	ldr	r3, [r7, #4]
 8004346:	2b00      	cmp	r3, #0
 8004348:	d002      	beq.n	8004350 <HAL_SPI_TransmitReceive+0x5c>
 800434a:	887b      	ldrh	r3, [r7, #2]
 800434c:	2b00      	cmp	r3, #0
 800434e:	d101      	bne.n	8004354 <HAL_SPI_TransmitReceive+0x60>
 8004350:	2301      	movs	r3, #1
 8004352:	e174      	b.n	800463e <HAL_SPI_TransmitReceive+0x34a>
 8004354:	68fb      	ldr	r3, [r7, #12]
 8004356:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 800435a:	2b01      	cmp	r3, #1
 800435c:	d101      	bne.n	8004362 <HAL_SPI_TransmitReceive+0x6e>
 800435e:	2302      	movs	r3, #2
 8004360:	e16d      	b.n	800463e <HAL_SPI_TransmitReceive+0x34a>
 8004362:	68fb      	ldr	r3, [r7, #12]
 8004364:	2201      	movs	r2, #1
 8004366:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 800436a:	68fb      	ldr	r3, [r7, #12]
 800436c:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8004370:	b2db      	uxtb	r3, r3
 8004372:	2b04      	cmp	r3, #4
 8004374:	d003      	beq.n	800437e <HAL_SPI_TransmitReceive+0x8a>
 8004376:	68fb      	ldr	r3, [r7, #12]
 8004378:	2205      	movs	r2, #5
 800437a:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 800437e:	68fb      	ldr	r3, [r7, #12]
 8004380:	2200      	movs	r2, #0
 8004382:	655a      	str	r2, [r3, #84]	@ 0x54
 8004384:	68fb      	ldr	r3, [r7, #12]
 8004386:	687a      	ldr	r2, [r7, #4]
 8004388:	639a      	str	r2, [r3, #56]	@ 0x38
 800438a:	68fb      	ldr	r3, [r7, #12]
 800438c:	887a      	ldrh	r2, [r7, #2]
 800438e:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8004390:	68fb      	ldr	r3, [r7, #12]
 8004392:	887a      	ldrh	r2, [r7, #2]
 8004394:	879a      	strh	r2, [r3, #60]	@ 0x3c
 8004396:	68fb      	ldr	r3, [r7, #12]
 8004398:	68ba      	ldr	r2, [r7, #8]
 800439a:	631a      	str	r2, [r3, #48]	@ 0x30
 800439c:	68fb      	ldr	r3, [r7, #12]
 800439e:	887a      	ldrh	r2, [r7, #2]
 80043a0:	86da      	strh	r2, [r3, #54]	@ 0x36
 80043a2:	68fb      	ldr	r3, [r7, #12]
 80043a4:	887a      	ldrh	r2, [r7, #2]
 80043a6:	869a      	strh	r2, [r3, #52]	@ 0x34
 80043a8:	68fb      	ldr	r3, [r7, #12]
 80043aa:	2200      	movs	r2, #0
 80043ac:	641a      	str	r2, [r3, #64]	@ 0x40
 80043ae:	68fb      	ldr	r3, [r7, #12]
 80043b0:	2200      	movs	r2, #0
 80043b2:	645a      	str	r2, [r3, #68]	@ 0x44
 80043b4:	68fb      	ldr	r3, [r7, #12]
 80043b6:	681b      	ldr	r3, [r3, #0]
 80043b8:	681b      	ldr	r3, [r3, #0]
 80043ba:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80043be:	2b40      	cmp	r3, #64	@ 0x40
 80043c0:	d007      	beq.n	80043d2 <HAL_SPI_TransmitReceive+0xde>
 80043c2:	68fb      	ldr	r3, [r7, #12]
 80043c4:	681b      	ldr	r3, [r3, #0]
 80043c6:	681a      	ldr	r2, [r3, #0]
 80043c8:	68fb      	ldr	r3, [r7, #12]
 80043ca:	681b      	ldr	r3, [r3, #0]
 80043cc:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80043d0:	601a      	str	r2, [r3, #0]
 80043d2:	68fb      	ldr	r3, [r7, #12]
 80043d4:	68db      	ldr	r3, [r3, #12]
 80043d6:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 80043da:	d17e      	bne.n	80044da <HAL_SPI_TransmitReceive+0x1e6>
 80043dc:	68fb      	ldr	r3, [r7, #12]
 80043de:	685b      	ldr	r3, [r3, #4]
 80043e0:	2b00      	cmp	r3, #0
 80043e2:	d002      	beq.n	80043ea <HAL_SPI_TransmitReceive+0xf6>
 80043e4:	8afb      	ldrh	r3, [r7, #22]
 80043e6:	2b01      	cmp	r3, #1
 80043e8:	d16c      	bne.n	80044c4 <HAL_SPI_TransmitReceive+0x1d0>
 80043ea:	68fb      	ldr	r3, [r7, #12]
 80043ec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80043ee:	881a      	ldrh	r2, [r3, #0]
 80043f0:	68fb      	ldr	r3, [r7, #12]
 80043f2:	681b      	ldr	r3, [r3, #0]
 80043f4:	60da      	str	r2, [r3, #12]
 80043f6:	68fb      	ldr	r3, [r7, #12]
 80043f8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80043fa:	1c9a      	adds	r2, r3, #2
 80043fc:	68fb      	ldr	r3, [r7, #12]
 80043fe:	631a      	str	r2, [r3, #48]	@ 0x30
 8004400:	68fb      	ldr	r3, [r7, #12]
 8004402:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8004404:	b29b      	uxth	r3, r3
 8004406:	3b01      	subs	r3, #1
 8004408:	b29a      	uxth	r2, r3
 800440a:	68fb      	ldr	r3, [r7, #12]
 800440c:	86da      	strh	r2, [r3, #54]	@ 0x36
 800440e:	e059      	b.n	80044c4 <HAL_SPI_TransmitReceive+0x1d0>
 8004410:	68fb      	ldr	r3, [r7, #12]
 8004412:	681b      	ldr	r3, [r3, #0]
 8004414:	689b      	ldr	r3, [r3, #8]
 8004416:	f003 0302 	and.w	r3, r3, #2
 800441a:	2b02      	cmp	r3, #2
 800441c:	d11b      	bne.n	8004456 <HAL_SPI_TransmitReceive+0x162>
 800441e:	68fb      	ldr	r3, [r7, #12]
 8004420:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8004422:	b29b      	uxth	r3, r3
 8004424:	2b00      	cmp	r3, #0
 8004426:	d016      	beq.n	8004456 <HAL_SPI_TransmitReceive+0x162>
 8004428:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800442a:	2b01      	cmp	r3, #1
 800442c:	d113      	bne.n	8004456 <HAL_SPI_TransmitReceive+0x162>
 800442e:	68fb      	ldr	r3, [r7, #12]
 8004430:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004432:	881a      	ldrh	r2, [r3, #0]
 8004434:	68fb      	ldr	r3, [r7, #12]
 8004436:	681b      	ldr	r3, [r3, #0]
 8004438:	60da      	str	r2, [r3, #12]
 800443a:	68fb      	ldr	r3, [r7, #12]
 800443c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800443e:	1c9a      	adds	r2, r3, #2
 8004440:	68fb      	ldr	r3, [r7, #12]
 8004442:	631a      	str	r2, [r3, #48]	@ 0x30
 8004444:	68fb      	ldr	r3, [r7, #12]
 8004446:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8004448:	b29b      	uxth	r3, r3
 800444a:	3b01      	subs	r3, #1
 800444c:	b29a      	uxth	r2, r3
 800444e:	68fb      	ldr	r3, [r7, #12]
 8004450:	86da      	strh	r2, [r3, #54]	@ 0x36
 8004452:	2300      	movs	r3, #0
 8004454:	627b      	str	r3, [r7, #36]	@ 0x24
 8004456:	68fb      	ldr	r3, [r7, #12]
 8004458:	681b      	ldr	r3, [r3, #0]
 800445a:	689b      	ldr	r3, [r3, #8]
 800445c:	f003 0301 	and.w	r3, r3, #1
 8004460:	2b01      	cmp	r3, #1
 8004462:	d119      	bne.n	8004498 <HAL_SPI_TransmitReceive+0x1a4>
 8004464:	68fb      	ldr	r3, [r7, #12]
 8004466:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8004468:	b29b      	uxth	r3, r3
 800446a:	2b00      	cmp	r3, #0
 800446c:	d014      	beq.n	8004498 <HAL_SPI_TransmitReceive+0x1a4>
 800446e:	68fb      	ldr	r3, [r7, #12]
 8004470:	681b      	ldr	r3, [r3, #0]
 8004472:	68da      	ldr	r2, [r3, #12]
 8004474:	68fb      	ldr	r3, [r7, #12]
 8004476:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8004478:	b292      	uxth	r2, r2
 800447a:	801a      	strh	r2, [r3, #0]
 800447c:	68fb      	ldr	r3, [r7, #12]
 800447e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8004480:	1c9a      	adds	r2, r3, #2
 8004482:	68fb      	ldr	r3, [r7, #12]
 8004484:	639a      	str	r2, [r3, #56]	@ 0x38
 8004486:	68fb      	ldr	r3, [r7, #12]
 8004488:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800448a:	b29b      	uxth	r3, r3
 800448c:	3b01      	subs	r3, #1
 800448e:	b29a      	uxth	r2, r3
 8004490:	68fb      	ldr	r3, [r7, #12]
 8004492:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8004494:	2301      	movs	r3, #1
 8004496:	627b      	str	r3, [r7, #36]	@ 0x24
 8004498:	f7fe fd8a 	bl	8002fb0 <HAL_GetTick>
 800449c:	4602      	mov	r2, r0
 800449e:	6a3b      	ldr	r3, [r7, #32]
 80044a0:	1ad3      	subs	r3, r2, r3
 80044a2:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80044a4:	429a      	cmp	r2, r3
 80044a6:	d80d      	bhi.n	80044c4 <HAL_SPI_TransmitReceive+0x1d0>
 80044a8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80044aa:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 80044ae:	d009      	beq.n	80044c4 <HAL_SPI_TransmitReceive+0x1d0>
 80044b0:	68fb      	ldr	r3, [r7, #12]
 80044b2:	2201      	movs	r2, #1
 80044b4:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80044b8:	68fb      	ldr	r3, [r7, #12]
 80044ba:	2200      	movs	r2, #0
 80044bc:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80044c0:	2303      	movs	r3, #3
 80044c2:	e0bc      	b.n	800463e <HAL_SPI_TransmitReceive+0x34a>
 80044c4:	68fb      	ldr	r3, [r7, #12]
 80044c6:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80044c8:	b29b      	uxth	r3, r3
 80044ca:	2b00      	cmp	r3, #0
 80044cc:	d1a0      	bne.n	8004410 <HAL_SPI_TransmitReceive+0x11c>
 80044ce:	68fb      	ldr	r3, [r7, #12]
 80044d0:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80044d2:	b29b      	uxth	r3, r3
 80044d4:	2b00      	cmp	r3, #0
 80044d6:	d19b      	bne.n	8004410 <HAL_SPI_TransmitReceive+0x11c>
 80044d8:	e082      	b.n	80045e0 <HAL_SPI_TransmitReceive+0x2ec>
 80044da:	68fb      	ldr	r3, [r7, #12]
 80044dc:	685b      	ldr	r3, [r3, #4]
 80044de:	2b00      	cmp	r3, #0
 80044e0:	d002      	beq.n	80044e8 <HAL_SPI_TransmitReceive+0x1f4>
 80044e2:	8afb      	ldrh	r3, [r7, #22]
 80044e4:	2b01      	cmp	r3, #1
 80044e6:	d171      	bne.n	80045cc <HAL_SPI_TransmitReceive+0x2d8>
 80044e8:	68fb      	ldr	r3, [r7, #12]
 80044ea:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80044ec:	68fb      	ldr	r3, [r7, #12]
 80044ee:	681b      	ldr	r3, [r3, #0]
 80044f0:	330c      	adds	r3, #12
 80044f2:	7812      	ldrb	r2, [r2, #0]
 80044f4:	701a      	strb	r2, [r3, #0]
 80044f6:	68fb      	ldr	r3, [r7, #12]
 80044f8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80044fa:	1c5a      	adds	r2, r3, #1
 80044fc:	68fb      	ldr	r3, [r7, #12]
 80044fe:	631a      	str	r2, [r3, #48]	@ 0x30
 8004500:	68fb      	ldr	r3, [r7, #12]
 8004502:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8004504:	b29b      	uxth	r3, r3
 8004506:	3b01      	subs	r3, #1
 8004508:	b29a      	uxth	r2, r3
 800450a:	68fb      	ldr	r3, [r7, #12]
 800450c:	86da      	strh	r2, [r3, #54]	@ 0x36
 800450e:	e05d      	b.n	80045cc <HAL_SPI_TransmitReceive+0x2d8>
 8004510:	68fb      	ldr	r3, [r7, #12]
 8004512:	681b      	ldr	r3, [r3, #0]
 8004514:	689b      	ldr	r3, [r3, #8]
 8004516:	f003 0302 	and.w	r3, r3, #2
 800451a:	2b02      	cmp	r3, #2
 800451c:	d11c      	bne.n	8004558 <HAL_SPI_TransmitReceive+0x264>
 800451e:	68fb      	ldr	r3, [r7, #12]
 8004520:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8004522:	b29b      	uxth	r3, r3
 8004524:	2b00      	cmp	r3, #0
 8004526:	d017      	beq.n	8004558 <HAL_SPI_TransmitReceive+0x264>
 8004528:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800452a:	2b01      	cmp	r3, #1
 800452c:	d114      	bne.n	8004558 <HAL_SPI_TransmitReceive+0x264>
 800452e:	68fb      	ldr	r3, [r7, #12]
 8004530:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004532:	68fb      	ldr	r3, [r7, #12]
 8004534:	681b      	ldr	r3, [r3, #0]
 8004536:	330c      	adds	r3, #12
 8004538:	7812      	ldrb	r2, [r2, #0]
 800453a:	701a      	strb	r2, [r3, #0]
 800453c:	68fb      	ldr	r3, [r7, #12]
 800453e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004540:	1c5a      	adds	r2, r3, #1
 8004542:	68fb      	ldr	r3, [r7, #12]
 8004544:	631a      	str	r2, [r3, #48]	@ 0x30
 8004546:	68fb      	ldr	r3, [r7, #12]
 8004548:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800454a:	b29b      	uxth	r3, r3
 800454c:	3b01      	subs	r3, #1
 800454e:	b29a      	uxth	r2, r3
 8004550:	68fb      	ldr	r3, [r7, #12]
 8004552:	86da      	strh	r2, [r3, #54]	@ 0x36
 8004554:	2300      	movs	r3, #0
 8004556:	627b      	str	r3, [r7, #36]	@ 0x24
 8004558:	68fb      	ldr	r3, [r7, #12]
 800455a:	681b      	ldr	r3, [r3, #0]
 800455c:	689b      	ldr	r3, [r3, #8]
 800455e:	f003 0301 	and.w	r3, r3, #1
 8004562:	2b01      	cmp	r3, #1
 8004564:	d119      	bne.n	800459a <HAL_SPI_TransmitReceive+0x2a6>
 8004566:	68fb      	ldr	r3, [r7, #12]
 8004568:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800456a:	b29b      	uxth	r3, r3
 800456c:	2b00      	cmp	r3, #0
 800456e:	d014      	beq.n	800459a <HAL_SPI_TransmitReceive+0x2a6>
 8004570:	68fb      	ldr	r3, [r7, #12]
 8004572:	681b      	ldr	r3, [r3, #0]
 8004574:	68da      	ldr	r2, [r3, #12]
 8004576:	68fb      	ldr	r3, [r7, #12]
 8004578:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800457a:	b2d2      	uxtb	r2, r2
 800457c:	701a      	strb	r2, [r3, #0]
 800457e:	68fb      	ldr	r3, [r7, #12]
 8004580:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8004582:	1c5a      	adds	r2, r3, #1
 8004584:	68fb      	ldr	r3, [r7, #12]
 8004586:	639a      	str	r2, [r3, #56]	@ 0x38
 8004588:	68fb      	ldr	r3, [r7, #12]
 800458a:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800458c:	b29b      	uxth	r3, r3
 800458e:	3b01      	subs	r3, #1
 8004590:	b29a      	uxth	r2, r3
 8004592:	68fb      	ldr	r3, [r7, #12]
 8004594:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8004596:	2301      	movs	r3, #1
 8004598:	627b      	str	r3, [r7, #36]	@ 0x24
 800459a:	f7fe fd09 	bl	8002fb0 <HAL_GetTick>
 800459e:	4602      	mov	r2, r0
 80045a0:	6a3b      	ldr	r3, [r7, #32]
 80045a2:	1ad3      	subs	r3, r2, r3
 80045a4:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80045a6:	429a      	cmp	r2, r3
 80045a8:	d803      	bhi.n	80045b2 <HAL_SPI_TransmitReceive+0x2be>
 80045aa:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80045ac:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 80045b0:	d102      	bne.n	80045b8 <HAL_SPI_TransmitReceive+0x2c4>
 80045b2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80045b4:	2b00      	cmp	r3, #0
 80045b6:	d109      	bne.n	80045cc <HAL_SPI_TransmitReceive+0x2d8>
 80045b8:	68fb      	ldr	r3, [r7, #12]
 80045ba:	2201      	movs	r2, #1
 80045bc:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80045c0:	68fb      	ldr	r3, [r7, #12]
 80045c2:	2200      	movs	r2, #0
 80045c4:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80045c8:	2303      	movs	r3, #3
 80045ca:	e038      	b.n	800463e <HAL_SPI_TransmitReceive+0x34a>
 80045cc:	68fb      	ldr	r3, [r7, #12]
 80045ce:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80045d0:	b29b      	uxth	r3, r3
 80045d2:	2b00      	cmp	r3, #0
 80045d4:	d19c      	bne.n	8004510 <HAL_SPI_TransmitReceive+0x21c>
 80045d6:	68fb      	ldr	r3, [r7, #12]
 80045d8:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80045da:	b29b      	uxth	r3, r3
 80045dc:	2b00      	cmp	r3, #0
 80045de:	d197      	bne.n	8004510 <HAL_SPI_TransmitReceive+0x21c>
 80045e0:	6a3a      	ldr	r2, [r7, #32]
 80045e2:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 80045e4:	68f8      	ldr	r0, [r7, #12]
 80045e6:	f000 f9b1 	bl	800494c <SPI_EndRxTxTransaction>
 80045ea:	4603      	mov	r3, r0
 80045ec:	2b00      	cmp	r3, #0
 80045ee:	d008      	beq.n	8004602 <HAL_SPI_TransmitReceive+0x30e>
 80045f0:	68fb      	ldr	r3, [r7, #12]
 80045f2:	2220      	movs	r2, #32
 80045f4:	655a      	str	r2, [r3, #84]	@ 0x54
 80045f6:	68fb      	ldr	r3, [r7, #12]
 80045f8:	2200      	movs	r2, #0
 80045fa:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80045fe:	2301      	movs	r3, #1
 8004600:	e01d      	b.n	800463e <HAL_SPI_TransmitReceive+0x34a>
 8004602:	68fb      	ldr	r3, [r7, #12]
 8004604:	689b      	ldr	r3, [r3, #8]
 8004606:	2b00      	cmp	r3, #0
 8004608:	d10a      	bne.n	8004620 <HAL_SPI_TransmitReceive+0x32c>
 800460a:	2300      	movs	r3, #0
 800460c:	613b      	str	r3, [r7, #16]
 800460e:	68fb      	ldr	r3, [r7, #12]
 8004610:	681b      	ldr	r3, [r3, #0]
 8004612:	68db      	ldr	r3, [r3, #12]
 8004614:	613b      	str	r3, [r7, #16]
 8004616:	68fb      	ldr	r3, [r7, #12]
 8004618:	681b      	ldr	r3, [r3, #0]
 800461a:	689b      	ldr	r3, [r3, #8]
 800461c:	613b      	str	r3, [r7, #16]
 800461e:	693b      	ldr	r3, [r7, #16]
 8004620:	68fb      	ldr	r3, [r7, #12]
 8004622:	2201      	movs	r2, #1
 8004624:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8004628:	68fb      	ldr	r3, [r7, #12]
 800462a:	2200      	movs	r2, #0
 800462c:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8004630:	68fb      	ldr	r3, [r7, #12]
 8004632:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004634:	2b00      	cmp	r3, #0
 8004636:	d001      	beq.n	800463c <HAL_SPI_TransmitReceive+0x348>
 8004638:	2301      	movs	r3, #1
 800463a:	e000      	b.n	800463e <HAL_SPI_TransmitReceive+0x34a>
 800463c:	2300      	movs	r3, #0
 800463e:	4618      	mov	r0, r3
 8004640:	3728      	adds	r7, #40	@ 0x28
 8004642:	46bd      	mov	sp, r7
 8004644:	bd80      	pop	{r7, pc}
	...

08004648 <HAL_SPI_IRQHandler>:
 8004648:	b580      	push	{r7, lr}
 800464a:	b088      	sub	sp, #32
 800464c:	af00      	add	r7, sp, #0
 800464e:	6078      	str	r0, [r7, #4]
 8004650:	687b      	ldr	r3, [r7, #4]
 8004652:	681b      	ldr	r3, [r3, #0]
 8004654:	685b      	ldr	r3, [r3, #4]
 8004656:	61fb      	str	r3, [r7, #28]
 8004658:	687b      	ldr	r3, [r7, #4]
 800465a:	681b      	ldr	r3, [r3, #0]
 800465c:	689b      	ldr	r3, [r3, #8]
 800465e:	61bb      	str	r3, [r7, #24]
 8004660:	69bb      	ldr	r3, [r7, #24]
 8004662:	099b      	lsrs	r3, r3, #6
 8004664:	f003 0301 	and.w	r3, r3, #1
 8004668:	2b00      	cmp	r3, #0
 800466a:	d10f      	bne.n	800468c <HAL_SPI_IRQHandler+0x44>
 800466c:	69bb      	ldr	r3, [r7, #24]
 800466e:	f003 0301 	and.w	r3, r3, #1
 8004672:	2b00      	cmp	r3, #0
 8004674:	d00a      	beq.n	800468c <HAL_SPI_IRQHandler+0x44>
 8004676:	69fb      	ldr	r3, [r7, #28]
 8004678:	099b      	lsrs	r3, r3, #6
 800467a:	f003 0301 	and.w	r3, r3, #1
 800467e:	2b00      	cmp	r3, #0
 8004680:	d004      	beq.n	800468c <HAL_SPI_IRQHandler+0x44>
 8004682:	687b      	ldr	r3, [r7, #4]
 8004684:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004686:	6878      	ldr	r0, [r7, #4]
 8004688:	4798      	blx	r3
 800468a:	e0be      	b.n	800480a <HAL_SPI_IRQHandler+0x1c2>
 800468c:	69bb      	ldr	r3, [r7, #24]
 800468e:	085b      	lsrs	r3, r3, #1
 8004690:	f003 0301 	and.w	r3, r3, #1
 8004694:	2b00      	cmp	r3, #0
 8004696:	d00a      	beq.n	80046ae <HAL_SPI_IRQHandler+0x66>
 8004698:	69fb      	ldr	r3, [r7, #28]
 800469a:	09db      	lsrs	r3, r3, #7
 800469c:	f003 0301 	and.w	r3, r3, #1
 80046a0:	2b00      	cmp	r3, #0
 80046a2:	d004      	beq.n	80046ae <HAL_SPI_IRQHandler+0x66>
 80046a4:	687b      	ldr	r3, [r7, #4]
 80046a6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80046a8:	6878      	ldr	r0, [r7, #4]
 80046aa:	4798      	blx	r3
 80046ac:	e0ad      	b.n	800480a <HAL_SPI_IRQHandler+0x1c2>
 80046ae:	69bb      	ldr	r3, [r7, #24]
 80046b0:	095b      	lsrs	r3, r3, #5
 80046b2:	f003 0301 	and.w	r3, r3, #1
 80046b6:	2b00      	cmp	r3, #0
 80046b8:	d106      	bne.n	80046c8 <HAL_SPI_IRQHandler+0x80>
 80046ba:	69bb      	ldr	r3, [r7, #24]
 80046bc:	099b      	lsrs	r3, r3, #6
 80046be:	f003 0301 	and.w	r3, r3, #1
 80046c2:	2b00      	cmp	r3, #0
 80046c4:	f000 80a1 	beq.w	800480a <HAL_SPI_IRQHandler+0x1c2>
 80046c8:	69fb      	ldr	r3, [r7, #28]
 80046ca:	095b      	lsrs	r3, r3, #5
 80046cc:	f003 0301 	and.w	r3, r3, #1
 80046d0:	2b00      	cmp	r3, #0
 80046d2:	f000 809a 	beq.w	800480a <HAL_SPI_IRQHandler+0x1c2>
 80046d6:	69bb      	ldr	r3, [r7, #24]
 80046d8:	099b      	lsrs	r3, r3, #6
 80046da:	f003 0301 	and.w	r3, r3, #1
 80046de:	2b00      	cmp	r3, #0
 80046e0:	d023      	beq.n	800472a <HAL_SPI_IRQHandler+0xe2>
 80046e2:	687b      	ldr	r3, [r7, #4]
 80046e4:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 80046e8:	b2db      	uxtb	r3, r3
 80046ea:	2b03      	cmp	r3, #3
 80046ec:	d011      	beq.n	8004712 <HAL_SPI_IRQHandler+0xca>
 80046ee:	687b      	ldr	r3, [r7, #4]
 80046f0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80046f2:	f043 0204 	orr.w	r2, r3, #4
 80046f6:	687b      	ldr	r3, [r7, #4]
 80046f8:	655a      	str	r2, [r3, #84]	@ 0x54
 80046fa:	2300      	movs	r3, #0
 80046fc:	617b      	str	r3, [r7, #20]
 80046fe:	687b      	ldr	r3, [r7, #4]
 8004700:	681b      	ldr	r3, [r3, #0]
 8004702:	68db      	ldr	r3, [r3, #12]
 8004704:	617b      	str	r3, [r7, #20]
 8004706:	687b      	ldr	r3, [r7, #4]
 8004708:	681b      	ldr	r3, [r3, #0]
 800470a:	689b      	ldr	r3, [r3, #8]
 800470c:	617b      	str	r3, [r7, #20]
 800470e:	697b      	ldr	r3, [r7, #20]
 8004710:	e00b      	b.n	800472a <HAL_SPI_IRQHandler+0xe2>
 8004712:	2300      	movs	r3, #0
 8004714:	613b      	str	r3, [r7, #16]
 8004716:	687b      	ldr	r3, [r7, #4]
 8004718:	681b      	ldr	r3, [r3, #0]
 800471a:	68db      	ldr	r3, [r3, #12]
 800471c:	613b      	str	r3, [r7, #16]
 800471e:	687b      	ldr	r3, [r7, #4]
 8004720:	681b      	ldr	r3, [r3, #0]
 8004722:	689b      	ldr	r3, [r3, #8]
 8004724:	613b      	str	r3, [r7, #16]
 8004726:	693b      	ldr	r3, [r7, #16]
 8004728:	e06f      	b.n	800480a <HAL_SPI_IRQHandler+0x1c2>
 800472a:	69bb      	ldr	r3, [r7, #24]
 800472c:	095b      	lsrs	r3, r3, #5
 800472e:	f003 0301 	and.w	r3, r3, #1
 8004732:	2b00      	cmp	r3, #0
 8004734:	d014      	beq.n	8004760 <HAL_SPI_IRQHandler+0x118>
 8004736:	687b      	ldr	r3, [r7, #4]
 8004738:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800473a:	f043 0201 	orr.w	r2, r3, #1
 800473e:	687b      	ldr	r3, [r7, #4]
 8004740:	655a      	str	r2, [r3, #84]	@ 0x54
 8004742:	2300      	movs	r3, #0
 8004744:	60fb      	str	r3, [r7, #12]
 8004746:	687b      	ldr	r3, [r7, #4]
 8004748:	681b      	ldr	r3, [r3, #0]
 800474a:	689b      	ldr	r3, [r3, #8]
 800474c:	60fb      	str	r3, [r7, #12]
 800474e:	687b      	ldr	r3, [r7, #4]
 8004750:	681b      	ldr	r3, [r3, #0]
 8004752:	681a      	ldr	r2, [r3, #0]
 8004754:	687b      	ldr	r3, [r7, #4]
 8004756:	681b      	ldr	r3, [r3, #0]
 8004758:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800475c:	601a      	str	r2, [r3, #0]
 800475e:	68fb      	ldr	r3, [r7, #12]
 8004760:	687b      	ldr	r3, [r7, #4]
 8004762:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004764:	2b00      	cmp	r3, #0
 8004766:	d04f      	beq.n	8004808 <HAL_SPI_IRQHandler+0x1c0>
 8004768:	687b      	ldr	r3, [r7, #4]
 800476a:	681b      	ldr	r3, [r3, #0]
 800476c:	685a      	ldr	r2, [r3, #4]
 800476e:	687b      	ldr	r3, [r7, #4]
 8004770:	681b      	ldr	r3, [r3, #0]
 8004772:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8004776:	605a      	str	r2, [r3, #4]
 8004778:	687b      	ldr	r3, [r7, #4]
 800477a:	2201      	movs	r2, #1
 800477c:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8004780:	69fb      	ldr	r3, [r7, #28]
 8004782:	f003 0302 	and.w	r3, r3, #2
 8004786:	2b00      	cmp	r3, #0
 8004788:	d104      	bne.n	8004794 <HAL_SPI_IRQHandler+0x14c>
 800478a:	69fb      	ldr	r3, [r7, #28]
 800478c:	f003 0301 	and.w	r3, r3, #1
 8004790:	2b00      	cmp	r3, #0
 8004792:	d034      	beq.n	80047fe <HAL_SPI_IRQHandler+0x1b6>
 8004794:	687b      	ldr	r3, [r7, #4]
 8004796:	681b      	ldr	r3, [r3, #0]
 8004798:	685a      	ldr	r2, [r3, #4]
 800479a:	687b      	ldr	r3, [r7, #4]
 800479c:	681b      	ldr	r3, [r3, #0]
 800479e:	f022 0203 	bic.w	r2, r2, #3
 80047a2:	605a      	str	r2, [r3, #4]
 80047a4:	687b      	ldr	r3, [r7, #4]
 80047a6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80047a8:	2b00      	cmp	r3, #0
 80047aa:	d011      	beq.n	80047d0 <HAL_SPI_IRQHandler+0x188>
 80047ac:	687b      	ldr	r3, [r7, #4]
 80047ae:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80047b0:	4a17      	ldr	r2, [pc, #92]	@ (8004810 <HAL_SPI_IRQHandler+0x1c8>)
 80047b2:	635a      	str	r2, [r3, #52]	@ 0x34
 80047b4:	687b      	ldr	r3, [r7, #4]
 80047b6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80047b8:	4618      	mov	r0, r3
 80047ba:	f7fe fdcb 	bl	8003354 <HAL_DMA_Abort_IT>
 80047be:	4603      	mov	r3, r0
 80047c0:	2b00      	cmp	r3, #0
 80047c2:	d005      	beq.n	80047d0 <HAL_SPI_IRQHandler+0x188>
 80047c4:	687b      	ldr	r3, [r7, #4]
 80047c6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80047c8:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 80047cc:	687b      	ldr	r3, [r7, #4]
 80047ce:	655a      	str	r2, [r3, #84]	@ 0x54
 80047d0:	687b      	ldr	r3, [r7, #4]
 80047d2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80047d4:	2b00      	cmp	r3, #0
 80047d6:	d016      	beq.n	8004806 <HAL_SPI_IRQHandler+0x1be>
 80047d8:	687b      	ldr	r3, [r7, #4]
 80047da:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80047dc:	4a0c      	ldr	r2, [pc, #48]	@ (8004810 <HAL_SPI_IRQHandler+0x1c8>)
 80047de:	635a      	str	r2, [r3, #52]	@ 0x34
 80047e0:	687b      	ldr	r3, [r7, #4]
 80047e2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80047e4:	4618      	mov	r0, r3
 80047e6:	f7fe fdb5 	bl	8003354 <HAL_DMA_Abort_IT>
 80047ea:	4603      	mov	r3, r0
 80047ec:	2b00      	cmp	r3, #0
 80047ee:	d00a      	beq.n	8004806 <HAL_SPI_IRQHandler+0x1be>
 80047f0:	687b      	ldr	r3, [r7, #4]
 80047f2:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80047f4:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 80047f8:	687b      	ldr	r3, [r7, #4]
 80047fa:	655a      	str	r2, [r3, #84]	@ 0x54
 80047fc:	e003      	b.n	8004806 <HAL_SPI_IRQHandler+0x1be>
 80047fe:	6878      	ldr	r0, [r7, #4]
 8004800:	f7fe f868 	bl	80028d4 <HAL_SPI_ErrorCallback>
 8004804:	e000      	b.n	8004808 <HAL_SPI_IRQHandler+0x1c0>
 8004806:	bf00      	nop
 8004808:	bf00      	nop
 800480a:	3720      	adds	r7, #32
 800480c:	46bd      	mov	sp, r7
 800480e:	bd80      	pop	{r7, pc}
 8004810:	08004815 	.word	0x08004815

08004814 <SPI_DMAAbortOnError>:
 8004814:	b580      	push	{r7, lr}
 8004816:	b084      	sub	sp, #16
 8004818:	af00      	add	r7, sp, #0
 800481a:	6078      	str	r0, [r7, #4]
 800481c:	687b      	ldr	r3, [r7, #4]
 800481e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004820:	60fb      	str	r3, [r7, #12]
 8004822:	68fb      	ldr	r3, [r7, #12]
 8004824:	2200      	movs	r2, #0
 8004826:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8004828:	68fb      	ldr	r3, [r7, #12]
 800482a:	2200      	movs	r2, #0
 800482c:	86da      	strh	r2, [r3, #54]	@ 0x36
 800482e:	68f8      	ldr	r0, [r7, #12]
 8004830:	f7fe f850 	bl	80028d4 <HAL_SPI_ErrorCallback>
 8004834:	bf00      	nop
 8004836:	3710      	adds	r7, #16
 8004838:	46bd      	mov	sp, r7
 800483a:	bd80      	pop	{r7, pc}

0800483c <SPI_WaitFlagStateUntilTimeout>:
 800483c:	b580      	push	{r7, lr}
 800483e:	b088      	sub	sp, #32
 8004840:	af00      	add	r7, sp, #0
 8004842:	60f8      	str	r0, [r7, #12]
 8004844:	60b9      	str	r1, [r7, #8]
 8004846:	603b      	str	r3, [r7, #0]
 8004848:	4613      	mov	r3, r2
 800484a:	71fb      	strb	r3, [r7, #7]
 800484c:	f7fe fbb0 	bl	8002fb0 <HAL_GetTick>
 8004850:	4602      	mov	r2, r0
 8004852:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004854:	1a9b      	subs	r3, r3, r2
 8004856:	683a      	ldr	r2, [r7, #0]
 8004858:	4413      	add	r3, r2
 800485a:	61fb      	str	r3, [r7, #28]
 800485c:	f7fe fba8 	bl	8002fb0 <HAL_GetTick>
 8004860:	61b8      	str	r0, [r7, #24]
 8004862:	4b39      	ldr	r3, [pc, #228]	@ (8004948 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8004864:	681b      	ldr	r3, [r3, #0]
 8004866:	015b      	lsls	r3, r3, #5
 8004868:	0d1b      	lsrs	r3, r3, #20
 800486a:	69fa      	ldr	r2, [r7, #28]
 800486c:	fb02 f303 	mul.w	r3, r2, r3
 8004870:	617b      	str	r3, [r7, #20]
 8004872:	e054      	b.n	800491e <SPI_WaitFlagStateUntilTimeout+0xe2>
 8004874:	683b      	ldr	r3, [r7, #0]
 8004876:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 800487a:	d050      	beq.n	800491e <SPI_WaitFlagStateUntilTimeout+0xe2>
 800487c:	f7fe fb98 	bl	8002fb0 <HAL_GetTick>
 8004880:	4602      	mov	r2, r0
 8004882:	69bb      	ldr	r3, [r7, #24]
 8004884:	1ad3      	subs	r3, r2, r3
 8004886:	69fa      	ldr	r2, [r7, #28]
 8004888:	429a      	cmp	r2, r3
 800488a:	d902      	bls.n	8004892 <SPI_WaitFlagStateUntilTimeout+0x56>
 800488c:	69fb      	ldr	r3, [r7, #28]
 800488e:	2b00      	cmp	r3, #0
 8004890:	d13d      	bne.n	800490e <SPI_WaitFlagStateUntilTimeout+0xd2>
 8004892:	68fb      	ldr	r3, [r7, #12]
 8004894:	681b      	ldr	r3, [r3, #0]
 8004896:	685a      	ldr	r2, [r3, #4]
 8004898:	68fb      	ldr	r3, [r7, #12]
 800489a:	681b      	ldr	r3, [r3, #0]
 800489c:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 80048a0:	605a      	str	r2, [r3, #4]
 80048a2:	68fb      	ldr	r3, [r7, #12]
 80048a4:	685b      	ldr	r3, [r3, #4]
 80048a6:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80048aa:	d111      	bne.n	80048d0 <SPI_WaitFlagStateUntilTimeout+0x94>
 80048ac:	68fb      	ldr	r3, [r7, #12]
 80048ae:	689b      	ldr	r3, [r3, #8]
 80048b0:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80048b4:	d004      	beq.n	80048c0 <SPI_WaitFlagStateUntilTimeout+0x84>
 80048b6:	68fb      	ldr	r3, [r7, #12]
 80048b8:	689b      	ldr	r3, [r3, #8]
 80048ba:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80048be:	d107      	bne.n	80048d0 <SPI_WaitFlagStateUntilTimeout+0x94>
 80048c0:	68fb      	ldr	r3, [r7, #12]
 80048c2:	681b      	ldr	r3, [r3, #0]
 80048c4:	681a      	ldr	r2, [r3, #0]
 80048c6:	68fb      	ldr	r3, [r7, #12]
 80048c8:	681b      	ldr	r3, [r3, #0]
 80048ca:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80048ce:	601a      	str	r2, [r3, #0]
 80048d0:	68fb      	ldr	r3, [r7, #12]
 80048d2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80048d4:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80048d8:	d10f      	bne.n	80048fa <SPI_WaitFlagStateUntilTimeout+0xbe>
 80048da:	68fb      	ldr	r3, [r7, #12]
 80048dc:	681b      	ldr	r3, [r3, #0]
 80048de:	681a      	ldr	r2, [r3, #0]
 80048e0:	68fb      	ldr	r3, [r7, #12]
 80048e2:	681b      	ldr	r3, [r3, #0]
 80048e4:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80048e8:	601a      	str	r2, [r3, #0]
 80048ea:	68fb      	ldr	r3, [r7, #12]
 80048ec:	681b      	ldr	r3, [r3, #0]
 80048ee:	681a      	ldr	r2, [r3, #0]
 80048f0:	68fb      	ldr	r3, [r7, #12]
 80048f2:	681b      	ldr	r3, [r3, #0]
 80048f4:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 80048f8:	601a      	str	r2, [r3, #0]
 80048fa:	68fb      	ldr	r3, [r7, #12]
 80048fc:	2201      	movs	r2, #1
 80048fe:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8004902:	68fb      	ldr	r3, [r7, #12]
 8004904:	2200      	movs	r2, #0
 8004906:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 800490a:	2303      	movs	r3, #3
 800490c:	e017      	b.n	800493e <SPI_WaitFlagStateUntilTimeout+0x102>
 800490e:	697b      	ldr	r3, [r7, #20]
 8004910:	2b00      	cmp	r3, #0
 8004912:	d101      	bne.n	8004918 <SPI_WaitFlagStateUntilTimeout+0xdc>
 8004914:	2300      	movs	r3, #0
 8004916:	61fb      	str	r3, [r7, #28]
 8004918:	697b      	ldr	r3, [r7, #20]
 800491a:	3b01      	subs	r3, #1
 800491c:	617b      	str	r3, [r7, #20]
 800491e:	68fb      	ldr	r3, [r7, #12]
 8004920:	681b      	ldr	r3, [r3, #0]
 8004922:	689a      	ldr	r2, [r3, #8]
 8004924:	68bb      	ldr	r3, [r7, #8]
 8004926:	4013      	ands	r3, r2
 8004928:	68ba      	ldr	r2, [r7, #8]
 800492a:	429a      	cmp	r2, r3
 800492c:	bf0c      	ite	eq
 800492e:	2301      	moveq	r3, #1
 8004930:	2300      	movne	r3, #0
 8004932:	b2db      	uxtb	r3, r3
 8004934:	461a      	mov	r2, r3
 8004936:	79fb      	ldrb	r3, [r7, #7]
 8004938:	429a      	cmp	r2, r3
 800493a:	d19b      	bne.n	8004874 <SPI_WaitFlagStateUntilTimeout+0x38>
 800493c:	2300      	movs	r3, #0
 800493e:	4618      	mov	r0, r3
 8004940:	3720      	adds	r7, #32
 8004942:	46bd      	mov	sp, r7
 8004944:	bd80      	pop	{r7, pc}
 8004946:	bf00      	nop
 8004948:	20000014 	.word	0x20000014

0800494c <SPI_EndRxTxTransaction>:
 800494c:	b580      	push	{r7, lr}
 800494e:	b086      	sub	sp, #24
 8004950:	af02      	add	r7, sp, #8
 8004952:	60f8      	str	r0, [r7, #12]
 8004954:	60b9      	str	r1, [r7, #8]
 8004956:	607a      	str	r2, [r7, #4]
 8004958:	687b      	ldr	r3, [r7, #4]
 800495a:	9300      	str	r3, [sp, #0]
 800495c:	68bb      	ldr	r3, [r7, #8]
 800495e:	2201      	movs	r2, #1
 8004960:	2102      	movs	r1, #2
 8004962:	68f8      	ldr	r0, [r7, #12]
 8004964:	f7ff ff6a 	bl	800483c <SPI_WaitFlagStateUntilTimeout>
 8004968:	4603      	mov	r3, r0
 800496a:	2b00      	cmp	r3, #0
 800496c:	d007      	beq.n	800497e <SPI_EndRxTxTransaction+0x32>
 800496e:	68fb      	ldr	r3, [r7, #12]
 8004970:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004972:	f043 0220 	orr.w	r2, r3, #32
 8004976:	68fb      	ldr	r3, [r7, #12]
 8004978:	655a      	str	r2, [r3, #84]	@ 0x54
 800497a:	2303      	movs	r3, #3
 800497c:	e013      	b.n	80049a6 <SPI_EndRxTxTransaction+0x5a>
 800497e:	687b      	ldr	r3, [r7, #4]
 8004980:	9300      	str	r3, [sp, #0]
 8004982:	68bb      	ldr	r3, [r7, #8]
 8004984:	2200      	movs	r2, #0
 8004986:	2180      	movs	r1, #128	@ 0x80
 8004988:	68f8      	ldr	r0, [r7, #12]
 800498a:	f7ff ff57 	bl	800483c <SPI_WaitFlagStateUntilTimeout>
 800498e:	4603      	mov	r3, r0
 8004990:	2b00      	cmp	r3, #0
 8004992:	d007      	beq.n	80049a4 <SPI_EndRxTxTransaction+0x58>
 8004994:	68fb      	ldr	r3, [r7, #12]
 8004996:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004998:	f043 0220 	orr.w	r2, r3, #32
 800499c:	68fb      	ldr	r3, [r7, #12]
 800499e:	655a      	str	r2, [r3, #84]	@ 0x54
 80049a0:	2303      	movs	r3, #3
 80049a2:	e000      	b.n	80049a6 <SPI_EndRxTxTransaction+0x5a>
 80049a4:	2300      	movs	r3, #0
 80049a6:	4618      	mov	r0, r3
 80049a8:	3710      	adds	r7, #16
 80049aa:	46bd      	mov	sp, r7
 80049ac:	bd80      	pop	{r7, pc}

080049ae <HAL_TIM_PWM_Init>:
 80049ae:	b580      	push	{r7, lr}
 80049b0:	b082      	sub	sp, #8
 80049b2:	af00      	add	r7, sp, #0
 80049b4:	6078      	str	r0, [r7, #4]
 80049b6:	687b      	ldr	r3, [r7, #4]
 80049b8:	2b00      	cmp	r3, #0
 80049ba:	d101      	bne.n	80049c0 <HAL_TIM_PWM_Init+0x12>
 80049bc:	2301      	movs	r3, #1
 80049be:	e041      	b.n	8004a44 <HAL_TIM_PWM_Init+0x96>
 80049c0:	687b      	ldr	r3, [r7, #4]
 80049c2:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80049c6:	b2db      	uxtb	r3, r3
 80049c8:	2b00      	cmp	r3, #0
 80049ca:	d106      	bne.n	80049da <HAL_TIM_PWM_Init+0x2c>
 80049cc:	687b      	ldr	r3, [r7, #4]
 80049ce:	2200      	movs	r2, #0
 80049d0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80049d4:	6878      	ldr	r0, [r7, #4]
 80049d6:	f7fe f8a1 	bl	8002b1c <HAL_TIM_PWM_MspInit>
 80049da:	687b      	ldr	r3, [r7, #4]
 80049dc:	2202      	movs	r2, #2
 80049de:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80049e2:	687b      	ldr	r3, [r7, #4]
 80049e4:	681a      	ldr	r2, [r3, #0]
 80049e6:	687b      	ldr	r3, [r7, #4]
 80049e8:	3304      	adds	r3, #4
 80049ea:	4619      	mov	r1, r3
 80049ec:	4610      	mov	r0, r2
 80049ee:	f000 fa0d 	bl	8004e0c <TIM_Base_SetConfig>
 80049f2:	687b      	ldr	r3, [r7, #4]
 80049f4:	2201      	movs	r2, #1
 80049f6:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 80049fa:	687b      	ldr	r3, [r7, #4]
 80049fc:	2201      	movs	r2, #1
 80049fe:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004a02:	687b      	ldr	r3, [r7, #4]
 8004a04:	2201      	movs	r2, #1
 8004a06:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8004a0a:	687b      	ldr	r3, [r7, #4]
 8004a0c:	2201      	movs	r2, #1
 8004a0e:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8004a12:	687b      	ldr	r3, [r7, #4]
 8004a14:	2201      	movs	r2, #1
 8004a16:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004a1a:	687b      	ldr	r3, [r7, #4]
 8004a1c:	2201      	movs	r2, #1
 8004a1e:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004a22:	687b      	ldr	r3, [r7, #4]
 8004a24:	2201      	movs	r2, #1
 8004a26:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8004a2a:	687b      	ldr	r3, [r7, #4]
 8004a2c:	2201      	movs	r2, #1
 8004a2e:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8004a32:	687b      	ldr	r3, [r7, #4]
 8004a34:	2201      	movs	r2, #1
 8004a36:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8004a3a:	687b      	ldr	r3, [r7, #4]
 8004a3c:	2201      	movs	r2, #1
 8004a3e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004a42:	2300      	movs	r3, #0
 8004a44:	4618      	mov	r0, r3
 8004a46:	3708      	adds	r7, #8
 8004a48:	46bd      	mov	sp, r7
 8004a4a:	bd80      	pop	{r7, pc}

08004a4c <HAL_TIM_IRQHandler>:
 8004a4c:	b580      	push	{r7, lr}
 8004a4e:	b084      	sub	sp, #16
 8004a50:	af00      	add	r7, sp, #0
 8004a52:	6078      	str	r0, [r7, #4]
 8004a54:	687b      	ldr	r3, [r7, #4]
 8004a56:	681b      	ldr	r3, [r3, #0]
 8004a58:	68db      	ldr	r3, [r3, #12]
 8004a5a:	60fb      	str	r3, [r7, #12]
 8004a5c:	687b      	ldr	r3, [r7, #4]
 8004a5e:	681b      	ldr	r3, [r3, #0]
 8004a60:	691b      	ldr	r3, [r3, #16]
 8004a62:	60bb      	str	r3, [r7, #8]
 8004a64:	68bb      	ldr	r3, [r7, #8]
 8004a66:	f003 0302 	and.w	r3, r3, #2
 8004a6a:	2b00      	cmp	r3, #0
 8004a6c:	d020      	beq.n	8004ab0 <HAL_TIM_IRQHandler+0x64>
 8004a6e:	68fb      	ldr	r3, [r7, #12]
 8004a70:	f003 0302 	and.w	r3, r3, #2
 8004a74:	2b00      	cmp	r3, #0
 8004a76:	d01b      	beq.n	8004ab0 <HAL_TIM_IRQHandler+0x64>
 8004a78:	687b      	ldr	r3, [r7, #4]
 8004a7a:	681b      	ldr	r3, [r3, #0]
 8004a7c:	f06f 0202 	mvn.w	r2, #2
 8004a80:	611a      	str	r2, [r3, #16]
 8004a82:	687b      	ldr	r3, [r7, #4]
 8004a84:	2201      	movs	r2, #1
 8004a86:	771a      	strb	r2, [r3, #28]
 8004a88:	687b      	ldr	r3, [r7, #4]
 8004a8a:	681b      	ldr	r3, [r3, #0]
 8004a8c:	699b      	ldr	r3, [r3, #24]
 8004a8e:	f003 0303 	and.w	r3, r3, #3
 8004a92:	2b00      	cmp	r3, #0
 8004a94:	d003      	beq.n	8004a9e <HAL_TIM_IRQHandler+0x52>
 8004a96:	6878      	ldr	r0, [r7, #4]
 8004a98:	f000 f99c 	bl	8004dd4 <HAL_TIM_IC_CaptureCallback>
 8004a9c:	e005      	b.n	8004aaa <HAL_TIM_IRQHandler+0x5e>
 8004a9e:	6878      	ldr	r0, [r7, #4]
 8004aa0:	f000 f98f 	bl	8004dc2 <HAL_TIM_OC_DelayElapsedCallback>
 8004aa4:	6878      	ldr	r0, [r7, #4]
 8004aa6:	f000 f99e 	bl	8004de6 <HAL_TIM_PWM_PulseFinishedCallback>
 8004aaa:	687b      	ldr	r3, [r7, #4]
 8004aac:	2200      	movs	r2, #0
 8004aae:	771a      	strb	r2, [r3, #28]
 8004ab0:	68bb      	ldr	r3, [r7, #8]
 8004ab2:	f003 0304 	and.w	r3, r3, #4
 8004ab6:	2b00      	cmp	r3, #0
 8004ab8:	d020      	beq.n	8004afc <HAL_TIM_IRQHandler+0xb0>
 8004aba:	68fb      	ldr	r3, [r7, #12]
 8004abc:	f003 0304 	and.w	r3, r3, #4
 8004ac0:	2b00      	cmp	r3, #0
 8004ac2:	d01b      	beq.n	8004afc <HAL_TIM_IRQHandler+0xb0>
 8004ac4:	687b      	ldr	r3, [r7, #4]
 8004ac6:	681b      	ldr	r3, [r3, #0]
 8004ac8:	f06f 0204 	mvn.w	r2, #4
 8004acc:	611a      	str	r2, [r3, #16]
 8004ace:	687b      	ldr	r3, [r7, #4]
 8004ad0:	2202      	movs	r2, #2
 8004ad2:	771a      	strb	r2, [r3, #28]
 8004ad4:	687b      	ldr	r3, [r7, #4]
 8004ad6:	681b      	ldr	r3, [r3, #0]
 8004ad8:	699b      	ldr	r3, [r3, #24]
 8004ada:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8004ade:	2b00      	cmp	r3, #0
 8004ae0:	d003      	beq.n	8004aea <HAL_TIM_IRQHandler+0x9e>
 8004ae2:	6878      	ldr	r0, [r7, #4]
 8004ae4:	f000 f976 	bl	8004dd4 <HAL_TIM_IC_CaptureCallback>
 8004ae8:	e005      	b.n	8004af6 <HAL_TIM_IRQHandler+0xaa>
 8004aea:	6878      	ldr	r0, [r7, #4]
 8004aec:	f000 f969 	bl	8004dc2 <HAL_TIM_OC_DelayElapsedCallback>
 8004af0:	6878      	ldr	r0, [r7, #4]
 8004af2:	f000 f978 	bl	8004de6 <HAL_TIM_PWM_PulseFinishedCallback>
 8004af6:	687b      	ldr	r3, [r7, #4]
 8004af8:	2200      	movs	r2, #0
 8004afa:	771a      	strb	r2, [r3, #28]
 8004afc:	68bb      	ldr	r3, [r7, #8]
 8004afe:	f003 0308 	and.w	r3, r3, #8
 8004b02:	2b00      	cmp	r3, #0
 8004b04:	d020      	beq.n	8004b48 <HAL_TIM_IRQHandler+0xfc>
 8004b06:	68fb      	ldr	r3, [r7, #12]
 8004b08:	f003 0308 	and.w	r3, r3, #8
 8004b0c:	2b00      	cmp	r3, #0
 8004b0e:	d01b      	beq.n	8004b48 <HAL_TIM_IRQHandler+0xfc>
 8004b10:	687b      	ldr	r3, [r7, #4]
 8004b12:	681b      	ldr	r3, [r3, #0]
 8004b14:	f06f 0208 	mvn.w	r2, #8
 8004b18:	611a      	str	r2, [r3, #16]
 8004b1a:	687b      	ldr	r3, [r7, #4]
 8004b1c:	2204      	movs	r2, #4
 8004b1e:	771a      	strb	r2, [r3, #28]
 8004b20:	687b      	ldr	r3, [r7, #4]
 8004b22:	681b      	ldr	r3, [r3, #0]
 8004b24:	69db      	ldr	r3, [r3, #28]
 8004b26:	f003 0303 	and.w	r3, r3, #3
 8004b2a:	2b00      	cmp	r3, #0
 8004b2c:	d003      	beq.n	8004b36 <HAL_TIM_IRQHandler+0xea>
 8004b2e:	6878      	ldr	r0, [r7, #4]
 8004b30:	f000 f950 	bl	8004dd4 <HAL_TIM_IC_CaptureCallback>
 8004b34:	e005      	b.n	8004b42 <HAL_TIM_IRQHandler+0xf6>
 8004b36:	6878      	ldr	r0, [r7, #4]
 8004b38:	f000 f943 	bl	8004dc2 <HAL_TIM_OC_DelayElapsedCallback>
 8004b3c:	6878      	ldr	r0, [r7, #4]
 8004b3e:	f000 f952 	bl	8004de6 <HAL_TIM_PWM_PulseFinishedCallback>
 8004b42:	687b      	ldr	r3, [r7, #4]
 8004b44:	2200      	movs	r2, #0
 8004b46:	771a      	strb	r2, [r3, #28]
 8004b48:	68bb      	ldr	r3, [r7, #8]
 8004b4a:	f003 0310 	and.w	r3, r3, #16
 8004b4e:	2b00      	cmp	r3, #0
 8004b50:	d020      	beq.n	8004b94 <HAL_TIM_IRQHandler+0x148>
 8004b52:	68fb      	ldr	r3, [r7, #12]
 8004b54:	f003 0310 	and.w	r3, r3, #16
 8004b58:	2b00      	cmp	r3, #0
 8004b5a:	d01b      	beq.n	8004b94 <HAL_TIM_IRQHandler+0x148>
 8004b5c:	687b      	ldr	r3, [r7, #4]
 8004b5e:	681b      	ldr	r3, [r3, #0]
 8004b60:	f06f 0210 	mvn.w	r2, #16
 8004b64:	611a      	str	r2, [r3, #16]
 8004b66:	687b      	ldr	r3, [r7, #4]
 8004b68:	2208      	movs	r2, #8
 8004b6a:	771a      	strb	r2, [r3, #28]
 8004b6c:	687b      	ldr	r3, [r7, #4]
 8004b6e:	681b      	ldr	r3, [r3, #0]
 8004b70:	69db      	ldr	r3, [r3, #28]
 8004b72:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8004b76:	2b00      	cmp	r3, #0
 8004b78:	d003      	beq.n	8004b82 <HAL_TIM_IRQHandler+0x136>
 8004b7a:	6878      	ldr	r0, [r7, #4]
 8004b7c:	f000 f92a 	bl	8004dd4 <HAL_TIM_IC_CaptureCallback>
 8004b80:	e005      	b.n	8004b8e <HAL_TIM_IRQHandler+0x142>
 8004b82:	6878      	ldr	r0, [r7, #4]
 8004b84:	f000 f91d 	bl	8004dc2 <HAL_TIM_OC_DelayElapsedCallback>
 8004b88:	6878      	ldr	r0, [r7, #4]
 8004b8a:	f000 f92c 	bl	8004de6 <HAL_TIM_PWM_PulseFinishedCallback>
 8004b8e:	687b      	ldr	r3, [r7, #4]
 8004b90:	2200      	movs	r2, #0
 8004b92:	771a      	strb	r2, [r3, #28]
 8004b94:	68bb      	ldr	r3, [r7, #8]
 8004b96:	f003 0301 	and.w	r3, r3, #1
 8004b9a:	2b00      	cmp	r3, #0
 8004b9c:	d00c      	beq.n	8004bb8 <HAL_TIM_IRQHandler+0x16c>
 8004b9e:	68fb      	ldr	r3, [r7, #12]
 8004ba0:	f003 0301 	and.w	r3, r3, #1
 8004ba4:	2b00      	cmp	r3, #0
 8004ba6:	d007      	beq.n	8004bb8 <HAL_TIM_IRQHandler+0x16c>
 8004ba8:	687b      	ldr	r3, [r7, #4]
 8004baa:	681b      	ldr	r3, [r3, #0]
 8004bac:	f06f 0201 	mvn.w	r2, #1
 8004bb0:	611a      	str	r2, [r3, #16]
 8004bb2:	6878      	ldr	r0, [r7, #4]
 8004bb4:	f000 f8fc 	bl	8004db0 <HAL_TIM_PeriodElapsedCallback>
 8004bb8:	68bb      	ldr	r3, [r7, #8]
 8004bba:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004bbe:	2b00      	cmp	r3, #0
 8004bc0:	d00c      	beq.n	8004bdc <HAL_TIM_IRQHandler+0x190>
 8004bc2:	68fb      	ldr	r3, [r7, #12]
 8004bc4:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004bc8:	2b00      	cmp	r3, #0
 8004bca:	d007      	beq.n	8004bdc <HAL_TIM_IRQHandler+0x190>
 8004bcc:	687b      	ldr	r3, [r7, #4]
 8004bce:	681b      	ldr	r3, [r3, #0]
 8004bd0:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 8004bd4:	611a      	str	r2, [r3, #16]
 8004bd6:	6878      	ldr	r0, [r7, #4]
 8004bd8:	f000 fb75 	bl	80052c6 <HAL_TIMEx_BreakCallback>
 8004bdc:	68bb      	ldr	r3, [r7, #8]
 8004bde:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004be2:	2b00      	cmp	r3, #0
 8004be4:	d00c      	beq.n	8004c00 <HAL_TIM_IRQHandler+0x1b4>
 8004be6:	68fb      	ldr	r3, [r7, #12]
 8004be8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004bec:	2b00      	cmp	r3, #0
 8004bee:	d007      	beq.n	8004c00 <HAL_TIM_IRQHandler+0x1b4>
 8004bf0:	687b      	ldr	r3, [r7, #4]
 8004bf2:	681b      	ldr	r3, [r3, #0]
 8004bf4:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8004bf8:	611a      	str	r2, [r3, #16]
 8004bfa:	6878      	ldr	r0, [r7, #4]
 8004bfc:	f000 f8fc 	bl	8004df8 <HAL_TIM_TriggerCallback>
 8004c00:	68bb      	ldr	r3, [r7, #8]
 8004c02:	f003 0320 	and.w	r3, r3, #32
 8004c06:	2b00      	cmp	r3, #0
 8004c08:	d00c      	beq.n	8004c24 <HAL_TIM_IRQHandler+0x1d8>
 8004c0a:	68fb      	ldr	r3, [r7, #12]
 8004c0c:	f003 0320 	and.w	r3, r3, #32
 8004c10:	2b00      	cmp	r3, #0
 8004c12:	d007      	beq.n	8004c24 <HAL_TIM_IRQHandler+0x1d8>
 8004c14:	687b      	ldr	r3, [r7, #4]
 8004c16:	681b      	ldr	r3, [r3, #0]
 8004c18:	f06f 0220 	mvn.w	r2, #32
 8004c1c:	611a      	str	r2, [r3, #16]
 8004c1e:	6878      	ldr	r0, [r7, #4]
 8004c20:	f000 fb48 	bl	80052b4 <HAL_TIMEx_CommutCallback>
 8004c24:	bf00      	nop
 8004c26:	3710      	adds	r7, #16
 8004c28:	46bd      	mov	sp, r7
 8004c2a:	bd80      	pop	{r7, pc}

08004c2c <HAL_TIM_PWM_ConfigChannel>:
 8004c2c:	b580      	push	{r7, lr}
 8004c2e:	b086      	sub	sp, #24
 8004c30:	af00      	add	r7, sp, #0
 8004c32:	60f8      	str	r0, [r7, #12]
 8004c34:	60b9      	str	r1, [r7, #8]
 8004c36:	607a      	str	r2, [r7, #4]
 8004c38:	2300      	movs	r3, #0
 8004c3a:	75fb      	strb	r3, [r7, #23]
 8004c3c:	68fb      	ldr	r3, [r7, #12]
 8004c3e:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8004c42:	2b01      	cmp	r3, #1
 8004c44:	d101      	bne.n	8004c4a <HAL_TIM_PWM_ConfigChannel+0x1e>
 8004c46:	2302      	movs	r3, #2
 8004c48:	e0ae      	b.n	8004da8 <HAL_TIM_PWM_ConfigChannel+0x17c>
 8004c4a:	68fb      	ldr	r3, [r7, #12]
 8004c4c:	2201      	movs	r2, #1
 8004c4e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004c52:	687b      	ldr	r3, [r7, #4]
 8004c54:	2b0c      	cmp	r3, #12
 8004c56:	f200 809f 	bhi.w	8004d98 <HAL_TIM_PWM_ConfigChannel+0x16c>
 8004c5a:	a201      	add	r2, pc, #4	@ (adr r2, 8004c60 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8004c5c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004c60:	08004c95 	.word	0x08004c95
 8004c64:	08004d99 	.word	0x08004d99
 8004c68:	08004d99 	.word	0x08004d99
 8004c6c:	08004d99 	.word	0x08004d99
 8004c70:	08004cd5 	.word	0x08004cd5
 8004c74:	08004d99 	.word	0x08004d99
 8004c78:	08004d99 	.word	0x08004d99
 8004c7c:	08004d99 	.word	0x08004d99
 8004c80:	08004d17 	.word	0x08004d17
 8004c84:	08004d99 	.word	0x08004d99
 8004c88:	08004d99 	.word	0x08004d99
 8004c8c:	08004d99 	.word	0x08004d99
 8004c90:	08004d57 	.word	0x08004d57
 8004c94:	68fb      	ldr	r3, [r7, #12]
 8004c96:	681b      	ldr	r3, [r3, #0]
 8004c98:	68b9      	ldr	r1, [r7, #8]
 8004c9a:	4618      	mov	r0, r3
 8004c9c:	f000 f924 	bl	8004ee8 <TIM_OC1_SetConfig>
 8004ca0:	68fb      	ldr	r3, [r7, #12]
 8004ca2:	681b      	ldr	r3, [r3, #0]
 8004ca4:	699a      	ldr	r2, [r3, #24]
 8004ca6:	68fb      	ldr	r3, [r7, #12]
 8004ca8:	681b      	ldr	r3, [r3, #0]
 8004caa:	f042 0208 	orr.w	r2, r2, #8
 8004cae:	619a      	str	r2, [r3, #24]
 8004cb0:	68fb      	ldr	r3, [r7, #12]
 8004cb2:	681b      	ldr	r3, [r3, #0]
 8004cb4:	699a      	ldr	r2, [r3, #24]
 8004cb6:	68fb      	ldr	r3, [r7, #12]
 8004cb8:	681b      	ldr	r3, [r3, #0]
 8004cba:	f022 0204 	bic.w	r2, r2, #4
 8004cbe:	619a      	str	r2, [r3, #24]
 8004cc0:	68fb      	ldr	r3, [r7, #12]
 8004cc2:	681b      	ldr	r3, [r3, #0]
 8004cc4:	6999      	ldr	r1, [r3, #24]
 8004cc6:	68bb      	ldr	r3, [r7, #8]
 8004cc8:	691a      	ldr	r2, [r3, #16]
 8004cca:	68fb      	ldr	r3, [r7, #12]
 8004ccc:	681b      	ldr	r3, [r3, #0]
 8004cce:	430a      	orrs	r2, r1
 8004cd0:	619a      	str	r2, [r3, #24]
 8004cd2:	e064      	b.n	8004d9e <HAL_TIM_PWM_ConfigChannel+0x172>
 8004cd4:	68fb      	ldr	r3, [r7, #12]
 8004cd6:	681b      	ldr	r3, [r3, #0]
 8004cd8:	68b9      	ldr	r1, [r7, #8]
 8004cda:	4618      	mov	r0, r3
 8004cdc:	f000 f96a 	bl	8004fb4 <TIM_OC2_SetConfig>
 8004ce0:	68fb      	ldr	r3, [r7, #12]
 8004ce2:	681b      	ldr	r3, [r3, #0]
 8004ce4:	699a      	ldr	r2, [r3, #24]
 8004ce6:	68fb      	ldr	r3, [r7, #12]
 8004ce8:	681b      	ldr	r3, [r3, #0]
 8004cea:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8004cee:	619a      	str	r2, [r3, #24]
 8004cf0:	68fb      	ldr	r3, [r7, #12]
 8004cf2:	681b      	ldr	r3, [r3, #0]
 8004cf4:	699a      	ldr	r2, [r3, #24]
 8004cf6:	68fb      	ldr	r3, [r7, #12]
 8004cf8:	681b      	ldr	r3, [r3, #0]
 8004cfa:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004cfe:	619a      	str	r2, [r3, #24]
 8004d00:	68fb      	ldr	r3, [r7, #12]
 8004d02:	681b      	ldr	r3, [r3, #0]
 8004d04:	6999      	ldr	r1, [r3, #24]
 8004d06:	68bb      	ldr	r3, [r7, #8]
 8004d08:	691b      	ldr	r3, [r3, #16]
 8004d0a:	021a      	lsls	r2, r3, #8
 8004d0c:	68fb      	ldr	r3, [r7, #12]
 8004d0e:	681b      	ldr	r3, [r3, #0]
 8004d10:	430a      	orrs	r2, r1
 8004d12:	619a      	str	r2, [r3, #24]
 8004d14:	e043      	b.n	8004d9e <HAL_TIM_PWM_ConfigChannel+0x172>
 8004d16:	68fb      	ldr	r3, [r7, #12]
 8004d18:	681b      	ldr	r3, [r3, #0]
 8004d1a:	68b9      	ldr	r1, [r7, #8]
 8004d1c:	4618      	mov	r0, r3
 8004d1e:	f000 f9b3 	bl	8005088 <TIM_OC3_SetConfig>
 8004d22:	68fb      	ldr	r3, [r7, #12]
 8004d24:	681b      	ldr	r3, [r3, #0]
 8004d26:	69da      	ldr	r2, [r3, #28]
 8004d28:	68fb      	ldr	r3, [r7, #12]
 8004d2a:	681b      	ldr	r3, [r3, #0]
 8004d2c:	f042 0208 	orr.w	r2, r2, #8
 8004d30:	61da      	str	r2, [r3, #28]
 8004d32:	68fb      	ldr	r3, [r7, #12]
 8004d34:	681b      	ldr	r3, [r3, #0]
 8004d36:	69da      	ldr	r2, [r3, #28]
 8004d38:	68fb      	ldr	r3, [r7, #12]
 8004d3a:	681b      	ldr	r3, [r3, #0]
 8004d3c:	f022 0204 	bic.w	r2, r2, #4
 8004d40:	61da      	str	r2, [r3, #28]
 8004d42:	68fb      	ldr	r3, [r7, #12]
 8004d44:	681b      	ldr	r3, [r3, #0]
 8004d46:	69d9      	ldr	r1, [r3, #28]
 8004d48:	68bb      	ldr	r3, [r7, #8]
 8004d4a:	691a      	ldr	r2, [r3, #16]
 8004d4c:	68fb      	ldr	r3, [r7, #12]
 8004d4e:	681b      	ldr	r3, [r3, #0]
 8004d50:	430a      	orrs	r2, r1
 8004d52:	61da      	str	r2, [r3, #28]
 8004d54:	e023      	b.n	8004d9e <HAL_TIM_PWM_ConfigChannel+0x172>
 8004d56:	68fb      	ldr	r3, [r7, #12]
 8004d58:	681b      	ldr	r3, [r3, #0]
 8004d5a:	68b9      	ldr	r1, [r7, #8]
 8004d5c:	4618      	mov	r0, r3
 8004d5e:	f000 f9fd 	bl	800515c <TIM_OC4_SetConfig>
 8004d62:	68fb      	ldr	r3, [r7, #12]
 8004d64:	681b      	ldr	r3, [r3, #0]
 8004d66:	69da      	ldr	r2, [r3, #28]
 8004d68:	68fb      	ldr	r3, [r7, #12]
 8004d6a:	681b      	ldr	r3, [r3, #0]
 8004d6c:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8004d70:	61da      	str	r2, [r3, #28]
 8004d72:	68fb      	ldr	r3, [r7, #12]
 8004d74:	681b      	ldr	r3, [r3, #0]
 8004d76:	69da      	ldr	r2, [r3, #28]
 8004d78:	68fb      	ldr	r3, [r7, #12]
 8004d7a:	681b      	ldr	r3, [r3, #0]
 8004d7c:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004d80:	61da      	str	r2, [r3, #28]
 8004d82:	68fb      	ldr	r3, [r7, #12]
 8004d84:	681b      	ldr	r3, [r3, #0]
 8004d86:	69d9      	ldr	r1, [r3, #28]
 8004d88:	68bb      	ldr	r3, [r7, #8]
 8004d8a:	691b      	ldr	r3, [r3, #16]
 8004d8c:	021a      	lsls	r2, r3, #8
 8004d8e:	68fb      	ldr	r3, [r7, #12]
 8004d90:	681b      	ldr	r3, [r3, #0]
 8004d92:	430a      	orrs	r2, r1
 8004d94:	61da      	str	r2, [r3, #28]
 8004d96:	e002      	b.n	8004d9e <HAL_TIM_PWM_ConfigChannel+0x172>
 8004d98:	2301      	movs	r3, #1
 8004d9a:	75fb      	strb	r3, [r7, #23]
 8004d9c:	bf00      	nop
 8004d9e:	68fb      	ldr	r3, [r7, #12]
 8004da0:	2200      	movs	r2, #0
 8004da2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004da6:	7dfb      	ldrb	r3, [r7, #23]
 8004da8:	4618      	mov	r0, r3
 8004daa:	3718      	adds	r7, #24
 8004dac:	46bd      	mov	sp, r7
 8004dae:	bd80      	pop	{r7, pc}

08004db0 <HAL_TIM_PeriodElapsedCallback>:
 8004db0:	b480      	push	{r7}
 8004db2:	b083      	sub	sp, #12
 8004db4:	af00      	add	r7, sp, #0
 8004db6:	6078      	str	r0, [r7, #4]
 8004db8:	bf00      	nop
 8004dba:	370c      	adds	r7, #12
 8004dbc:	46bd      	mov	sp, r7
 8004dbe:	bc80      	pop	{r7}
 8004dc0:	4770      	bx	lr

08004dc2 <HAL_TIM_OC_DelayElapsedCallback>:
 8004dc2:	b480      	push	{r7}
 8004dc4:	b083      	sub	sp, #12
 8004dc6:	af00      	add	r7, sp, #0
 8004dc8:	6078      	str	r0, [r7, #4]
 8004dca:	bf00      	nop
 8004dcc:	370c      	adds	r7, #12
 8004dce:	46bd      	mov	sp, r7
 8004dd0:	bc80      	pop	{r7}
 8004dd2:	4770      	bx	lr

08004dd4 <HAL_TIM_IC_CaptureCallback>:
 8004dd4:	b480      	push	{r7}
 8004dd6:	b083      	sub	sp, #12
 8004dd8:	af00      	add	r7, sp, #0
 8004dda:	6078      	str	r0, [r7, #4]
 8004ddc:	bf00      	nop
 8004dde:	370c      	adds	r7, #12
 8004de0:	46bd      	mov	sp, r7
 8004de2:	bc80      	pop	{r7}
 8004de4:	4770      	bx	lr

08004de6 <HAL_TIM_PWM_PulseFinishedCallback>:
 8004de6:	b480      	push	{r7}
 8004de8:	b083      	sub	sp, #12
 8004dea:	af00      	add	r7, sp, #0
 8004dec:	6078      	str	r0, [r7, #4]
 8004dee:	bf00      	nop
 8004df0:	370c      	adds	r7, #12
 8004df2:	46bd      	mov	sp, r7
 8004df4:	bc80      	pop	{r7}
 8004df6:	4770      	bx	lr

08004df8 <HAL_TIM_TriggerCallback>:
 8004df8:	b480      	push	{r7}
 8004dfa:	b083      	sub	sp, #12
 8004dfc:	af00      	add	r7, sp, #0
 8004dfe:	6078      	str	r0, [r7, #4]
 8004e00:	bf00      	nop
 8004e02:	370c      	adds	r7, #12
 8004e04:	46bd      	mov	sp, r7
 8004e06:	bc80      	pop	{r7}
 8004e08:	4770      	bx	lr
	...

08004e0c <TIM_Base_SetConfig>:
 8004e0c:	b480      	push	{r7}
 8004e0e:	b085      	sub	sp, #20
 8004e10:	af00      	add	r7, sp, #0
 8004e12:	6078      	str	r0, [r7, #4]
 8004e14:	6039      	str	r1, [r7, #0]
 8004e16:	687b      	ldr	r3, [r7, #4]
 8004e18:	681b      	ldr	r3, [r3, #0]
 8004e1a:	60fb      	str	r3, [r7, #12]
 8004e1c:	687b      	ldr	r3, [r7, #4]
 8004e1e:	4a2f      	ldr	r2, [pc, #188]	@ (8004edc <TIM_Base_SetConfig+0xd0>)
 8004e20:	4293      	cmp	r3, r2
 8004e22:	d00b      	beq.n	8004e3c <TIM_Base_SetConfig+0x30>
 8004e24:	687b      	ldr	r3, [r7, #4]
 8004e26:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004e2a:	d007      	beq.n	8004e3c <TIM_Base_SetConfig+0x30>
 8004e2c:	687b      	ldr	r3, [r7, #4]
 8004e2e:	4a2c      	ldr	r2, [pc, #176]	@ (8004ee0 <TIM_Base_SetConfig+0xd4>)
 8004e30:	4293      	cmp	r3, r2
 8004e32:	d003      	beq.n	8004e3c <TIM_Base_SetConfig+0x30>
 8004e34:	687b      	ldr	r3, [r7, #4]
 8004e36:	4a2b      	ldr	r2, [pc, #172]	@ (8004ee4 <TIM_Base_SetConfig+0xd8>)
 8004e38:	4293      	cmp	r3, r2
 8004e3a:	d108      	bne.n	8004e4e <TIM_Base_SetConfig+0x42>
 8004e3c:	68fb      	ldr	r3, [r7, #12]
 8004e3e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004e42:	60fb      	str	r3, [r7, #12]
 8004e44:	683b      	ldr	r3, [r7, #0]
 8004e46:	685b      	ldr	r3, [r3, #4]
 8004e48:	68fa      	ldr	r2, [r7, #12]
 8004e4a:	4313      	orrs	r3, r2
 8004e4c:	60fb      	str	r3, [r7, #12]
 8004e4e:	687b      	ldr	r3, [r7, #4]
 8004e50:	4a22      	ldr	r2, [pc, #136]	@ (8004edc <TIM_Base_SetConfig+0xd0>)
 8004e52:	4293      	cmp	r3, r2
 8004e54:	d00b      	beq.n	8004e6e <TIM_Base_SetConfig+0x62>
 8004e56:	687b      	ldr	r3, [r7, #4]
 8004e58:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004e5c:	d007      	beq.n	8004e6e <TIM_Base_SetConfig+0x62>
 8004e5e:	687b      	ldr	r3, [r7, #4]
 8004e60:	4a1f      	ldr	r2, [pc, #124]	@ (8004ee0 <TIM_Base_SetConfig+0xd4>)
 8004e62:	4293      	cmp	r3, r2
 8004e64:	d003      	beq.n	8004e6e <TIM_Base_SetConfig+0x62>
 8004e66:	687b      	ldr	r3, [r7, #4]
 8004e68:	4a1e      	ldr	r2, [pc, #120]	@ (8004ee4 <TIM_Base_SetConfig+0xd8>)
 8004e6a:	4293      	cmp	r3, r2
 8004e6c:	d108      	bne.n	8004e80 <TIM_Base_SetConfig+0x74>
 8004e6e:	68fb      	ldr	r3, [r7, #12]
 8004e70:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004e74:	60fb      	str	r3, [r7, #12]
 8004e76:	683b      	ldr	r3, [r7, #0]
 8004e78:	68db      	ldr	r3, [r3, #12]
 8004e7a:	68fa      	ldr	r2, [r7, #12]
 8004e7c:	4313      	orrs	r3, r2
 8004e7e:	60fb      	str	r3, [r7, #12]
 8004e80:	68fb      	ldr	r3, [r7, #12]
 8004e82:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8004e86:	683b      	ldr	r3, [r7, #0]
 8004e88:	695b      	ldr	r3, [r3, #20]
 8004e8a:	4313      	orrs	r3, r2
 8004e8c:	60fb      	str	r3, [r7, #12]
 8004e8e:	687b      	ldr	r3, [r7, #4]
 8004e90:	68fa      	ldr	r2, [r7, #12]
 8004e92:	601a      	str	r2, [r3, #0]
 8004e94:	683b      	ldr	r3, [r7, #0]
 8004e96:	689a      	ldr	r2, [r3, #8]
 8004e98:	687b      	ldr	r3, [r7, #4]
 8004e9a:	62da      	str	r2, [r3, #44]	@ 0x2c
 8004e9c:	683b      	ldr	r3, [r7, #0]
 8004e9e:	681a      	ldr	r2, [r3, #0]
 8004ea0:	687b      	ldr	r3, [r7, #4]
 8004ea2:	629a      	str	r2, [r3, #40]	@ 0x28
 8004ea4:	687b      	ldr	r3, [r7, #4]
 8004ea6:	4a0d      	ldr	r2, [pc, #52]	@ (8004edc <TIM_Base_SetConfig+0xd0>)
 8004ea8:	4293      	cmp	r3, r2
 8004eaa:	d103      	bne.n	8004eb4 <TIM_Base_SetConfig+0xa8>
 8004eac:	683b      	ldr	r3, [r7, #0]
 8004eae:	691a      	ldr	r2, [r3, #16]
 8004eb0:	687b      	ldr	r3, [r7, #4]
 8004eb2:	631a      	str	r2, [r3, #48]	@ 0x30
 8004eb4:	687b      	ldr	r3, [r7, #4]
 8004eb6:	2201      	movs	r2, #1
 8004eb8:	615a      	str	r2, [r3, #20]
 8004eba:	687b      	ldr	r3, [r7, #4]
 8004ebc:	691b      	ldr	r3, [r3, #16]
 8004ebe:	f003 0301 	and.w	r3, r3, #1
 8004ec2:	2b00      	cmp	r3, #0
 8004ec4:	d005      	beq.n	8004ed2 <TIM_Base_SetConfig+0xc6>
 8004ec6:	687b      	ldr	r3, [r7, #4]
 8004ec8:	691b      	ldr	r3, [r3, #16]
 8004eca:	f023 0201 	bic.w	r2, r3, #1
 8004ece:	687b      	ldr	r3, [r7, #4]
 8004ed0:	611a      	str	r2, [r3, #16]
 8004ed2:	bf00      	nop
 8004ed4:	3714      	adds	r7, #20
 8004ed6:	46bd      	mov	sp, r7
 8004ed8:	bc80      	pop	{r7}
 8004eda:	4770      	bx	lr
 8004edc:	40012c00 	.word	0x40012c00
 8004ee0:	40000400 	.word	0x40000400
 8004ee4:	40000800 	.word	0x40000800

08004ee8 <TIM_OC1_SetConfig>:
 8004ee8:	b480      	push	{r7}
 8004eea:	b087      	sub	sp, #28
 8004eec:	af00      	add	r7, sp, #0
 8004eee:	6078      	str	r0, [r7, #4]
 8004ef0:	6039      	str	r1, [r7, #0]
 8004ef2:	687b      	ldr	r3, [r7, #4]
 8004ef4:	6a1b      	ldr	r3, [r3, #32]
 8004ef6:	617b      	str	r3, [r7, #20]
 8004ef8:	687b      	ldr	r3, [r7, #4]
 8004efa:	6a1b      	ldr	r3, [r3, #32]
 8004efc:	f023 0201 	bic.w	r2, r3, #1
 8004f00:	687b      	ldr	r3, [r7, #4]
 8004f02:	621a      	str	r2, [r3, #32]
 8004f04:	687b      	ldr	r3, [r7, #4]
 8004f06:	685b      	ldr	r3, [r3, #4]
 8004f08:	613b      	str	r3, [r7, #16]
 8004f0a:	687b      	ldr	r3, [r7, #4]
 8004f0c:	699b      	ldr	r3, [r3, #24]
 8004f0e:	60fb      	str	r3, [r7, #12]
 8004f10:	68fb      	ldr	r3, [r7, #12]
 8004f12:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004f16:	60fb      	str	r3, [r7, #12]
 8004f18:	68fb      	ldr	r3, [r7, #12]
 8004f1a:	f023 0303 	bic.w	r3, r3, #3
 8004f1e:	60fb      	str	r3, [r7, #12]
 8004f20:	683b      	ldr	r3, [r7, #0]
 8004f22:	681b      	ldr	r3, [r3, #0]
 8004f24:	68fa      	ldr	r2, [r7, #12]
 8004f26:	4313      	orrs	r3, r2
 8004f28:	60fb      	str	r3, [r7, #12]
 8004f2a:	697b      	ldr	r3, [r7, #20]
 8004f2c:	f023 0302 	bic.w	r3, r3, #2
 8004f30:	617b      	str	r3, [r7, #20]
 8004f32:	683b      	ldr	r3, [r7, #0]
 8004f34:	689b      	ldr	r3, [r3, #8]
 8004f36:	697a      	ldr	r2, [r7, #20]
 8004f38:	4313      	orrs	r3, r2
 8004f3a:	617b      	str	r3, [r7, #20]
 8004f3c:	687b      	ldr	r3, [r7, #4]
 8004f3e:	4a1c      	ldr	r2, [pc, #112]	@ (8004fb0 <TIM_OC1_SetConfig+0xc8>)
 8004f40:	4293      	cmp	r3, r2
 8004f42:	d10c      	bne.n	8004f5e <TIM_OC1_SetConfig+0x76>
 8004f44:	697b      	ldr	r3, [r7, #20]
 8004f46:	f023 0308 	bic.w	r3, r3, #8
 8004f4a:	617b      	str	r3, [r7, #20]
 8004f4c:	683b      	ldr	r3, [r7, #0]
 8004f4e:	68db      	ldr	r3, [r3, #12]
 8004f50:	697a      	ldr	r2, [r7, #20]
 8004f52:	4313      	orrs	r3, r2
 8004f54:	617b      	str	r3, [r7, #20]
 8004f56:	697b      	ldr	r3, [r7, #20]
 8004f58:	f023 0304 	bic.w	r3, r3, #4
 8004f5c:	617b      	str	r3, [r7, #20]
 8004f5e:	687b      	ldr	r3, [r7, #4]
 8004f60:	4a13      	ldr	r2, [pc, #76]	@ (8004fb0 <TIM_OC1_SetConfig+0xc8>)
 8004f62:	4293      	cmp	r3, r2
 8004f64:	d111      	bne.n	8004f8a <TIM_OC1_SetConfig+0xa2>
 8004f66:	693b      	ldr	r3, [r7, #16]
 8004f68:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8004f6c:	613b      	str	r3, [r7, #16]
 8004f6e:	693b      	ldr	r3, [r7, #16]
 8004f70:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8004f74:	613b      	str	r3, [r7, #16]
 8004f76:	683b      	ldr	r3, [r7, #0]
 8004f78:	695b      	ldr	r3, [r3, #20]
 8004f7a:	693a      	ldr	r2, [r7, #16]
 8004f7c:	4313      	orrs	r3, r2
 8004f7e:	613b      	str	r3, [r7, #16]
 8004f80:	683b      	ldr	r3, [r7, #0]
 8004f82:	699b      	ldr	r3, [r3, #24]
 8004f84:	693a      	ldr	r2, [r7, #16]
 8004f86:	4313      	orrs	r3, r2
 8004f88:	613b      	str	r3, [r7, #16]
 8004f8a:	687b      	ldr	r3, [r7, #4]
 8004f8c:	693a      	ldr	r2, [r7, #16]
 8004f8e:	605a      	str	r2, [r3, #4]
 8004f90:	687b      	ldr	r3, [r7, #4]
 8004f92:	68fa      	ldr	r2, [r7, #12]
 8004f94:	619a      	str	r2, [r3, #24]
 8004f96:	683b      	ldr	r3, [r7, #0]
 8004f98:	685a      	ldr	r2, [r3, #4]
 8004f9a:	687b      	ldr	r3, [r7, #4]
 8004f9c:	635a      	str	r2, [r3, #52]	@ 0x34
 8004f9e:	687b      	ldr	r3, [r7, #4]
 8004fa0:	697a      	ldr	r2, [r7, #20]
 8004fa2:	621a      	str	r2, [r3, #32]
 8004fa4:	bf00      	nop
 8004fa6:	371c      	adds	r7, #28
 8004fa8:	46bd      	mov	sp, r7
 8004faa:	bc80      	pop	{r7}
 8004fac:	4770      	bx	lr
 8004fae:	bf00      	nop
 8004fb0:	40012c00 	.word	0x40012c00

08004fb4 <TIM_OC2_SetConfig>:
 8004fb4:	b480      	push	{r7}
 8004fb6:	b087      	sub	sp, #28
 8004fb8:	af00      	add	r7, sp, #0
 8004fba:	6078      	str	r0, [r7, #4]
 8004fbc:	6039      	str	r1, [r7, #0]
 8004fbe:	687b      	ldr	r3, [r7, #4]
 8004fc0:	6a1b      	ldr	r3, [r3, #32]
 8004fc2:	617b      	str	r3, [r7, #20]
 8004fc4:	687b      	ldr	r3, [r7, #4]
 8004fc6:	6a1b      	ldr	r3, [r3, #32]
 8004fc8:	f023 0210 	bic.w	r2, r3, #16
 8004fcc:	687b      	ldr	r3, [r7, #4]
 8004fce:	621a      	str	r2, [r3, #32]
 8004fd0:	687b      	ldr	r3, [r7, #4]
 8004fd2:	685b      	ldr	r3, [r3, #4]
 8004fd4:	613b      	str	r3, [r7, #16]
 8004fd6:	687b      	ldr	r3, [r7, #4]
 8004fd8:	699b      	ldr	r3, [r3, #24]
 8004fda:	60fb      	str	r3, [r7, #12]
 8004fdc:	68fb      	ldr	r3, [r7, #12]
 8004fde:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8004fe2:	60fb      	str	r3, [r7, #12]
 8004fe4:	68fb      	ldr	r3, [r7, #12]
 8004fe6:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004fea:	60fb      	str	r3, [r7, #12]
 8004fec:	683b      	ldr	r3, [r7, #0]
 8004fee:	681b      	ldr	r3, [r3, #0]
 8004ff0:	021b      	lsls	r3, r3, #8
 8004ff2:	68fa      	ldr	r2, [r7, #12]
 8004ff4:	4313      	orrs	r3, r2
 8004ff6:	60fb      	str	r3, [r7, #12]
 8004ff8:	697b      	ldr	r3, [r7, #20]
 8004ffa:	f023 0320 	bic.w	r3, r3, #32
 8004ffe:	617b      	str	r3, [r7, #20]
 8005000:	683b      	ldr	r3, [r7, #0]
 8005002:	689b      	ldr	r3, [r3, #8]
 8005004:	011b      	lsls	r3, r3, #4
 8005006:	697a      	ldr	r2, [r7, #20]
 8005008:	4313      	orrs	r3, r2
 800500a:	617b      	str	r3, [r7, #20]
 800500c:	687b      	ldr	r3, [r7, #4]
 800500e:	4a1d      	ldr	r2, [pc, #116]	@ (8005084 <TIM_OC2_SetConfig+0xd0>)
 8005010:	4293      	cmp	r3, r2
 8005012:	d10d      	bne.n	8005030 <TIM_OC2_SetConfig+0x7c>
 8005014:	697b      	ldr	r3, [r7, #20]
 8005016:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800501a:	617b      	str	r3, [r7, #20]
 800501c:	683b      	ldr	r3, [r7, #0]
 800501e:	68db      	ldr	r3, [r3, #12]
 8005020:	011b      	lsls	r3, r3, #4
 8005022:	697a      	ldr	r2, [r7, #20]
 8005024:	4313      	orrs	r3, r2
 8005026:	617b      	str	r3, [r7, #20]
 8005028:	697b      	ldr	r3, [r7, #20]
 800502a:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800502e:	617b      	str	r3, [r7, #20]
 8005030:	687b      	ldr	r3, [r7, #4]
 8005032:	4a14      	ldr	r2, [pc, #80]	@ (8005084 <TIM_OC2_SetConfig+0xd0>)
 8005034:	4293      	cmp	r3, r2
 8005036:	d113      	bne.n	8005060 <TIM_OC2_SetConfig+0xac>
 8005038:	693b      	ldr	r3, [r7, #16]
 800503a:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 800503e:	613b      	str	r3, [r7, #16]
 8005040:	693b      	ldr	r3, [r7, #16]
 8005042:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8005046:	613b      	str	r3, [r7, #16]
 8005048:	683b      	ldr	r3, [r7, #0]
 800504a:	695b      	ldr	r3, [r3, #20]
 800504c:	009b      	lsls	r3, r3, #2
 800504e:	693a      	ldr	r2, [r7, #16]
 8005050:	4313      	orrs	r3, r2
 8005052:	613b      	str	r3, [r7, #16]
 8005054:	683b      	ldr	r3, [r7, #0]
 8005056:	699b      	ldr	r3, [r3, #24]
 8005058:	009b      	lsls	r3, r3, #2
 800505a:	693a      	ldr	r2, [r7, #16]
 800505c:	4313      	orrs	r3, r2
 800505e:	613b      	str	r3, [r7, #16]
 8005060:	687b      	ldr	r3, [r7, #4]
 8005062:	693a      	ldr	r2, [r7, #16]
 8005064:	605a      	str	r2, [r3, #4]
 8005066:	687b      	ldr	r3, [r7, #4]
 8005068:	68fa      	ldr	r2, [r7, #12]
 800506a:	619a      	str	r2, [r3, #24]
 800506c:	683b      	ldr	r3, [r7, #0]
 800506e:	685a      	ldr	r2, [r3, #4]
 8005070:	687b      	ldr	r3, [r7, #4]
 8005072:	639a      	str	r2, [r3, #56]	@ 0x38
 8005074:	687b      	ldr	r3, [r7, #4]
 8005076:	697a      	ldr	r2, [r7, #20]
 8005078:	621a      	str	r2, [r3, #32]
 800507a:	bf00      	nop
 800507c:	371c      	adds	r7, #28
 800507e:	46bd      	mov	sp, r7
 8005080:	bc80      	pop	{r7}
 8005082:	4770      	bx	lr
 8005084:	40012c00 	.word	0x40012c00

08005088 <TIM_OC3_SetConfig>:
 8005088:	b480      	push	{r7}
 800508a:	b087      	sub	sp, #28
 800508c:	af00      	add	r7, sp, #0
 800508e:	6078      	str	r0, [r7, #4]
 8005090:	6039      	str	r1, [r7, #0]
 8005092:	687b      	ldr	r3, [r7, #4]
 8005094:	6a1b      	ldr	r3, [r3, #32]
 8005096:	617b      	str	r3, [r7, #20]
 8005098:	687b      	ldr	r3, [r7, #4]
 800509a:	6a1b      	ldr	r3, [r3, #32]
 800509c:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 80050a0:	687b      	ldr	r3, [r7, #4]
 80050a2:	621a      	str	r2, [r3, #32]
 80050a4:	687b      	ldr	r3, [r7, #4]
 80050a6:	685b      	ldr	r3, [r3, #4]
 80050a8:	613b      	str	r3, [r7, #16]
 80050aa:	687b      	ldr	r3, [r7, #4]
 80050ac:	69db      	ldr	r3, [r3, #28]
 80050ae:	60fb      	str	r3, [r7, #12]
 80050b0:	68fb      	ldr	r3, [r7, #12]
 80050b2:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80050b6:	60fb      	str	r3, [r7, #12]
 80050b8:	68fb      	ldr	r3, [r7, #12]
 80050ba:	f023 0303 	bic.w	r3, r3, #3
 80050be:	60fb      	str	r3, [r7, #12]
 80050c0:	683b      	ldr	r3, [r7, #0]
 80050c2:	681b      	ldr	r3, [r3, #0]
 80050c4:	68fa      	ldr	r2, [r7, #12]
 80050c6:	4313      	orrs	r3, r2
 80050c8:	60fb      	str	r3, [r7, #12]
 80050ca:	697b      	ldr	r3, [r7, #20]
 80050cc:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 80050d0:	617b      	str	r3, [r7, #20]
 80050d2:	683b      	ldr	r3, [r7, #0]
 80050d4:	689b      	ldr	r3, [r3, #8]
 80050d6:	021b      	lsls	r3, r3, #8
 80050d8:	697a      	ldr	r2, [r7, #20]
 80050da:	4313      	orrs	r3, r2
 80050dc:	617b      	str	r3, [r7, #20]
 80050de:	687b      	ldr	r3, [r7, #4]
 80050e0:	4a1d      	ldr	r2, [pc, #116]	@ (8005158 <TIM_OC3_SetConfig+0xd0>)
 80050e2:	4293      	cmp	r3, r2
 80050e4:	d10d      	bne.n	8005102 <TIM_OC3_SetConfig+0x7a>
 80050e6:	697b      	ldr	r3, [r7, #20]
 80050e8:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80050ec:	617b      	str	r3, [r7, #20]
 80050ee:	683b      	ldr	r3, [r7, #0]
 80050f0:	68db      	ldr	r3, [r3, #12]
 80050f2:	021b      	lsls	r3, r3, #8
 80050f4:	697a      	ldr	r2, [r7, #20]
 80050f6:	4313      	orrs	r3, r2
 80050f8:	617b      	str	r3, [r7, #20]
 80050fa:	697b      	ldr	r3, [r7, #20]
 80050fc:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8005100:	617b      	str	r3, [r7, #20]
 8005102:	687b      	ldr	r3, [r7, #4]
 8005104:	4a14      	ldr	r2, [pc, #80]	@ (8005158 <TIM_OC3_SetConfig+0xd0>)
 8005106:	4293      	cmp	r3, r2
 8005108:	d113      	bne.n	8005132 <TIM_OC3_SetConfig+0xaa>
 800510a:	693b      	ldr	r3, [r7, #16]
 800510c:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8005110:	613b      	str	r3, [r7, #16]
 8005112:	693b      	ldr	r3, [r7, #16]
 8005114:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8005118:	613b      	str	r3, [r7, #16]
 800511a:	683b      	ldr	r3, [r7, #0]
 800511c:	695b      	ldr	r3, [r3, #20]
 800511e:	011b      	lsls	r3, r3, #4
 8005120:	693a      	ldr	r2, [r7, #16]
 8005122:	4313      	orrs	r3, r2
 8005124:	613b      	str	r3, [r7, #16]
 8005126:	683b      	ldr	r3, [r7, #0]
 8005128:	699b      	ldr	r3, [r3, #24]
 800512a:	011b      	lsls	r3, r3, #4
 800512c:	693a      	ldr	r2, [r7, #16]
 800512e:	4313      	orrs	r3, r2
 8005130:	613b      	str	r3, [r7, #16]
 8005132:	687b      	ldr	r3, [r7, #4]
 8005134:	693a      	ldr	r2, [r7, #16]
 8005136:	605a      	str	r2, [r3, #4]
 8005138:	687b      	ldr	r3, [r7, #4]
 800513a:	68fa      	ldr	r2, [r7, #12]
 800513c:	61da      	str	r2, [r3, #28]
 800513e:	683b      	ldr	r3, [r7, #0]
 8005140:	685a      	ldr	r2, [r3, #4]
 8005142:	687b      	ldr	r3, [r7, #4]
 8005144:	63da      	str	r2, [r3, #60]	@ 0x3c
 8005146:	687b      	ldr	r3, [r7, #4]
 8005148:	697a      	ldr	r2, [r7, #20]
 800514a:	621a      	str	r2, [r3, #32]
 800514c:	bf00      	nop
 800514e:	371c      	adds	r7, #28
 8005150:	46bd      	mov	sp, r7
 8005152:	bc80      	pop	{r7}
 8005154:	4770      	bx	lr
 8005156:	bf00      	nop
 8005158:	40012c00 	.word	0x40012c00

0800515c <TIM_OC4_SetConfig>:
 800515c:	b480      	push	{r7}
 800515e:	b087      	sub	sp, #28
 8005160:	af00      	add	r7, sp, #0
 8005162:	6078      	str	r0, [r7, #4]
 8005164:	6039      	str	r1, [r7, #0]
 8005166:	687b      	ldr	r3, [r7, #4]
 8005168:	6a1b      	ldr	r3, [r3, #32]
 800516a:	613b      	str	r3, [r7, #16]
 800516c:	687b      	ldr	r3, [r7, #4]
 800516e:	6a1b      	ldr	r3, [r3, #32]
 8005170:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8005174:	687b      	ldr	r3, [r7, #4]
 8005176:	621a      	str	r2, [r3, #32]
 8005178:	687b      	ldr	r3, [r7, #4]
 800517a:	685b      	ldr	r3, [r3, #4]
 800517c:	617b      	str	r3, [r7, #20]
 800517e:	687b      	ldr	r3, [r7, #4]
 8005180:	69db      	ldr	r3, [r3, #28]
 8005182:	60fb      	str	r3, [r7, #12]
 8005184:	68fb      	ldr	r3, [r7, #12]
 8005186:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800518a:	60fb      	str	r3, [r7, #12]
 800518c:	68fb      	ldr	r3, [r7, #12]
 800518e:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8005192:	60fb      	str	r3, [r7, #12]
 8005194:	683b      	ldr	r3, [r7, #0]
 8005196:	681b      	ldr	r3, [r3, #0]
 8005198:	021b      	lsls	r3, r3, #8
 800519a:	68fa      	ldr	r2, [r7, #12]
 800519c:	4313      	orrs	r3, r2
 800519e:	60fb      	str	r3, [r7, #12]
 80051a0:	693b      	ldr	r3, [r7, #16]
 80051a2:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 80051a6:	613b      	str	r3, [r7, #16]
 80051a8:	683b      	ldr	r3, [r7, #0]
 80051aa:	689b      	ldr	r3, [r3, #8]
 80051ac:	031b      	lsls	r3, r3, #12
 80051ae:	693a      	ldr	r2, [r7, #16]
 80051b0:	4313      	orrs	r3, r2
 80051b2:	613b      	str	r3, [r7, #16]
 80051b4:	687b      	ldr	r3, [r7, #4]
 80051b6:	4a0f      	ldr	r2, [pc, #60]	@ (80051f4 <TIM_OC4_SetConfig+0x98>)
 80051b8:	4293      	cmp	r3, r2
 80051ba:	d109      	bne.n	80051d0 <TIM_OC4_SetConfig+0x74>
 80051bc:	697b      	ldr	r3, [r7, #20]
 80051be:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 80051c2:	617b      	str	r3, [r7, #20]
 80051c4:	683b      	ldr	r3, [r7, #0]
 80051c6:	695b      	ldr	r3, [r3, #20]
 80051c8:	019b      	lsls	r3, r3, #6
 80051ca:	697a      	ldr	r2, [r7, #20]
 80051cc:	4313      	orrs	r3, r2
 80051ce:	617b      	str	r3, [r7, #20]
 80051d0:	687b      	ldr	r3, [r7, #4]
 80051d2:	697a      	ldr	r2, [r7, #20]
 80051d4:	605a      	str	r2, [r3, #4]
 80051d6:	687b      	ldr	r3, [r7, #4]
 80051d8:	68fa      	ldr	r2, [r7, #12]
 80051da:	61da      	str	r2, [r3, #28]
 80051dc:	683b      	ldr	r3, [r7, #0]
 80051de:	685a      	ldr	r2, [r3, #4]
 80051e0:	687b      	ldr	r3, [r7, #4]
 80051e2:	641a      	str	r2, [r3, #64]	@ 0x40
 80051e4:	687b      	ldr	r3, [r7, #4]
 80051e6:	693a      	ldr	r2, [r7, #16]
 80051e8:	621a      	str	r2, [r3, #32]
 80051ea:	bf00      	nop
 80051ec:	371c      	adds	r7, #28
 80051ee:	46bd      	mov	sp, r7
 80051f0:	bc80      	pop	{r7}
 80051f2:	4770      	bx	lr
 80051f4:	40012c00 	.word	0x40012c00

080051f8 <HAL_TIMEx_MasterConfigSynchronization>:
 80051f8:	b480      	push	{r7}
 80051fa:	b085      	sub	sp, #20
 80051fc:	af00      	add	r7, sp, #0
 80051fe:	6078      	str	r0, [r7, #4]
 8005200:	6039      	str	r1, [r7, #0]
 8005202:	687b      	ldr	r3, [r7, #4]
 8005204:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8005208:	2b01      	cmp	r3, #1
 800520a:	d101      	bne.n	8005210 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800520c:	2302      	movs	r3, #2
 800520e:	e046      	b.n	800529e <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 8005210:	687b      	ldr	r3, [r7, #4]
 8005212:	2201      	movs	r2, #1
 8005214:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005218:	687b      	ldr	r3, [r7, #4]
 800521a:	2202      	movs	r2, #2
 800521c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005220:	687b      	ldr	r3, [r7, #4]
 8005222:	681b      	ldr	r3, [r3, #0]
 8005224:	685b      	ldr	r3, [r3, #4]
 8005226:	60fb      	str	r3, [r7, #12]
 8005228:	687b      	ldr	r3, [r7, #4]
 800522a:	681b      	ldr	r3, [r3, #0]
 800522c:	689b      	ldr	r3, [r3, #8]
 800522e:	60bb      	str	r3, [r7, #8]
 8005230:	68fb      	ldr	r3, [r7, #12]
 8005232:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005236:	60fb      	str	r3, [r7, #12]
 8005238:	683b      	ldr	r3, [r7, #0]
 800523a:	681b      	ldr	r3, [r3, #0]
 800523c:	68fa      	ldr	r2, [r7, #12]
 800523e:	4313      	orrs	r3, r2
 8005240:	60fb      	str	r3, [r7, #12]
 8005242:	687b      	ldr	r3, [r7, #4]
 8005244:	681b      	ldr	r3, [r3, #0]
 8005246:	68fa      	ldr	r2, [r7, #12]
 8005248:	605a      	str	r2, [r3, #4]
 800524a:	687b      	ldr	r3, [r7, #4]
 800524c:	681b      	ldr	r3, [r3, #0]
 800524e:	4a16      	ldr	r2, [pc, #88]	@ (80052a8 <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 8005250:	4293      	cmp	r3, r2
 8005252:	d00e      	beq.n	8005272 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8005254:	687b      	ldr	r3, [r7, #4]
 8005256:	681b      	ldr	r3, [r3, #0]
 8005258:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800525c:	d009      	beq.n	8005272 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 800525e:	687b      	ldr	r3, [r7, #4]
 8005260:	681b      	ldr	r3, [r3, #0]
 8005262:	4a12      	ldr	r2, [pc, #72]	@ (80052ac <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 8005264:	4293      	cmp	r3, r2
 8005266:	d004      	beq.n	8005272 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8005268:	687b      	ldr	r3, [r7, #4]
 800526a:	681b      	ldr	r3, [r3, #0]
 800526c:	4a10      	ldr	r2, [pc, #64]	@ (80052b0 <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 800526e:	4293      	cmp	r3, r2
 8005270:	d10c      	bne.n	800528c <HAL_TIMEx_MasterConfigSynchronization+0x94>
 8005272:	68bb      	ldr	r3, [r7, #8]
 8005274:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8005278:	60bb      	str	r3, [r7, #8]
 800527a:	683b      	ldr	r3, [r7, #0]
 800527c:	685b      	ldr	r3, [r3, #4]
 800527e:	68ba      	ldr	r2, [r7, #8]
 8005280:	4313      	orrs	r3, r2
 8005282:	60bb      	str	r3, [r7, #8]
 8005284:	687b      	ldr	r3, [r7, #4]
 8005286:	681b      	ldr	r3, [r3, #0]
 8005288:	68ba      	ldr	r2, [r7, #8]
 800528a:	609a      	str	r2, [r3, #8]
 800528c:	687b      	ldr	r3, [r7, #4]
 800528e:	2201      	movs	r2, #1
 8005290:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005294:	687b      	ldr	r3, [r7, #4]
 8005296:	2200      	movs	r2, #0
 8005298:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800529c:	2300      	movs	r3, #0
 800529e:	4618      	mov	r0, r3
 80052a0:	3714      	adds	r7, #20
 80052a2:	46bd      	mov	sp, r7
 80052a4:	bc80      	pop	{r7}
 80052a6:	4770      	bx	lr
 80052a8:	40012c00 	.word	0x40012c00
 80052ac:	40000400 	.word	0x40000400
 80052b0:	40000800 	.word	0x40000800

080052b4 <HAL_TIMEx_CommutCallback>:
 80052b4:	b480      	push	{r7}
 80052b6:	b083      	sub	sp, #12
 80052b8:	af00      	add	r7, sp, #0
 80052ba:	6078      	str	r0, [r7, #4]
 80052bc:	bf00      	nop
 80052be:	370c      	adds	r7, #12
 80052c0:	46bd      	mov	sp, r7
 80052c2:	bc80      	pop	{r7}
 80052c4:	4770      	bx	lr

080052c6 <HAL_TIMEx_BreakCallback>:
 80052c6:	b480      	push	{r7}
 80052c8:	b083      	sub	sp, #12
 80052ca:	af00      	add	r7, sp, #0
 80052cc:	6078      	str	r0, [r7, #4]
 80052ce:	bf00      	nop
 80052d0:	370c      	adds	r7, #12
 80052d2:	46bd      	mov	sp, r7
 80052d4:	bc80      	pop	{r7}
 80052d6:	4770      	bx	lr

080052d8 <HAL_UART_Init>:
 80052d8:	b580      	push	{r7, lr}
 80052da:	b082      	sub	sp, #8
 80052dc:	af00      	add	r7, sp, #0
 80052de:	6078      	str	r0, [r7, #4]
 80052e0:	687b      	ldr	r3, [r7, #4]
 80052e2:	2b00      	cmp	r3, #0
 80052e4:	d101      	bne.n	80052ea <HAL_UART_Init+0x12>
 80052e6:	2301      	movs	r3, #1
 80052e8:	e042      	b.n	8005370 <HAL_UART_Init+0x98>
 80052ea:	687b      	ldr	r3, [r7, #4]
 80052ec:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80052f0:	b2db      	uxtb	r3, r3
 80052f2:	2b00      	cmp	r3, #0
 80052f4:	d106      	bne.n	8005304 <HAL_UART_Init+0x2c>
 80052f6:	687b      	ldr	r3, [r7, #4]
 80052f8:	2200      	movs	r2, #0
 80052fa:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80052fe:	6878      	ldr	r0, [r7, #4]
 8005300:	f7fd fc78 	bl	8002bf4 <HAL_UART_MspInit>
 8005304:	687b      	ldr	r3, [r7, #4]
 8005306:	2224      	movs	r2, #36	@ 0x24
 8005308:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800530c:	687b      	ldr	r3, [r7, #4]
 800530e:	681b      	ldr	r3, [r3, #0]
 8005310:	68da      	ldr	r2, [r3, #12]
 8005312:	687b      	ldr	r3, [r7, #4]
 8005314:	681b      	ldr	r3, [r3, #0]
 8005316:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 800531a:	60da      	str	r2, [r3, #12]
 800531c:	6878      	ldr	r0, [r7, #4]
 800531e:	f000 fdf9 	bl	8005f14 <UART_SetConfig>
 8005322:	687b      	ldr	r3, [r7, #4]
 8005324:	681b      	ldr	r3, [r3, #0]
 8005326:	691a      	ldr	r2, [r3, #16]
 8005328:	687b      	ldr	r3, [r7, #4]
 800532a:	681b      	ldr	r3, [r3, #0]
 800532c:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8005330:	611a      	str	r2, [r3, #16]
 8005332:	687b      	ldr	r3, [r7, #4]
 8005334:	681b      	ldr	r3, [r3, #0]
 8005336:	695a      	ldr	r2, [r3, #20]
 8005338:	687b      	ldr	r3, [r7, #4]
 800533a:	681b      	ldr	r3, [r3, #0]
 800533c:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8005340:	615a      	str	r2, [r3, #20]
 8005342:	687b      	ldr	r3, [r7, #4]
 8005344:	681b      	ldr	r3, [r3, #0]
 8005346:	68da      	ldr	r2, [r3, #12]
 8005348:	687b      	ldr	r3, [r7, #4]
 800534a:	681b      	ldr	r3, [r3, #0]
 800534c:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8005350:	60da      	str	r2, [r3, #12]
 8005352:	687b      	ldr	r3, [r7, #4]
 8005354:	2200      	movs	r2, #0
 8005356:	645a      	str	r2, [r3, #68]	@ 0x44
 8005358:	687b      	ldr	r3, [r7, #4]
 800535a:	2220      	movs	r2, #32
 800535c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005360:	687b      	ldr	r3, [r7, #4]
 8005362:	2220      	movs	r2, #32
 8005364:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005368:	687b      	ldr	r3, [r7, #4]
 800536a:	2200      	movs	r2, #0
 800536c:	635a      	str	r2, [r3, #52]	@ 0x34
 800536e:	2300      	movs	r3, #0
 8005370:	4618      	mov	r0, r3
 8005372:	3708      	adds	r7, #8
 8005374:	46bd      	mov	sp, r7
 8005376:	bd80      	pop	{r7, pc}

08005378 <HAL_UART_Transmit>:
 8005378:	b580      	push	{r7, lr}
 800537a:	b08a      	sub	sp, #40	@ 0x28
 800537c:	af02      	add	r7, sp, #8
 800537e:	60f8      	str	r0, [r7, #12]
 8005380:	60b9      	str	r1, [r7, #8]
 8005382:	603b      	str	r3, [r7, #0]
 8005384:	4613      	mov	r3, r2
 8005386:	80fb      	strh	r3, [r7, #6]
 8005388:	2300      	movs	r3, #0
 800538a:	617b      	str	r3, [r7, #20]
 800538c:	68fb      	ldr	r3, [r7, #12]
 800538e:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8005392:	b2db      	uxtb	r3, r3
 8005394:	2b20      	cmp	r3, #32
 8005396:	d175      	bne.n	8005484 <HAL_UART_Transmit+0x10c>
 8005398:	68bb      	ldr	r3, [r7, #8]
 800539a:	2b00      	cmp	r3, #0
 800539c:	d002      	beq.n	80053a4 <HAL_UART_Transmit+0x2c>
 800539e:	88fb      	ldrh	r3, [r7, #6]
 80053a0:	2b00      	cmp	r3, #0
 80053a2:	d101      	bne.n	80053a8 <HAL_UART_Transmit+0x30>
 80053a4:	2301      	movs	r3, #1
 80053a6:	e06e      	b.n	8005486 <HAL_UART_Transmit+0x10e>
 80053a8:	68fb      	ldr	r3, [r7, #12]
 80053aa:	2200      	movs	r2, #0
 80053ac:	645a      	str	r2, [r3, #68]	@ 0x44
 80053ae:	68fb      	ldr	r3, [r7, #12]
 80053b0:	2221      	movs	r2, #33	@ 0x21
 80053b2:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80053b6:	f7fd fdfb 	bl	8002fb0 <HAL_GetTick>
 80053ba:	6178      	str	r0, [r7, #20]
 80053bc:	68fb      	ldr	r3, [r7, #12]
 80053be:	88fa      	ldrh	r2, [r7, #6]
 80053c0:	849a      	strh	r2, [r3, #36]	@ 0x24
 80053c2:	68fb      	ldr	r3, [r7, #12]
 80053c4:	88fa      	ldrh	r2, [r7, #6]
 80053c6:	84da      	strh	r2, [r3, #38]	@ 0x26
 80053c8:	68fb      	ldr	r3, [r7, #12]
 80053ca:	689b      	ldr	r3, [r3, #8]
 80053cc:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80053d0:	d108      	bne.n	80053e4 <HAL_UART_Transmit+0x6c>
 80053d2:	68fb      	ldr	r3, [r7, #12]
 80053d4:	691b      	ldr	r3, [r3, #16]
 80053d6:	2b00      	cmp	r3, #0
 80053d8:	d104      	bne.n	80053e4 <HAL_UART_Transmit+0x6c>
 80053da:	2300      	movs	r3, #0
 80053dc:	61fb      	str	r3, [r7, #28]
 80053de:	68bb      	ldr	r3, [r7, #8]
 80053e0:	61bb      	str	r3, [r7, #24]
 80053e2:	e003      	b.n	80053ec <HAL_UART_Transmit+0x74>
 80053e4:	68bb      	ldr	r3, [r7, #8]
 80053e6:	61fb      	str	r3, [r7, #28]
 80053e8:	2300      	movs	r3, #0
 80053ea:	61bb      	str	r3, [r7, #24]
 80053ec:	e02e      	b.n	800544c <HAL_UART_Transmit+0xd4>
 80053ee:	683b      	ldr	r3, [r7, #0]
 80053f0:	9300      	str	r3, [sp, #0]
 80053f2:	697b      	ldr	r3, [r7, #20]
 80053f4:	2200      	movs	r2, #0
 80053f6:	2180      	movs	r1, #128	@ 0x80
 80053f8:	68f8      	ldr	r0, [r7, #12]
 80053fa:	f000 fb97 	bl	8005b2c <UART_WaitOnFlagUntilTimeout>
 80053fe:	4603      	mov	r3, r0
 8005400:	2b00      	cmp	r3, #0
 8005402:	d005      	beq.n	8005410 <HAL_UART_Transmit+0x98>
 8005404:	68fb      	ldr	r3, [r7, #12]
 8005406:	2220      	movs	r2, #32
 8005408:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800540c:	2303      	movs	r3, #3
 800540e:	e03a      	b.n	8005486 <HAL_UART_Transmit+0x10e>
 8005410:	69fb      	ldr	r3, [r7, #28]
 8005412:	2b00      	cmp	r3, #0
 8005414:	d10b      	bne.n	800542e <HAL_UART_Transmit+0xb6>
 8005416:	69bb      	ldr	r3, [r7, #24]
 8005418:	881b      	ldrh	r3, [r3, #0]
 800541a:	461a      	mov	r2, r3
 800541c:	68fb      	ldr	r3, [r7, #12]
 800541e:	681b      	ldr	r3, [r3, #0]
 8005420:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8005424:	605a      	str	r2, [r3, #4]
 8005426:	69bb      	ldr	r3, [r7, #24]
 8005428:	3302      	adds	r3, #2
 800542a:	61bb      	str	r3, [r7, #24]
 800542c:	e007      	b.n	800543e <HAL_UART_Transmit+0xc6>
 800542e:	69fb      	ldr	r3, [r7, #28]
 8005430:	781a      	ldrb	r2, [r3, #0]
 8005432:	68fb      	ldr	r3, [r7, #12]
 8005434:	681b      	ldr	r3, [r3, #0]
 8005436:	605a      	str	r2, [r3, #4]
 8005438:	69fb      	ldr	r3, [r7, #28]
 800543a:	3301      	adds	r3, #1
 800543c:	61fb      	str	r3, [r7, #28]
 800543e:	68fb      	ldr	r3, [r7, #12]
 8005440:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8005442:	b29b      	uxth	r3, r3
 8005444:	3b01      	subs	r3, #1
 8005446:	b29a      	uxth	r2, r3
 8005448:	68fb      	ldr	r3, [r7, #12]
 800544a:	84da      	strh	r2, [r3, #38]	@ 0x26
 800544c:	68fb      	ldr	r3, [r7, #12]
 800544e:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8005450:	b29b      	uxth	r3, r3
 8005452:	2b00      	cmp	r3, #0
 8005454:	d1cb      	bne.n	80053ee <HAL_UART_Transmit+0x76>
 8005456:	683b      	ldr	r3, [r7, #0]
 8005458:	9300      	str	r3, [sp, #0]
 800545a:	697b      	ldr	r3, [r7, #20]
 800545c:	2200      	movs	r2, #0
 800545e:	2140      	movs	r1, #64	@ 0x40
 8005460:	68f8      	ldr	r0, [r7, #12]
 8005462:	f000 fb63 	bl	8005b2c <UART_WaitOnFlagUntilTimeout>
 8005466:	4603      	mov	r3, r0
 8005468:	2b00      	cmp	r3, #0
 800546a:	d005      	beq.n	8005478 <HAL_UART_Transmit+0x100>
 800546c:	68fb      	ldr	r3, [r7, #12]
 800546e:	2220      	movs	r2, #32
 8005470:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005474:	2303      	movs	r3, #3
 8005476:	e006      	b.n	8005486 <HAL_UART_Transmit+0x10e>
 8005478:	68fb      	ldr	r3, [r7, #12]
 800547a:	2220      	movs	r2, #32
 800547c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005480:	2300      	movs	r3, #0
 8005482:	e000      	b.n	8005486 <HAL_UART_Transmit+0x10e>
 8005484:	2302      	movs	r3, #2
 8005486:	4618      	mov	r0, r3
 8005488:	3720      	adds	r7, #32
 800548a:	46bd      	mov	sp, r7
 800548c:	bd80      	pop	{r7, pc}

0800548e <HAL_UART_Receive>:
 800548e:	b580      	push	{r7, lr}
 8005490:	b08a      	sub	sp, #40	@ 0x28
 8005492:	af02      	add	r7, sp, #8
 8005494:	60f8      	str	r0, [r7, #12]
 8005496:	60b9      	str	r1, [r7, #8]
 8005498:	603b      	str	r3, [r7, #0]
 800549a:	4613      	mov	r3, r2
 800549c:	80fb      	strh	r3, [r7, #6]
 800549e:	2300      	movs	r3, #0
 80054a0:	617b      	str	r3, [r7, #20]
 80054a2:	68fb      	ldr	r3, [r7, #12]
 80054a4:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 80054a8:	b2db      	uxtb	r3, r3
 80054aa:	2b20      	cmp	r3, #32
 80054ac:	f040 8081 	bne.w	80055b2 <HAL_UART_Receive+0x124>
 80054b0:	68bb      	ldr	r3, [r7, #8]
 80054b2:	2b00      	cmp	r3, #0
 80054b4:	d002      	beq.n	80054bc <HAL_UART_Receive+0x2e>
 80054b6:	88fb      	ldrh	r3, [r7, #6]
 80054b8:	2b00      	cmp	r3, #0
 80054ba:	d101      	bne.n	80054c0 <HAL_UART_Receive+0x32>
 80054bc:	2301      	movs	r3, #1
 80054be:	e079      	b.n	80055b4 <HAL_UART_Receive+0x126>
 80054c0:	68fb      	ldr	r3, [r7, #12]
 80054c2:	2200      	movs	r2, #0
 80054c4:	645a      	str	r2, [r3, #68]	@ 0x44
 80054c6:	68fb      	ldr	r3, [r7, #12]
 80054c8:	2222      	movs	r2, #34	@ 0x22
 80054ca:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80054ce:	68fb      	ldr	r3, [r7, #12]
 80054d0:	2200      	movs	r2, #0
 80054d2:	631a      	str	r2, [r3, #48]	@ 0x30
 80054d4:	f7fd fd6c 	bl	8002fb0 <HAL_GetTick>
 80054d8:	6178      	str	r0, [r7, #20]
 80054da:	68fb      	ldr	r3, [r7, #12]
 80054dc:	88fa      	ldrh	r2, [r7, #6]
 80054de:	859a      	strh	r2, [r3, #44]	@ 0x2c
 80054e0:	68fb      	ldr	r3, [r7, #12]
 80054e2:	88fa      	ldrh	r2, [r7, #6]
 80054e4:	85da      	strh	r2, [r3, #46]	@ 0x2e
 80054e6:	68fb      	ldr	r3, [r7, #12]
 80054e8:	689b      	ldr	r3, [r3, #8]
 80054ea:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80054ee:	d108      	bne.n	8005502 <HAL_UART_Receive+0x74>
 80054f0:	68fb      	ldr	r3, [r7, #12]
 80054f2:	691b      	ldr	r3, [r3, #16]
 80054f4:	2b00      	cmp	r3, #0
 80054f6:	d104      	bne.n	8005502 <HAL_UART_Receive+0x74>
 80054f8:	2300      	movs	r3, #0
 80054fa:	61fb      	str	r3, [r7, #28]
 80054fc:	68bb      	ldr	r3, [r7, #8]
 80054fe:	61bb      	str	r3, [r7, #24]
 8005500:	e003      	b.n	800550a <HAL_UART_Receive+0x7c>
 8005502:	68bb      	ldr	r3, [r7, #8]
 8005504:	61fb      	str	r3, [r7, #28]
 8005506:	2300      	movs	r3, #0
 8005508:	61bb      	str	r3, [r7, #24]
 800550a:	e047      	b.n	800559c <HAL_UART_Receive+0x10e>
 800550c:	683b      	ldr	r3, [r7, #0]
 800550e:	9300      	str	r3, [sp, #0]
 8005510:	697b      	ldr	r3, [r7, #20]
 8005512:	2200      	movs	r2, #0
 8005514:	2120      	movs	r1, #32
 8005516:	68f8      	ldr	r0, [r7, #12]
 8005518:	f000 fb08 	bl	8005b2c <UART_WaitOnFlagUntilTimeout>
 800551c:	4603      	mov	r3, r0
 800551e:	2b00      	cmp	r3, #0
 8005520:	d005      	beq.n	800552e <HAL_UART_Receive+0xa0>
 8005522:	68fb      	ldr	r3, [r7, #12]
 8005524:	2220      	movs	r2, #32
 8005526:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800552a:	2303      	movs	r3, #3
 800552c:	e042      	b.n	80055b4 <HAL_UART_Receive+0x126>
 800552e:	69fb      	ldr	r3, [r7, #28]
 8005530:	2b00      	cmp	r3, #0
 8005532:	d10c      	bne.n	800554e <HAL_UART_Receive+0xc0>
 8005534:	68fb      	ldr	r3, [r7, #12]
 8005536:	681b      	ldr	r3, [r3, #0]
 8005538:	685b      	ldr	r3, [r3, #4]
 800553a:	b29b      	uxth	r3, r3
 800553c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8005540:	b29a      	uxth	r2, r3
 8005542:	69bb      	ldr	r3, [r7, #24]
 8005544:	801a      	strh	r2, [r3, #0]
 8005546:	69bb      	ldr	r3, [r7, #24]
 8005548:	3302      	adds	r3, #2
 800554a:	61bb      	str	r3, [r7, #24]
 800554c:	e01f      	b.n	800558e <HAL_UART_Receive+0x100>
 800554e:	68fb      	ldr	r3, [r7, #12]
 8005550:	689b      	ldr	r3, [r3, #8]
 8005552:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005556:	d007      	beq.n	8005568 <HAL_UART_Receive+0xda>
 8005558:	68fb      	ldr	r3, [r7, #12]
 800555a:	689b      	ldr	r3, [r3, #8]
 800555c:	2b00      	cmp	r3, #0
 800555e:	d10a      	bne.n	8005576 <HAL_UART_Receive+0xe8>
 8005560:	68fb      	ldr	r3, [r7, #12]
 8005562:	691b      	ldr	r3, [r3, #16]
 8005564:	2b00      	cmp	r3, #0
 8005566:	d106      	bne.n	8005576 <HAL_UART_Receive+0xe8>
 8005568:	68fb      	ldr	r3, [r7, #12]
 800556a:	681b      	ldr	r3, [r3, #0]
 800556c:	685b      	ldr	r3, [r3, #4]
 800556e:	b2da      	uxtb	r2, r3
 8005570:	69fb      	ldr	r3, [r7, #28]
 8005572:	701a      	strb	r2, [r3, #0]
 8005574:	e008      	b.n	8005588 <HAL_UART_Receive+0xfa>
 8005576:	68fb      	ldr	r3, [r7, #12]
 8005578:	681b      	ldr	r3, [r3, #0]
 800557a:	685b      	ldr	r3, [r3, #4]
 800557c:	b2db      	uxtb	r3, r3
 800557e:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8005582:	b2da      	uxtb	r2, r3
 8005584:	69fb      	ldr	r3, [r7, #28]
 8005586:	701a      	strb	r2, [r3, #0]
 8005588:	69fb      	ldr	r3, [r7, #28]
 800558a:	3301      	adds	r3, #1
 800558c:	61fb      	str	r3, [r7, #28]
 800558e:	68fb      	ldr	r3, [r7, #12]
 8005590:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8005592:	b29b      	uxth	r3, r3
 8005594:	3b01      	subs	r3, #1
 8005596:	b29a      	uxth	r2, r3
 8005598:	68fb      	ldr	r3, [r7, #12]
 800559a:	85da      	strh	r2, [r3, #46]	@ 0x2e
 800559c:	68fb      	ldr	r3, [r7, #12]
 800559e:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 80055a0:	b29b      	uxth	r3, r3
 80055a2:	2b00      	cmp	r3, #0
 80055a4:	d1b2      	bne.n	800550c <HAL_UART_Receive+0x7e>
 80055a6:	68fb      	ldr	r3, [r7, #12]
 80055a8:	2220      	movs	r2, #32
 80055aa:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80055ae:	2300      	movs	r3, #0
 80055b0:	e000      	b.n	80055b4 <HAL_UART_Receive+0x126>
 80055b2:	2302      	movs	r3, #2
 80055b4:	4618      	mov	r0, r3
 80055b6:	3720      	adds	r7, #32
 80055b8:	46bd      	mov	sp, r7
 80055ba:	bd80      	pop	{r7, pc}

080055bc <HAL_UART_IRQHandler>:
 80055bc:	b580      	push	{r7, lr}
 80055be:	b0ba      	sub	sp, #232	@ 0xe8
 80055c0:	af00      	add	r7, sp, #0
 80055c2:	6078      	str	r0, [r7, #4]
 80055c4:	687b      	ldr	r3, [r7, #4]
 80055c6:	681b      	ldr	r3, [r3, #0]
 80055c8:	681b      	ldr	r3, [r3, #0]
 80055ca:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 80055ce:	687b      	ldr	r3, [r7, #4]
 80055d0:	681b      	ldr	r3, [r3, #0]
 80055d2:	68db      	ldr	r3, [r3, #12]
 80055d4:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 80055d8:	687b      	ldr	r3, [r7, #4]
 80055da:	681b      	ldr	r3, [r3, #0]
 80055dc:	695b      	ldr	r3, [r3, #20]
 80055de:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 80055e2:	2300      	movs	r3, #0
 80055e4:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 80055e8:	2300      	movs	r3, #0
 80055ea:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 80055ee:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80055f2:	f003 030f 	and.w	r3, r3, #15
 80055f6:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 80055fa:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 80055fe:	2b00      	cmp	r3, #0
 8005600:	d10f      	bne.n	8005622 <HAL_UART_IRQHandler+0x66>
 8005602:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005606:	f003 0320 	and.w	r3, r3, #32
 800560a:	2b00      	cmp	r3, #0
 800560c:	d009      	beq.n	8005622 <HAL_UART_IRQHandler+0x66>
 800560e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005612:	f003 0320 	and.w	r3, r3, #32
 8005616:	2b00      	cmp	r3, #0
 8005618:	d003      	beq.n	8005622 <HAL_UART_IRQHandler+0x66>
 800561a:	6878      	ldr	r0, [r7, #4]
 800561c:	f000 fbbc 	bl	8005d98 <UART_Receive_IT>
 8005620:	e25b      	b.n	8005ada <HAL_UART_IRQHandler+0x51e>
 8005622:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8005626:	2b00      	cmp	r3, #0
 8005628:	f000 80de 	beq.w	80057e8 <HAL_UART_IRQHandler+0x22c>
 800562c:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8005630:	f003 0301 	and.w	r3, r3, #1
 8005634:	2b00      	cmp	r3, #0
 8005636:	d106      	bne.n	8005646 <HAL_UART_IRQHandler+0x8a>
 8005638:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800563c:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 8005640:	2b00      	cmp	r3, #0
 8005642:	f000 80d1 	beq.w	80057e8 <HAL_UART_IRQHandler+0x22c>
 8005646:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800564a:	f003 0301 	and.w	r3, r3, #1
 800564e:	2b00      	cmp	r3, #0
 8005650:	d00b      	beq.n	800566a <HAL_UART_IRQHandler+0xae>
 8005652:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005656:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800565a:	2b00      	cmp	r3, #0
 800565c:	d005      	beq.n	800566a <HAL_UART_IRQHandler+0xae>
 800565e:	687b      	ldr	r3, [r7, #4]
 8005660:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005662:	f043 0201 	orr.w	r2, r3, #1
 8005666:	687b      	ldr	r3, [r7, #4]
 8005668:	645a      	str	r2, [r3, #68]	@ 0x44
 800566a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800566e:	f003 0304 	and.w	r3, r3, #4
 8005672:	2b00      	cmp	r3, #0
 8005674:	d00b      	beq.n	800568e <HAL_UART_IRQHandler+0xd2>
 8005676:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 800567a:	f003 0301 	and.w	r3, r3, #1
 800567e:	2b00      	cmp	r3, #0
 8005680:	d005      	beq.n	800568e <HAL_UART_IRQHandler+0xd2>
 8005682:	687b      	ldr	r3, [r7, #4]
 8005684:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005686:	f043 0202 	orr.w	r2, r3, #2
 800568a:	687b      	ldr	r3, [r7, #4]
 800568c:	645a      	str	r2, [r3, #68]	@ 0x44
 800568e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005692:	f003 0302 	and.w	r3, r3, #2
 8005696:	2b00      	cmp	r3, #0
 8005698:	d00b      	beq.n	80056b2 <HAL_UART_IRQHandler+0xf6>
 800569a:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 800569e:	f003 0301 	and.w	r3, r3, #1
 80056a2:	2b00      	cmp	r3, #0
 80056a4:	d005      	beq.n	80056b2 <HAL_UART_IRQHandler+0xf6>
 80056a6:	687b      	ldr	r3, [r7, #4]
 80056a8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80056aa:	f043 0204 	orr.w	r2, r3, #4
 80056ae:	687b      	ldr	r3, [r7, #4]
 80056b0:	645a      	str	r2, [r3, #68]	@ 0x44
 80056b2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80056b6:	f003 0308 	and.w	r3, r3, #8
 80056ba:	2b00      	cmp	r3, #0
 80056bc:	d011      	beq.n	80056e2 <HAL_UART_IRQHandler+0x126>
 80056be:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80056c2:	f003 0320 	and.w	r3, r3, #32
 80056c6:	2b00      	cmp	r3, #0
 80056c8:	d105      	bne.n	80056d6 <HAL_UART_IRQHandler+0x11a>
 80056ca:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80056ce:	f003 0301 	and.w	r3, r3, #1
 80056d2:	2b00      	cmp	r3, #0
 80056d4:	d005      	beq.n	80056e2 <HAL_UART_IRQHandler+0x126>
 80056d6:	687b      	ldr	r3, [r7, #4]
 80056d8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80056da:	f043 0208 	orr.w	r2, r3, #8
 80056de:	687b      	ldr	r3, [r7, #4]
 80056e0:	645a      	str	r2, [r3, #68]	@ 0x44
 80056e2:	687b      	ldr	r3, [r7, #4]
 80056e4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80056e6:	2b00      	cmp	r3, #0
 80056e8:	f000 81f2 	beq.w	8005ad0 <HAL_UART_IRQHandler+0x514>
 80056ec:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80056f0:	f003 0320 	and.w	r3, r3, #32
 80056f4:	2b00      	cmp	r3, #0
 80056f6:	d008      	beq.n	800570a <HAL_UART_IRQHandler+0x14e>
 80056f8:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80056fc:	f003 0320 	and.w	r3, r3, #32
 8005700:	2b00      	cmp	r3, #0
 8005702:	d002      	beq.n	800570a <HAL_UART_IRQHandler+0x14e>
 8005704:	6878      	ldr	r0, [r7, #4]
 8005706:	f000 fb47 	bl	8005d98 <UART_Receive_IT>
 800570a:	687b      	ldr	r3, [r7, #4]
 800570c:	681b      	ldr	r3, [r3, #0]
 800570e:	695b      	ldr	r3, [r3, #20]
 8005710:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005714:	2b00      	cmp	r3, #0
 8005716:	bf14      	ite	ne
 8005718:	2301      	movne	r3, #1
 800571a:	2300      	moveq	r3, #0
 800571c:	b2db      	uxtb	r3, r3
 800571e:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8005722:	687b      	ldr	r3, [r7, #4]
 8005724:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005726:	f003 0308 	and.w	r3, r3, #8
 800572a:	2b00      	cmp	r3, #0
 800572c:	d103      	bne.n	8005736 <HAL_UART_IRQHandler+0x17a>
 800572e:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 8005732:	2b00      	cmp	r3, #0
 8005734:	d04f      	beq.n	80057d6 <HAL_UART_IRQHandler+0x21a>
 8005736:	6878      	ldr	r0, [r7, #4]
 8005738:	f000 fa51 	bl	8005bde <UART_EndRxTransfer>
 800573c:	687b      	ldr	r3, [r7, #4]
 800573e:	681b      	ldr	r3, [r3, #0]
 8005740:	695b      	ldr	r3, [r3, #20]
 8005742:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005746:	2b00      	cmp	r3, #0
 8005748:	d041      	beq.n	80057ce <HAL_UART_IRQHandler+0x212>
 800574a:	687b      	ldr	r3, [r7, #4]
 800574c:	681b      	ldr	r3, [r3, #0]
 800574e:	3314      	adds	r3, #20
 8005750:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8005754:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8005758:	e853 3f00 	ldrex	r3, [r3]
 800575c:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8005760:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8005764:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8005768:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 800576c:	687b      	ldr	r3, [r7, #4]
 800576e:	681b      	ldr	r3, [r3, #0]
 8005770:	3314      	adds	r3, #20
 8005772:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 8005776:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 800577a:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 800577e:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 8005782:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 8005786:	e841 2300 	strex	r3, r2, [r1]
 800578a:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 800578e:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 8005792:	2b00      	cmp	r3, #0
 8005794:	d1d9      	bne.n	800574a <HAL_UART_IRQHandler+0x18e>
 8005796:	687b      	ldr	r3, [r7, #4]
 8005798:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800579a:	2b00      	cmp	r3, #0
 800579c:	d013      	beq.n	80057c6 <HAL_UART_IRQHandler+0x20a>
 800579e:	687b      	ldr	r3, [r7, #4]
 80057a0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80057a2:	4a7e      	ldr	r2, [pc, #504]	@ (800599c <HAL_UART_IRQHandler+0x3e0>)
 80057a4:	635a      	str	r2, [r3, #52]	@ 0x34
 80057a6:	687b      	ldr	r3, [r7, #4]
 80057a8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80057aa:	4618      	mov	r0, r3
 80057ac:	f7fd fdd2 	bl	8003354 <HAL_DMA_Abort_IT>
 80057b0:	4603      	mov	r3, r0
 80057b2:	2b00      	cmp	r3, #0
 80057b4:	d016      	beq.n	80057e4 <HAL_UART_IRQHandler+0x228>
 80057b6:	687b      	ldr	r3, [r7, #4]
 80057b8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80057ba:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80057bc:	687a      	ldr	r2, [r7, #4]
 80057be:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 80057c0:	4610      	mov	r0, r2
 80057c2:	4798      	blx	r3
 80057c4:	e00e      	b.n	80057e4 <HAL_UART_IRQHandler+0x228>
 80057c6:	6878      	ldr	r0, [r7, #4]
 80057c8:	f000 f99c 	bl	8005b04 <HAL_UART_ErrorCallback>
 80057cc:	e00a      	b.n	80057e4 <HAL_UART_IRQHandler+0x228>
 80057ce:	6878      	ldr	r0, [r7, #4]
 80057d0:	f000 f998 	bl	8005b04 <HAL_UART_ErrorCallback>
 80057d4:	e006      	b.n	80057e4 <HAL_UART_IRQHandler+0x228>
 80057d6:	6878      	ldr	r0, [r7, #4]
 80057d8:	f000 f994 	bl	8005b04 <HAL_UART_ErrorCallback>
 80057dc:	687b      	ldr	r3, [r7, #4]
 80057de:	2200      	movs	r2, #0
 80057e0:	645a      	str	r2, [r3, #68]	@ 0x44
 80057e2:	e175      	b.n	8005ad0 <HAL_UART_IRQHandler+0x514>
 80057e4:	bf00      	nop
 80057e6:	e173      	b.n	8005ad0 <HAL_UART_IRQHandler+0x514>
 80057e8:	687b      	ldr	r3, [r7, #4]
 80057ea:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80057ec:	2b01      	cmp	r3, #1
 80057ee:	f040 814f 	bne.w	8005a90 <HAL_UART_IRQHandler+0x4d4>
 80057f2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80057f6:	f003 0310 	and.w	r3, r3, #16
 80057fa:	2b00      	cmp	r3, #0
 80057fc:	f000 8148 	beq.w	8005a90 <HAL_UART_IRQHandler+0x4d4>
 8005800:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005804:	f003 0310 	and.w	r3, r3, #16
 8005808:	2b00      	cmp	r3, #0
 800580a:	f000 8141 	beq.w	8005a90 <HAL_UART_IRQHandler+0x4d4>
 800580e:	2300      	movs	r3, #0
 8005810:	60bb      	str	r3, [r7, #8]
 8005812:	687b      	ldr	r3, [r7, #4]
 8005814:	681b      	ldr	r3, [r3, #0]
 8005816:	681b      	ldr	r3, [r3, #0]
 8005818:	60bb      	str	r3, [r7, #8]
 800581a:	687b      	ldr	r3, [r7, #4]
 800581c:	681b      	ldr	r3, [r3, #0]
 800581e:	685b      	ldr	r3, [r3, #4]
 8005820:	60bb      	str	r3, [r7, #8]
 8005822:	68bb      	ldr	r3, [r7, #8]
 8005824:	687b      	ldr	r3, [r7, #4]
 8005826:	681b      	ldr	r3, [r3, #0]
 8005828:	695b      	ldr	r3, [r3, #20]
 800582a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800582e:	2b00      	cmp	r3, #0
 8005830:	f000 80b6 	beq.w	80059a0 <HAL_UART_IRQHandler+0x3e4>
 8005834:	687b      	ldr	r3, [r7, #4]
 8005836:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005838:	681b      	ldr	r3, [r3, #0]
 800583a:	685b      	ldr	r3, [r3, #4]
 800583c:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 8005840:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 8005844:	2b00      	cmp	r3, #0
 8005846:	f000 8145 	beq.w	8005ad4 <HAL_UART_IRQHandler+0x518>
 800584a:	687b      	ldr	r3, [r7, #4]
 800584c:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 800584e:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8005852:	429a      	cmp	r2, r3
 8005854:	f080 813e 	bcs.w	8005ad4 <HAL_UART_IRQHandler+0x518>
 8005858:	687b      	ldr	r3, [r7, #4]
 800585a:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 800585e:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8005860:	687b      	ldr	r3, [r7, #4]
 8005862:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005864:	699b      	ldr	r3, [r3, #24]
 8005866:	2b20      	cmp	r3, #32
 8005868:	f000 8088 	beq.w	800597c <HAL_UART_IRQHandler+0x3c0>
 800586c:	687b      	ldr	r3, [r7, #4]
 800586e:	681b      	ldr	r3, [r3, #0]
 8005870:	330c      	adds	r3, #12
 8005872:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8005876:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 800587a:	e853 3f00 	ldrex	r3, [r3]
 800587e:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8005882:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8005886:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800588a:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 800588e:	687b      	ldr	r3, [r7, #4]
 8005890:	681b      	ldr	r3, [r3, #0]
 8005892:	330c      	adds	r3, #12
 8005894:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 8005898:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 800589c:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80058a0:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 80058a4:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 80058a8:	e841 2300 	strex	r3, r2, [r1]
 80058ac:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 80058b0:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80058b4:	2b00      	cmp	r3, #0
 80058b6:	d1d9      	bne.n	800586c <HAL_UART_IRQHandler+0x2b0>
 80058b8:	687b      	ldr	r3, [r7, #4]
 80058ba:	681b      	ldr	r3, [r3, #0]
 80058bc:	3314      	adds	r3, #20
 80058be:	677b      	str	r3, [r7, #116]	@ 0x74
 80058c0:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 80058c2:	e853 3f00 	ldrex	r3, [r3]
 80058c6:	673b      	str	r3, [r7, #112]	@ 0x70
 80058c8:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 80058ca:	f023 0301 	bic.w	r3, r3, #1
 80058ce:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80058d2:	687b      	ldr	r3, [r7, #4]
 80058d4:	681b      	ldr	r3, [r3, #0]
 80058d6:	3314      	adds	r3, #20
 80058d8:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 80058dc:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 80058e0:	67fb      	str	r3, [r7, #124]	@ 0x7c
 80058e2:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 80058e4:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 80058e8:	e841 2300 	strex	r3, r2, [r1]
 80058ec:	67bb      	str	r3, [r7, #120]	@ 0x78
 80058ee:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 80058f0:	2b00      	cmp	r3, #0
 80058f2:	d1e1      	bne.n	80058b8 <HAL_UART_IRQHandler+0x2fc>
 80058f4:	687b      	ldr	r3, [r7, #4]
 80058f6:	681b      	ldr	r3, [r3, #0]
 80058f8:	3314      	adds	r3, #20
 80058fa:	663b      	str	r3, [r7, #96]	@ 0x60
 80058fc:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 80058fe:	e853 3f00 	ldrex	r3, [r3]
 8005902:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8005904:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8005906:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800590a:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 800590e:	687b      	ldr	r3, [r7, #4]
 8005910:	681b      	ldr	r3, [r3, #0]
 8005912:	3314      	adds	r3, #20
 8005914:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 8005918:	66fa      	str	r2, [r7, #108]	@ 0x6c
 800591a:	66bb      	str	r3, [r7, #104]	@ 0x68
 800591c:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 800591e:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 8005920:	e841 2300 	strex	r3, r2, [r1]
 8005924:	667b      	str	r3, [r7, #100]	@ 0x64
 8005926:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8005928:	2b00      	cmp	r3, #0
 800592a:	d1e3      	bne.n	80058f4 <HAL_UART_IRQHandler+0x338>
 800592c:	687b      	ldr	r3, [r7, #4]
 800592e:	2220      	movs	r2, #32
 8005930:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005934:	687b      	ldr	r3, [r7, #4]
 8005936:	2200      	movs	r2, #0
 8005938:	631a      	str	r2, [r3, #48]	@ 0x30
 800593a:	687b      	ldr	r3, [r7, #4]
 800593c:	681b      	ldr	r3, [r3, #0]
 800593e:	330c      	adds	r3, #12
 8005940:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8005942:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8005944:	e853 3f00 	ldrex	r3, [r3]
 8005948:	64bb      	str	r3, [r7, #72]	@ 0x48
 800594a:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800594c:	f023 0310 	bic.w	r3, r3, #16
 8005950:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8005954:	687b      	ldr	r3, [r7, #4]
 8005956:	681b      	ldr	r3, [r3, #0]
 8005958:	330c      	adds	r3, #12
 800595a:	f8d7 20ac 	ldr.w	r2, [r7, #172]	@ 0xac
 800595e:	65ba      	str	r2, [r7, #88]	@ 0x58
 8005960:	657b      	str	r3, [r7, #84]	@ 0x54
 8005962:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8005964:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8005966:	e841 2300 	strex	r3, r2, [r1]
 800596a:	653b      	str	r3, [r7, #80]	@ 0x50
 800596c:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800596e:	2b00      	cmp	r3, #0
 8005970:	d1e3      	bne.n	800593a <HAL_UART_IRQHandler+0x37e>
 8005972:	687b      	ldr	r3, [r7, #4]
 8005974:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005976:	4618      	mov	r0, r3
 8005978:	f7fd fcb0 	bl	80032dc <HAL_DMA_Abort>
 800597c:	687b      	ldr	r3, [r7, #4]
 800597e:	2202      	movs	r2, #2
 8005980:	635a      	str	r2, [r3, #52]	@ 0x34
 8005982:	687b      	ldr	r3, [r7, #4]
 8005984:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8005986:	687b      	ldr	r3, [r7, #4]
 8005988:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 800598a:	b29b      	uxth	r3, r3
 800598c:	1ad3      	subs	r3, r2, r3
 800598e:	b29b      	uxth	r3, r3
 8005990:	4619      	mov	r1, r3
 8005992:	6878      	ldr	r0, [r7, #4]
 8005994:	f000 f8bf 	bl	8005b16 <HAL_UARTEx_RxEventCallback>
 8005998:	e09c      	b.n	8005ad4 <HAL_UART_IRQHandler+0x518>
 800599a:	bf00      	nop
 800599c:	08005ca3 	.word	0x08005ca3
 80059a0:	687b      	ldr	r3, [r7, #4]
 80059a2:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 80059a4:	687b      	ldr	r3, [r7, #4]
 80059a6:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 80059a8:	b29b      	uxth	r3, r3
 80059aa:	1ad3      	subs	r3, r2, r3
 80059ac:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 80059b0:	687b      	ldr	r3, [r7, #4]
 80059b2:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 80059b4:	b29b      	uxth	r3, r3
 80059b6:	2b00      	cmp	r3, #0
 80059b8:	f000 808e 	beq.w	8005ad8 <HAL_UART_IRQHandler+0x51c>
 80059bc:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 80059c0:	2b00      	cmp	r3, #0
 80059c2:	f000 8089 	beq.w	8005ad8 <HAL_UART_IRQHandler+0x51c>
 80059c6:	687b      	ldr	r3, [r7, #4]
 80059c8:	681b      	ldr	r3, [r3, #0]
 80059ca:	330c      	adds	r3, #12
 80059cc:	63bb      	str	r3, [r7, #56]	@ 0x38
 80059ce:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80059d0:	e853 3f00 	ldrex	r3, [r3]
 80059d4:	637b      	str	r3, [r7, #52]	@ 0x34
 80059d6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80059d8:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 80059dc:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 80059e0:	687b      	ldr	r3, [r7, #4]
 80059e2:	681b      	ldr	r3, [r3, #0]
 80059e4:	330c      	adds	r3, #12
 80059e6:	f8d7 20c8 	ldr.w	r2, [r7, #200]	@ 0xc8
 80059ea:	647a      	str	r2, [r7, #68]	@ 0x44
 80059ec:	643b      	str	r3, [r7, #64]	@ 0x40
 80059ee:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 80059f0:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 80059f2:	e841 2300 	strex	r3, r2, [r1]
 80059f6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80059f8:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80059fa:	2b00      	cmp	r3, #0
 80059fc:	d1e3      	bne.n	80059c6 <HAL_UART_IRQHandler+0x40a>
 80059fe:	687b      	ldr	r3, [r7, #4]
 8005a00:	681b      	ldr	r3, [r3, #0]
 8005a02:	3314      	adds	r3, #20
 8005a04:	627b      	str	r3, [r7, #36]	@ 0x24
 8005a06:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005a08:	e853 3f00 	ldrex	r3, [r3]
 8005a0c:	623b      	str	r3, [r7, #32]
 8005a0e:	6a3b      	ldr	r3, [r7, #32]
 8005a10:	f023 0301 	bic.w	r3, r3, #1
 8005a14:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 8005a18:	687b      	ldr	r3, [r7, #4]
 8005a1a:	681b      	ldr	r3, [r3, #0]
 8005a1c:	3314      	adds	r3, #20
 8005a1e:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 8005a22:	633a      	str	r2, [r7, #48]	@ 0x30
 8005a24:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8005a26:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8005a28:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8005a2a:	e841 2300 	strex	r3, r2, [r1]
 8005a2e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005a30:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005a32:	2b00      	cmp	r3, #0
 8005a34:	d1e3      	bne.n	80059fe <HAL_UART_IRQHandler+0x442>
 8005a36:	687b      	ldr	r3, [r7, #4]
 8005a38:	2220      	movs	r2, #32
 8005a3a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005a3e:	687b      	ldr	r3, [r7, #4]
 8005a40:	2200      	movs	r2, #0
 8005a42:	631a      	str	r2, [r3, #48]	@ 0x30
 8005a44:	687b      	ldr	r3, [r7, #4]
 8005a46:	681b      	ldr	r3, [r3, #0]
 8005a48:	330c      	adds	r3, #12
 8005a4a:	613b      	str	r3, [r7, #16]
 8005a4c:	693b      	ldr	r3, [r7, #16]
 8005a4e:	e853 3f00 	ldrex	r3, [r3]
 8005a52:	60fb      	str	r3, [r7, #12]
 8005a54:	68fb      	ldr	r3, [r7, #12]
 8005a56:	f023 0310 	bic.w	r3, r3, #16
 8005a5a:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8005a5e:	687b      	ldr	r3, [r7, #4]
 8005a60:	681b      	ldr	r3, [r3, #0]
 8005a62:	330c      	adds	r3, #12
 8005a64:	f8d7 20c0 	ldr.w	r2, [r7, #192]	@ 0xc0
 8005a68:	61fa      	str	r2, [r7, #28]
 8005a6a:	61bb      	str	r3, [r7, #24]
 8005a6c:	69b9      	ldr	r1, [r7, #24]
 8005a6e:	69fa      	ldr	r2, [r7, #28]
 8005a70:	e841 2300 	strex	r3, r2, [r1]
 8005a74:	617b      	str	r3, [r7, #20]
 8005a76:	697b      	ldr	r3, [r7, #20]
 8005a78:	2b00      	cmp	r3, #0
 8005a7a:	d1e3      	bne.n	8005a44 <HAL_UART_IRQHandler+0x488>
 8005a7c:	687b      	ldr	r3, [r7, #4]
 8005a7e:	2202      	movs	r2, #2
 8005a80:	635a      	str	r2, [r3, #52]	@ 0x34
 8005a82:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8005a86:	4619      	mov	r1, r3
 8005a88:	6878      	ldr	r0, [r7, #4]
 8005a8a:	f000 f844 	bl	8005b16 <HAL_UARTEx_RxEventCallback>
 8005a8e:	e023      	b.n	8005ad8 <HAL_UART_IRQHandler+0x51c>
 8005a90:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005a94:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005a98:	2b00      	cmp	r3, #0
 8005a9a:	d009      	beq.n	8005ab0 <HAL_UART_IRQHandler+0x4f4>
 8005a9c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005aa0:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005aa4:	2b00      	cmp	r3, #0
 8005aa6:	d003      	beq.n	8005ab0 <HAL_UART_IRQHandler+0x4f4>
 8005aa8:	6878      	ldr	r0, [r7, #4]
 8005aaa:	f000 f90e 	bl	8005cca <UART_Transmit_IT>
 8005aae:	e014      	b.n	8005ada <HAL_UART_IRQHandler+0x51e>
 8005ab0:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005ab4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005ab8:	2b00      	cmp	r3, #0
 8005aba:	d00e      	beq.n	8005ada <HAL_UART_IRQHandler+0x51e>
 8005abc:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005ac0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005ac4:	2b00      	cmp	r3, #0
 8005ac6:	d008      	beq.n	8005ada <HAL_UART_IRQHandler+0x51e>
 8005ac8:	6878      	ldr	r0, [r7, #4]
 8005aca:	f000 f94d 	bl	8005d68 <UART_EndTransmit_IT>
 8005ace:	e004      	b.n	8005ada <HAL_UART_IRQHandler+0x51e>
 8005ad0:	bf00      	nop
 8005ad2:	e002      	b.n	8005ada <HAL_UART_IRQHandler+0x51e>
 8005ad4:	bf00      	nop
 8005ad6:	e000      	b.n	8005ada <HAL_UART_IRQHandler+0x51e>
 8005ad8:	bf00      	nop
 8005ada:	37e8      	adds	r7, #232	@ 0xe8
 8005adc:	46bd      	mov	sp, r7
 8005ade:	bd80      	pop	{r7, pc}

08005ae0 <HAL_UART_TxCpltCallback>:
 8005ae0:	b480      	push	{r7}
 8005ae2:	b083      	sub	sp, #12
 8005ae4:	af00      	add	r7, sp, #0
 8005ae6:	6078      	str	r0, [r7, #4]
 8005ae8:	bf00      	nop
 8005aea:	370c      	adds	r7, #12
 8005aec:	46bd      	mov	sp, r7
 8005aee:	bc80      	pop	{r7}
 8005af0:	4770      	bx	lr

08005af2 <HAL_UART_RxCpltCallback>:
 8005af2:	b480      	push	{r7}
 8005af4:	b083      	sub	sp, #12
 8005af6:	af00      	add	r7, sp, #0
 8005af8:	6078      	str	r0, [r7, #4]
 8005afa:	bf00      	nop
 8005afc:	370c      	adds	r7, #12
 8005afe:	46bd      	mov	sp, r7
 8005b00:	bc80      	pop	{r7}
 8005b02:	4770      	bx	lr

08005b04 <HAL_UART_ErrorCallback>:
 8005b04:	b480      	push	{r7}
 8005b06:	b083      	sub	sp, #12
 8005b08:	af00      	add	r7, sp, #0
 8005b0a:	6078      	str	r0, [r7, #4]
 8005b0c:	bf00      	nop
 8005b0e:	370c      	adds	r7, #12
 8005b10:	46bd      	mov	sp, r7
 8005b12:	bc80      	pop	{r7}
 8005b14:	4770      	bx	lr

08005b16 <HAL_UARTEx_RxEventCallback>:
 8005b16:	b480      	push	{r7}
 8005b18:	b083      	sub	sp, #12
 8005b1a:	af00      	add	r7, sp, #0
 8005b1c:	6078      	str	r0, [r7, #4]
 8005b1e:	460b      	mov	r3, r1
 8005b20:	807b      	strh	r3, [r7, #2]
 8005b22:	bf00      	nop
 8005b24:	370c      	adds	r7, #12
 8005b26:	46bd      	mov	sp, r7
 8005b28:	bc80      	pop	{r7}
 8005b2a:	4770      	bx	lr

08005b2c <UART_WaitOnFlagUntilTimeout>:
 8005b2c:	b580      	push	{r7, lr}
 8005b2e:	b086      	sub	sp, #24
 8005b30:	af00      	add	r7, sp, #0
 8005b32:	60f8      	str	r0, [r7, #12]
 8005b34:	60b9      	str	r1, [r7, #8]
 8005b36:	603b      	str	r3, [r7, #0]
 8005b38:	4613      	mov	r3, r2
 8005b3a:	71fb      	strb	r3, [r7, #7]
 8005b3c:	e03b      	b.n	8005bb6 <UART_WaitOnFlagUntilTimeout+0x8a>
 8005b3e:	6a3b      	ldr	r3, [r7, #32]
 8005b40:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8005b44:	d037      	beq.n	8005bb6 <UART_WaitOnFlagUntilTimeout+0x8a>
 8005b46:	f7fd fa33 	bl	8002fb0 <HAL_GetTick>
 8005b4a:	4602      	mov	r2, r0
 8005b4c:	683b      	ldr	r3, [r7, #0]
 8005b4e:	1ad3      	subs	r3, r2, r3
 8005b50:	6a3a      	ldr	r2, [r7, #32]
 8005b52:	429a      	cmp	r2, r3
 8005b54:	d302      	bcc.n	8005b5c <UART_WaitOnFlagUntilTimeout+0x30>
 8005b56:	6a3b      	ldr	r3, [r7, #32]
 8005b58:	2b00      	cmp	r3, #0
 8005b5a:	d101      	bne.n	8005b60 <UART_WaitOnFlagUntilTimeout+0x34>
 8005b5c:	2303      	movs	r3, #3
 8005b5e:	e03a      	b.n	8005bd6 <UART_WaitOnFlagUntilTimeout+0xaa>
 8005b60:	68fb      	ldr	r3, [r7, #12]
 8005b62:	681b      	ldr	r3, [r3, #0]
 8005b64:	68db      	ldr	r3, [r3, #12]
 8005b66:	f003 0304 	and.w	r3, r3, #4
 8005b6a:	2b00      	cmp	r3, #0
 8005b6c:	d023      	beq.n	8005bb6 <UART_WaitOnFlagUntilTimeout+0x8a>
 8005b6e:	68bb      	ldr	r3, [r7, #8]
 8005b70:	2b80      	cmp	r3, #128	@ 0x80
 8005b72:	d020      	beq.n	8005bb6 <UART_WaitOnFlagUntilTimeout+0x8a>
 8005b74:	68bb      	ldr	r3, [r7, #8]
 8005b76:	2b40      	cmp	r3, #64	@ 0x40
 8005b78:	d01d      	beq.n	8005bb6 <UART_WaitOnFlagUntilTimeout+0x8a>
 8005b7a:	68fb      	ldr	r3, [r7, #12]
 8005b7c:	681b      	ldr	r3, [r3, #0]
 8005b7e:	681b      	ldr	r3, [r3, #0]
 8005b80:	f003 0308 	and.w	r3, r3, #8
 8005b84:	2b08      	cmp	r3, #8
 8005b86:	d116      	bne.n	8005bb6 <UART_WaitOnFlagUntilTimeout+0x8a>
 8005b88:	2300      	movs	r3, #0
 8005b8a:	617b      	str	r3, [r7, #20]
 8005b8c:	68fb      	ldr	r3, [r7, #12]
 8005b8e:	681b      	ldr	r3, [r3, #0]
 8005b90:	681b      	ldr	r3, [r3, #0]
 8005b92:	617b      	str	r3, [r7, #20]
 8005b94:	68fb      	ldr	r3, [r7, #12]
 8005b96:	681b      	ldr	r3, [r3, #0]
 8005b98:	685b      	ldr	r3, [r3, #4]
 8005b9a:	617b      	str	r3, [r7, #20]
 8005b9c:	697b      	ldr	r3, [r7, #20]
 8005b9e:	68f8      	ldr	r0, [r7, #12]
 8005ba0:	f000 f81d 	bl	8005bde <UART_EndRxTransfer>
 8005ba4:	68fb      	ldr	r3, [r7, #12]
 8005ba6:	2208      	movs	r2, #8
 8005ba8:	645a      	str	r2, [r3, #68]	@ 0x44
 8005baa:	68fb      	ldr	r3, [r7, #12]
 8005bac:	2200      	movs	r2, #0
 8005bae:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005bb2:	2301      	movs	r3, #1
 8005bb4:	e00f      	b.n	8005bd6 <UART_WaitOnFlagUntilTimeout+0xaa>
 8005bb6:	68fb      	ldr	r3, [r7, #12]
 8005bb8:	681b      	ldr	r3, [r3, #0]
 8005bba:	681a      	ldr	r2, [r3, #0]
 8005bbc:	68bb      	ldr	r3, [r7, #8]
 8005bbe:	4013      	ands	r3, r2
 8005bc0:	68ba      	ldr	r2, [r7, #8]
 8005bc2:	429a      	cmp	r2, r3
 8005bc4:	bf0c      	ite	eq
 8005bc6:	2301      	moveq	r3, #1
 8005bc8:	2300      	movne	r3, #0
 8005bca:	b2db      	uxtb	r3, r3
 8005bcc:	461a      	mov	r2, r3
 8005bce:	79fb      	ldrb	r3, [r7, #7]
 8005bd0:	429a      	cmp	r2, r3
 8005bd2:	d0b4      	beq.n	8005b3e <UART_WaitOnFlagUntilTimeout+0x12>
 8005bd4:	2300      	movs	r3, #0
 8005bd6:	4618      	mov	r0, r3
 8005bd8:	3718      	adds	r7, #24
 8005bda:	46bd      	mov	sp, r7
 8005bdc:	bd80      	pop	{r7, pc}

08005bde <UART_EndRxTransfer>:
 8005bde:	b480      	push	{r7}
 8005be0:	b095      	sub	sp, #84	@ 0x54
 8005be2:	af00      	add	r7, sp, #0
 8005be4:	6078      	str	r0, [r7, #4]
 8005be6:	687b      	ldr	r3, [r7, #4]
 8005be8:	681b      	ldr	r3, [r3, #0]
 8005bea:	330c      	adds	r3, #12
 8005bec:	637b      	str	r3, [r7, #52]	@ 0x34
 8005bee:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8005bf0:	e853 3f00 	ldrex	r3, [r3]
 8005bf4:	633b      	str	r3, [r7, #48]	@ 0x30
 8005bf6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005bf8:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8005bfc:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8005bfe:	687b      	ldr	r3, [r7, #4]
 8005c00:	681b      	ldr	r3, [r3, #0]
 8005c02:	330c      	adds	r3, #12
 8005c04:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8005c06:	643a      	str	r2, [r7, #64]	@ 0x40
 8005c08:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8005c0a:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8005c0c:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8005c0e:	e841 2300 	strex	r3, r2, [r1]
 8005c12:	63bb      	str	r3, [r7, #56]	@ 0x38
 8005c14:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8005c16:	2b00      	cmp	r3, #0
 8005c18:	d1e5      	bne.n	8005be6 <UART_EndRxTransfer+0x8>
 8005c1a:	687b      	ldr	r3, [r7, #4]
 8005c1c:	681b      	ldr	r3, [r3, #0]
 8005c1e:	3314      	adds	r3, #20
 8005c20:	623b      	str	r3, [r7, #32]
 8005c22:	6a3b      	ldr	r3, [r7, #32]
 8005c24:	e853 3f00 	ldrex	r3, [r3]
 8005c28:	61fb      	str	r3, [r7, #28]
 8005c2a:	69fb      	ldr	r3, [r7, #28]
 8005c2c:	f023 0301 	bic.w	r3, r3, #1
 8005c30:	64bb      	str	r3, [r7, #72]	@ 0x48
 8005c32:	687b      	ldr	r3, [r7, #4]
 8005c34:	681b      	ldr	r3, [r3, #0]
 8005c36:	3314      	adds	r3, #20
 8005c38:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8005c3a:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8005c3c:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005c3e:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8005c40:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8005c42:	e841 2300 	strex	r3, r2, [r1]
 8005c46:	627b      	str	r3, [r7, #36]	@ 0x24
 8005c48:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005c4a:	2b00      	cmp	r3, #0
 8005c4c:	d1e5      	bne.n	8005c1a <UART_EndRxTransfer+0x3c>
 8005c4e:	687b      	ldr	r3, [r7, #4]
 8005c50:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005c52:	2b01      	cmp	r3, #1
 8005c54:	d119      	bne.n	8005c8a <UART_EndRxTransfer+0xac>
 8005c56:	687b      	ldr	r3, [r7, #4]
 8005c58:	681b      	ldr	r3, [r3, #0]
 8005c5a:	330c      	adds	r3, #12
 8005c5c:	60fb      	str	r3, [r7, #12]
 8005c5e:	68fb      	ldr	r3, [r7, #12]
 8005c60:	e853 3f00 	ldrex	r3, [r3]
 8005c64:	60bb      	str	r3, [r7, #8]
 8005c66:	68bb      	ldr	r3, [r7, #8]
 8005c68:	f023 0310 	bic.w	r3, r3, #16
 8005c6c:	647b      	str	r3, [r7, #68]	@ 0x44
 8005c6e:	687b      	ldr	r3, [r7, #4]
 8005c70:	681b      	ldr	r3, [r3, #0]
 8005c72:	330c      	adds	r3, #12
 8005c74:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8005c76:	61ba      	str	r2, [r7, #24]
 8005c78:	617b      	str	r3, [r7, #20]
 8005c7a:	6979      	ldr	r1, [r7, #20]
 8005c7c:	69ba      	ldr	r2, [r7, #24]
 8005c7e:	e841 2300 	strex	r3, r2, [r1]
 8005c82:	613b      	str	r3, [r7, #16]
 8005c84:	693b      	ldr	r3, [r7, #16]
 8005c86:	2b00      	cmp	r3, #0
 8005c88:	d1e5      	bne.n	8005c56 <UART_EndRxTransfer+0x78>
 8005c8a:	687b      	ldr	r3, [r7, #4]
 8005c8c:	2220      	movs	r2, #32
 8005c8e:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005c92:	687b      	ldr	r3, [r7, #4]
 8005c94:	2200      	movs	r2, #0
 8005c96:	631a      	str	r2, [r3, #48]	@ 0x30
 8005c98:	bf00      	nop
 8005c9a:	3754      	adds	r7, #84	@ 0x54
 8005c9c:	46bd      	mov	sp, r7
 8005c9e:	bc80      	pop	{r7}
 8005ca0:	4770      	bx	lr

08005ca2 <UART_DMAAbortOnError>:
 8005ca2:	b580      	push	{r7, lr}
 8005ca4:	b084      	sub	sp, #16
 8005ca6:	af00      	add	r7, sp, #0
 8005ca8:	6078      	str	r0, [r7, #4]
 8005caa:	687b      	ldr	r3, [r7, #4]
 8005cac:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005cae:	60fb      	str	r3, [r7, #12]
 8005cb0:	68fb      	ldr	r3, [r7, #12]
 8005cb2:	2200      	movs	r2, #0
 8005cb4:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8005cb6:	68fb      	ldr	r3, [r7, #12]
 8005cb8:	2200      	movs	r2, #0
 8005cba:	84da      	strh	r2, [r3, #38]	@ 0x26
 8005cbc:	68f8      	ldr	r0, [r7, #12]
 8005cbe:	f7ff ff21 	bl	8005b04 <HAL_UART_ErrorCallback>
 8005cc2:	bf00      	nop
 8005cc4:	3710      	adds	r7, #16
 8005cc6:	46bd      	mov	sp, r7
 8005cc8:	bd80      	pop	{r7, pc}

08005cca <UART_Transmit_IT>:
 8005cca:	b480      	push	{r7}
 8005ccc:	b085      	sub	sp, #20
 8005cce:	af00      	add	r7, sp, #0
 8005cd0:	6078      	str	r0, [r7, #4]
 8005cd2:	687b      	ldr	r3, [r7, #4]
 8005cd4:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8005cd8:	b2db      	uxtb	r3, r3
 8005cda:	2b21      	cmp	r3, #33	@ 0x21
 8005cdc:	d13e      	bne.n	8005d5c <UART_Transmit_IT+0x92>
 8005cde:	687b      	ldr	r3, [r7, #4]
 8005ce0:	689b      	ldr	r3, [r3, #8]
 8005ce2:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005ce6:	d114      	bne.n	8005d12 <UART_Transmit_IT+0x48>
 8005ce8:	687b      	ldr	r3, [r7, #4]
 8005cea:	691b      	ldr	r3, [r3, #16]
 8005cec:	2b00      	cmp	r3, #0
 8005cee:	d110      	bne.n	8005d12 <UART_Transmit_IT+0x48>
 8005cf0:	687b      	ldr	r3, [r7, #4]
 8005cf2:	6a1b      	ldr	r3, [r3, #32]
 8005cf4:	60fb      	str	r3, [r7, #12]
 8005cf6:	68fb      	ldr	r3, [r7, #12]
 8005cf8:	881b      	ldrh	r3, [r3, #0]
 8005cfa:	461a      	mov	r2, r3
 8005cfc:	687b      	ldr	r3, [r7, #4]
 8005cfe:	681b      	ldr	r3, [r3, #0]
 8005d00:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8005d04:	605a      	str	r2, [r3, #4]
 8005d06:	687b      	ldr	r3, [r7, #4]
 8005d08:	6a1b      	ldr	r3, [r3, #32]
 8005d0a:	1c9a      	adds	r2, r3, #2
 8005d0c:	687b      	ldr	r3, [r7, #4]
 8005d0e:	621a      	str	r2, [r3, #32]
 8005d10:	e008      	b.n	8005d24 <UART_Transmit_IT+0x5a>
 8005d12:	687b      	ldr	r3, [r7, #4]
 8005d14:	6a1b      	ldr	r3, [r3, #32]
 8005d16:	1c59      	adds	r1, r3, #1
 8005d18:	687a      	ldr	r2, [r7, #4]
 8005d1a:	6211      	str	r1, [r2, #32]
 8005d1c:	781a      	ldrb	r2, [r3, #0]
 8005d1e:	687b      	ldr	r3, [r7, #4]
 8005d20:	681b      	ldr	r3, [r3, #0]
 8005d22:	605a      	str	r2, [r3, #4]
 8005d24:	687b      	ldr	r3, [r7, #4]
 8005d26:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8005d28:	b29b      	uxth	r3, r3
 8005d2a:	3b01      	subs	r3, #1
 8005d2c:	b29b      	uxth	r3, r3
 8005d2e:	687a      	ldr	r2, [r7, #4]
 8005d30:	4619      	mov	r1, r3
 8005d32:	84d1      	strh	r1, [r2, #38]	@ 0x26
 8005d34:	2b00      	cmp	r3, #0
 8005d36:	d10f      	bne.n	8005d58 <UART_Transmit_IT+0x8e>
 8005d38:	687b      	ldr	r3, [r7, #4]
 8005d3a:	681b      	ldr	r3, [r3, #0]
 8005d3c:	68da      	ldr	r2, [r3, #12]
 8005d3e:	687b      	ldr	r3, [r7, #4]
 8005d40:	681b      	ldr	r3, [r3, #0]
 8005d42:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8005d46:	60da      	str	r2, [r3, #12]
 8005d48:	687b      	ldr	r3, [r7, #4]
 8005d4a:	681b      	ldr	r3, [r3, #0]
 8005d4c:	68da      	ldr	r2, [r3, #12]
 8005d4e:	687b      	ldr	r3, [r7, #4]
 8005d50:	681b      	ldr	r3, [r3, #0]
 8005d52:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8005d56:	60da      	str	r2, [r3, #12]
 8005d58:	2300      	movs	r3, #0
 8005d5a:	e000      	b.n	8005d5e <UART_Transmit_IT+0x94>
 8005d5c:	2302      	movs	r3, #2
 8005d5e:	4618      	mov	r0, r3
 8005d60:	3714      	adds	r7, #20
 8005d62:	46bd      	mov	sp, r7
 8005d64:	bc80      	pop	{r7}
 8005d66:	4770      	bx	lr

08005d68 <UART_EndTransmit_IT>:
 8005d68:	b580      	push	{r7, lr}
 8005d6a:	b082      	sub	sp, #8
 8005d6c:	af00      	add	r7, sp, #0
 8005d6e:	6078      	str	r0, [r7, #4]
 8005d70:	687b      	ldr	r3, [r7, #4]
 8005d72:	681b      	ldr	r3, [r3, #0]
 8005d74:	68da      	ldr	r2, [r3, #12]
 8005d76:	687b      	ldr	r3, [r7, #4]
 8005d78:	681b      	ldr	r3, [r3, #0]
 8005d7a:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005d7e:	60da      	str	r2, [r3, #12]
 8005d80:	687b      	ldr	r3, [r7, #4]
 8005d82:	2220      	movs	r2, #32
 8005d84:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005d88:	6878      	ldr	r0, [r7, #4]
 8005d8a:	f7ff fea9 	bl	8005ae0 <HAL_UART_TxCpltCallback>
 8005d8e:	2300      	movs	r3, #0
 8005d90:	4618      	mov	r0, r3
 8005d92:	3708      	adds	r7, #8
 8005d94:	46bd      	mov	sp, r7
 8005d96:	bd80      	pop	{r7, pc}

08005d98 <UART_Receive_IT>:
 8005d98:	b580      	push	{r7, lr}
 8005d9a:	b08c      	sub	sp, #48	@ 0x30
 8005d9c:	af00      	add	r7, sp, #0
 8005d9e:	6078      	str	r0, [r7, #4]
 8005da0:	687b      	ldr	r3, [r7, #4]
 8005da2:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8005da6:	b2db      	uxtb	r3, r3
 8005da8:	2b22      	cmp	r3, #34	@ 0x22
 8005daa:	f040 80ae 	bne.w	8005f0a <UART_Receive_IT+0x172>
 8005dae:	687b      	ldr	r3, [r7, #4]
 8005db0:	689b      	ldr	r3, [r3, #8]
 8005db2:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005db6:	d117      	bne.n	8005de8 <UART_Receive_IT+0x50>
 8005db8:	687b      	ldr	r3, [r7, #4]
 8005dba:	691b      	ldr	r3, [r3, #16]
 8005dbc:	2b00      	cmp	r3, #0
 8005dbe:	d113      	bne.n	8005de8 <UART_Receive_IT+0x50>
 8005dc0:	2300      	movs	r3, #0
 8005dc2:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8005dc4:	687b      	ldr	r3, [r7, #4]
 8005dc6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005dc8:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005dca:	687b      	ldr	r3, [r7, #4]
 8005dcc:	681b      	ldr	r3, [r3, #0]
 8005dce:	685b      	ldr	r3, [r3, #4]
 8005dd0:	b29b      	uxth	r3, r3
 8005dd2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8005dd6:	b29a      	uxth	r2, r3
 8005dd8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005dda:	801a      	strh	r2, [r3, #0]
 8005ddc:	687b      	ldr	r3, [r7, #4]
 8005dde:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005de0:	1c9a      	adds	r2, r3, #2
 8005de2:	687b      	ldr	r3, [r7, #4]
 8005de4:	629a      	str	r2, [r3, #40]	@ 0x28
 8005de6:	e026      	b.n	8005e36 <UART_Receive_IT+0x9e>
 8005de8:	687b      	ldr	r3, [r7, #4]
 8005dea:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005dec:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8005dee:	2300      	movs	r3, #0
 8005df0:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005df2:	687b      	ldr	r3, [r7, #4]
 8005df4:	689b      	ldr	r3, [r3, #8]
 8005df6:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005dfa:	d007      	beq.n	8005e0c <UART_Receive_IT+0x74>
 8005dfc:	687b      	ldr	r3, [r7, #4]
 8005dfe:	689b      	ldr	r3, [r3, #8]
 8005e00:	2b00      	cmp	r3, #0
 8005e02:	d10a      	bne.n	8005e1a <UART_Receive_IT+0x82>
 8005e04:	687b      	ldr	r3, [r7, #4]
 8005e06:	691b      	ldr	r3, [r3, #16]
 8005e08:	2b00      	cmp	r3, #0
 8005e0a:	d106      	bne.n	8005e1a <UART_Receive_IT+0x82>
 8005e0c:	687b      	ldr	r3, [r7, #4]
 8005e0e:	681b      	ldr	r3, [r3, #0]
 8005e10:	685b      	ldr	r3, [r3, #4]
 8005e12:	b2da      	uxtb	r2, r3
 8005e14:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8005e16:	701a      	strb	r2, [r3, #0]
 8005e18:	e008      	b.n	8005e2c <UART_Receive_IT+0x94>
 8005e1a:	687b      	ldr	r3, [r7, #4]
 8005e1c:	681b      	ldr	r3, [r3, #0]
 8005e1e:	685b      	ldr	r3, [r3, #4]
 8005e20:	b2db      	uxtb	r3, r3
 8005e22:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8005e26:	b2da      	uxtb	r2, r3
 8005e28:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8005e2a:	701a      	strb	r2, [r3, #0]
 8005e2c:	687b      	ldr	r3, [r7, #4]
 8005e2e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005e30:	1c5a      	adds	r2, r3, #1
 8005e32:	687b      	ldr	r3, [r7, #4]
 8005e34:	629a      	str	r2, [r3, #40]	@ 0x28
 8005e36:	687b      	ldr	r3, [r7, #4]
 8005e38:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8005e3a:	b29b      	uxth	r3, r3
 8005e3c:	3b01      	subs	r3, #1
 8005e3e:	b29b      	uxth	r3, r3
 8005e40:	687a      	ldr	r2, [r7, #4]
 8005e42:	4619      	mov	r1, r3
 8005e44:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 8005e46:	2b00      	cmp	r3, #0
 8005e48:	d15d      	bne.n	8005f06 <UART_Receive_IT+0x16e>
 8005e4a:	687b      	ldr	r3, [r7, #4]
 8005e4c:	681b      	ldr	r3, [r3, #0]
 8005e4e:	68da      	ldr	r2, [r3, #12]
 8005e50:	687b      	ldr	r3, [r7, #4]
 8005e52:	681b      	ldr	r3, [r3, #0]
 8005e54:	f022 0220 	bic.w	r2, r2, #32
 8005e58:	60da      	str	r2, [r3, #12]
 8005e5a:	687b      	ldr	r3, [r7, #4]
 8005e5c:	681b      	ldr	r3, [r3, #0]
 8005e5e:	68da      	ldr	r2, [r3, #12]
 8005e60:	687b      	ldr	r3, [r7, #4]
 8005e62:	681b      	ldr	r3, [r3, #0]
 8005e64:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8005e68:	60da      	str	r2, [r3, #12]
 8005e6a:	687b      	ldr	r3, [r7, #4]
 8005e6c:	681b      	ldr	r3, [r3, #0]
 8005e6e:	695a      	ldr	r2, [r3, #20]
 8005e70:	687b      	ldr	r3, [r7, #4]
 8005e72:	681b      	ldr	r3, [r3, #0]
 8005e74:	f022 0201 	bic.w	r2, r2, #1
 8005e78:	615a      	str	r2, [r3, #20]
 8005e7a:	687b      	ldr	r3, [r7, #4]
 8005e7c:	2220      	movs	r2, #32
 8005e7e:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005e82:	687b      	ldr	r3, [r7, #4]
 8005e84:	2200      	movs	r2, #0
 8005e86:	635a      	str	r2, [r3, #52]	@ 0x34
 8005e88:	687b      	ldr	r3, [r7, #4]
 8005e8a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005e8c:	2b01      	cmp	r3, #1
 8005e8e:	d135      	bne.n	8005efc <UART_Receive_IT+0x164>
 8005e90:	687b      	ldr	r3, [r7, #4]
 8005e92:	2200      	movs	r2, #0
 8005e94:	631a      	str	r2, [r3, #48]	@ 0x30
 8005e96:	687b      	ldr	r3, [r7, #4]
 8005e98:	681b      	ldr	r3, [r3, #0]
 8005e9a:	330c      	adds	r3, #12
 8005e9c:	617b      	str	r3, [r7, #20]
 8005e9e:	697b      	ldr	r3, [r7, #20]
 8005ea0:	e853 3f00 	ldrex	r3, [r3]
 8005ea4:	613b      	str	r3, [r7, #16]
 8005ea6:	693b      	ldr	r3, [r7, #16]
 8005ea8:	f023 0310 	bic.w	r3, r3, #16
 8005eac:	627b      	str	r3, [r7, #36]	@ 0x24
 8005eae:	687b      	ldr	r3, [r7, #4]
 8005eb0:	681b      	ldr	r3, [r3, #0]
 8005eb2:	330c      	adds	r3, #12
 8005eb4:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8005eb6:	623a      	str	r2, [r7, #32]
 8005eb8:	61fb      	str	r3, [r7, #28]
 8005eba:	69f9      	ldr	r1, [r7, #28]
 8005ebc:	6a3a      	ldr	r2, [r7, #32]
 8005ebe:	e841 2300 	strex	r3, r2, [r1]
 8005ec2:	61bb      	str	r3, [r7, #24]
 8005ec4:	69bb      	ldr	r3, [r7, #24]
 8005ec6:	2b00      	cmp	r3, #0
 8005ec8:	d1e5      	bne.n	8005e96 <UART_Receive_IT+0xfe>
 8005eca:	687b      	ldr	r3, [r7, #4]
 8005ecc:	681b      	ldr	r3, [r3, #0]
 8005ece:	681b      	ldr	r3, [r3, #0]
 8005ed0:	f003 0310 	and.w	r3, r3, #16
 8005ed4:	2b10      	cmp	r3, #16
 8005ed6:	d10a      	bne.n	8005eee <UART_Receive_IT+0x156>
 8005ed8:	2300      	movs	r3, #0
 8005eda:	60fb      	str	r3, [r7, #12]
 8005edc:	687b      	ldr	r3, [r7, #4]
 8005ede:	681b      	ldr	r3, [r3, #0]
 8005ee0:	681b      	ldr	r3, [r3, #0]
 8005ee2:	60fb      	str	r3, [r7, #12]
 8005ee4:	687b      	ldr	r3, [r7, #4]
 8005ee6:	681b      	ldr	r3, [r3, #0]
 8005ee8:	685b      	ldr	r3, [r3, #4]
 8005eea:	60fb      	str	r3, [r7, #12]
 8005eec:	68fb      	ldr	r3, [r7, #12]
 8005eee:	687b      	ldr	r3, [r7, #4]
 8005ef0:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8005ef2:	4619      	mov	r1, r3
 8005ef4:	6878      	ldr	r0, [r7, #4]
 8005ef6:	f7ff fe0e 	bl	8005b16 <HAL_UARTEx_RxEventCallback>
 8005efa:	e002      	b.n	8005f02 <UART_Receive_IT+0x16a>
 8005efc:	6878      	ldr	r0, [r7, #4]
 8005efe:	f7ff fdf8 	bl	8005af2 <HAL_UART_RxCpltCallback>
 8005f02:	2300      	movs	r3, #0
 8005f04:	e002      	b.n	8005f0c <UART_Receive_IT+0x174>
 8005f06:	2300      	movs	r3, #0
 8005f08:	e000      	b.n	8005f0c <UART_Receive_IT+0x174>
 8005f0a:	2302      	movs	r3, #2
 8005f0c:	4618      	mov	r0, r3
 8005f0e:	3730      	adds	r7, #48	@ 0x30
 8005f10:	46bd      	mov	sp, r7
 8005f12:	bd80      	pop	{r7, pc}

08005f14 <UART_SetConfig>:
 8005f14:	b580      	push	{r7, lr}
 8005f16:	b084      	sub	sp, #16
 8005f18:	af00      	add	r7, sp, #0
 8005f1a:	6078      	str	r0, [r7, #4]
 8005f1c:	687b      	ldr	r3, [r7, #4]
 8005f1e:	681b      	ldr	r3, [r3, #0]
 8005f20:	691b      	ldr	r3, [r3, #16]
 8005f22:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 8005f26:	687b      	ldr	r3, [r7, #4]
 8005f28:	68da      	ldr	r2, [r3, #12]
 8005f2a:	687b      	ldr	r3, [r7, #4]
 8005f2c:	681b      	ldr	r3, [r3, #0]
 8005f2e:	430a      	orrs	r2, r1
 8005f30:	611a      	str	r2, [r3, #16]
 8005f32:	687b      	ldr	r3, [r7, #4]
 8005f34:	689a      	ldr	r2, [r3, #8]
 8005f36:	687b      	ldr	r3, [r7, #4]
 8005f38:	691b      	ldr	r3, [r3, #16]
 8005f3a:	431a      	orrs	r2, r3
 8005f3c:	687b      	ldr	r3, [r7, #4]
 8005f3e:	695b      	ldr	r3, [r3, #20]
 8005f40:	4313      	orrs	r3, r2
 8005f42:	60bb      	str	r3, [r7, #8]
 8005f44:	687b      	ldr	r3, [r7, #4]
 8005f46:	681b      	ldr	r3, [r3, #0]
 8005f48:	68db      	ldr	r3, [r3, #12]
 8005f4a:	f423 53b0 	bic.w	r3, r3, #5632	@ 0x1600
 8005f4e:	f023 030c 	bic.w	r3, r3, #12
 8005f52:	687a      	ldr	r2, [r7, #4]
 8005f54:	6812      	ldr	r2, [r2, #0]
 8005f56:	68b9      	ldr	r1, [r7, #8]
 8005f58:	430b      	orrs	r3, r1
 8005f5a:	60d3      	str	r3, [r2, #12]
 8005f5c:	687b      	ldr	r3, [r7, #4]
 8005f5e:	681b      	ldr	r3, [r3, #0]
 8005f60:	695b      	ldr	r3, [r3, #20]
 8005f62:	f423 7140 	bic.w	r1, r3, #768	@ 0x300
 8005f66:	687b      	ldr	r3, [r7, #4]
 8005f68:	699a      	ldr	r2, [r3, #24]
 8005f6a:	687b      	ldr	r3, [r7, #4]
 8005f6c:	681b      	ldr	r3, [r3, #0]
 8005f6e:	430a      	orrs	r2, r1
 8005f70:	615a      	str	r2, [r3, #20]
 8005f72:	687b      	ldr	r3, [r7, #4]
 8005f74:	681b      	ldr	r3, [r3, #0]
 8005f76:	4a2c      	ldr	r2, [pc, #176]	@ (8006028 <UART_SetConfig+0x114>)
 8005f78:	4293      	cmp	r3, r2
 8005f7a:	d103      	bne.n	8005f84 <UART_SetConfig+0x70>
 8005f7c:	f7fe f904 	bl	8004188 <HAL_RCC_GetPCLK2Freq>
 8005f80:	60f8      	str	r0, [r7, #12]
 8005f82:	e002      	b.n	8005f8a <UART_SetConfig+0x76>
 8005f84:	f7fe f8ec 	bl	8004160 <HAL_RCC_GetPCLK1Freq>
 8005f88:	60f8      	str	r0, [r7, #12]
 8005f8a:	68fa      	ldr	r2, [r7, #12]
 8005f8c:	4613      	mov	r3, r2
 8005f8e:	009b      	lsls	r3, r3, #2
 8005f90:	4413      	add	r3, r2
 8005f92:	009a      	lsls	r2, r3, #2
 8005f94:	441a      	add	r2, r3
 8005f96:	687b      	ldr	r3, [r7, #4]
 8005f98:	685b      	ldr	r3, [r3, #4]
 8005f9a:	009b      	lsls	r3, r3, #2
 8005f9c:	fbb2 f3f3 	udiv	r3, r2, r3
 8005fa0:	4a22      	ldr	r2, [pc, #136]	@ (800602c <UART_SetConfig+0x118>)
 8005fa2:	fba2 2303 	umull	r2, r3, r2, r3
 8005fa6:	095b      	lsrs	r3, r3, #5
 8005fa8:	0119      	lsls	r1, r3, #4
 8005faa:	68fa      	ldr	r2, [r7, #12]
 8005fac:	4613      	mov	r3, r2
 8005fae:	009b      	lsls	r3, r3, #2
 8005fb0:	4413      	add	r3, r2
 8005fb2:	009a      	lsls	r2, r3, #2
 8005fb4:	441a      	add	r2, r3
 8005fb6:	687b      	ldr	r3, [r7, #4]
 8005fb8:	685b      	ldr	r3, [r3, #4]
 8005fba:	009b      	lsls	r3, r3, #2
 8005fbc:	fbb2 f2f3 	udiv	r2, r2, r3
 8005fc0:	4b1a      	ldr	r3, [pc, #104]	@ (800602c <UART_SetConfig+0x118>)
 8005fc2:	fba3 0302 	umull	r0, r3, r3, r2
 8005fc6:	095b      	lsrs	r3, r3, #5
 8005fc8:	2064      	movs	r0, #100	@ 0x64
 8005fca:	fb00 f303 	mul.w	r3, r0, r3
 8005fce:	1ad3      	subs	r3, r2, r3
 8005fd0:	011b      	lsls	r3, r3, #4
 8005fd2:	3332      	adds	r3, #50	@ 0x32
 8005fd4:	4a15      	ldr	r2, [pc, #84]	@ (800602c <UART_SetConfig+0x118>)
 8005fd6:	fba2 2303 	umull	r2, r3, r2, r3
 8005fda:	095b      	lsrs	r3, r3, #5
 8005fdc:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8005fe0:	4419      	add	r1, r3
 8005fe2:	68fa      	ldr	r2, [r7, #12]
 8005fe4:	4613      	mov	r3, r2
 8005fe6:	009b      	lsls	r3, r3, #2
 8005fe8:	4413      	add	r3, r2
 8005fea:	009a      	lsls	r2, r3, #2
 8005fec:	441a      	add	r2, r3
 8005fee:	687b      	ldr	r3, [r7, #4]
 8005ff0:	685b      	ldr	r3, [r3, #4]
 8005ff2:	009b      	lsls	r3, r3, #2
 8005ff4:	fbb2 f2f3 	udiv	r2, r2, r3
 8005ff8:	4b0c      	ldr	r3, [pc, #48]	@ (800602c <UART_SetConfig+0x118>)
 8005ffa:	fba3 0302 	umull	r0, r3, r3, r2
 8005ffe:	095b      	lsrs	r3, r3, #5
 8006000:	2064      	movs	r0, #100	@ 0x64
 8006002:	fb00 f303 	mul.w	r3, r0, r3
 8006006:	1ad3      	subs	r3, r2, r3
 8006008:	011b      	lsls	r3, r3, #4
 800600a:	3332      	adds	r3, #50	@ 0x32
 800600c:	4a07      	ldr	r2, [pc, #28]	@ (800602c <UART_SetConfig+0x118>)
 800600e:	fba2 2303 	umull	r2, r3, r2, r3
 8006012:	095b      	lsrs	r3, r3, #5
 8006014:	f003 020f 	and.w	r2, r3, #15
 8006018:	687b      	ldr	r3, [r7, #4]
 800601a:	681b      	ldr	r3, [r3, #0]
 800601c:	440a      	add	r2, r1
 800601e:	609a      	str	r2, [r3, #8]
 8006020:	bf00      	nop
 8006022:	3710      	adds	r7, #16
 8006024:	46bd      	mov	sp, r7
 8006026:	bd80      	pop	{r7, pc}
 8006028:	40013800 	.word	0x40013800
 800602c:	51eb851f 	.word	0x51eb851f

08006030 <abort>:
 8006030:	2006      	movs	r0, #6
 8006032:	b508      	push	{r3, lr}
 8006034:	f001 f81a 	bl	800706c <raise>
 8006038:	2001      	movs	r0, #1
 800603a:	f7fc fec4 	bl	8002dc6 <_exit>
	...

08006040 <exit>:
 8006040:	b508      	push	{r3, lr}
 8006042:	4b06      	ldr	r3, [pc, #24]	@ (800605c <exit+0x1c>)
 8006044:	4604      	mov	r4, r0
 8006046:	b113      	cbz	r3, 800604e <exit+0xe>
 8006048:	2100      	movs	r1, #0
 800604a:	f3af 8000 	nop.w
 800604e:	4b04      	ldr	r3, [pc, #16]	@ (8006060 <exit+0x20>)
 8006050:	681b      	ldr	r3, [r3, #0]
 8006052:	b103      	cbz	r3, 8006056 <exit+0x16>
 8006054:	4798      	blx	r3
 8006056:	4620      	mov	r0, r4
 8006058:	f7fc feb5 	bl	8002dc6 <_exit>
 800605c:	00000000 	.word	0x00000000
 8006060:	20000738 	.word	0x20000738

08006064 <__cvt>:
 8006064:	2b00      	cmp	r3, #0
 8006066:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800606a:	461d      	mov	r5, r3
 800606c:	bfbb      	ittet	lt
 800606e:	f103 4300 	addlt.w	r3, r3, #2147483648	@ 0x80000000
 8006072:	461d      	movlt	r5, r3
 8006074:	2300      	movge	r3, #0
 8006076:	232d      	movlt	r3, #45	@ 0x2d
 8006078:	b088      	sub	sp, #32
 800607a:	4614      	mov	r4, r2
 800607c:	bfb8      	it	lt
 800607e:	4614      	movlt	r4, r2
 8006080:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8006082:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 8006084:	7013      	strb	r3, [r2, #0]
 8006086:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8006088:	f8dd a04c 	ldr.w	sl, [sp, #76]	@ 0x4c
 800608c:	f023 0820 	bic.w	r8, r3, #32
 8006090:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8006094:	d005      	beq.n	80060a2 <__cvt+0x3e>
 8006096:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 800609a:	d100      	bne.n	800609e <__cvt+0x3a>
 800609c:	3601      	adds	r6, #1
 800609e:	2302      	movs	r3, #2
 80060a0:	e000      	b.n	80060a4 <__cvt+0x40>
 80060a2:	2303      	movs	r3, #3
 80060a4:	aa07      	add	r2, sp, #28
 80060a6:	9204      	str	r2, [sp, #16]
 80060a8:	aa06      	add	r2, sp, #24
 80060aa:	e9cd a202 	strd	sl, r2, [sp, #8]
 80060ae:	e9cd 3600 	strd	r3, r6, [sp]
 80060b2:	4622      	mov	r2, r4
 80060b4:	462b      	mov	r3, r5
 80060b6:	f001 f91b 	bl	80072f0 <_dtoa_r>
 80060ba:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 80060be:	4607      	mov	r7, r0
 80060c0:	d119      	bne.n	80060f6 <__cvt+0x92>
 80060c2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80060c4:	07db      	lsls	r3, r3, #31
 80060c6:	d50e      	bpl.n	80060e6 <__cvt+0x82>
 80060c8:	eb00 0906 	add.w	r9, r0, r6
 80060cc:	2200      	movs	r2, #0
 80060ce:	2300      	movs	r3, #0
 80060d0:	4620      	mov	r0, r4
 80060d2:	4629      	mov	r1, r5
 80060d4:	f7fa fc68 	bl	80009a8 <__aeabi_dcmpeq>
 80060d8:	b108      	cbz	r0, 80060de <__cvt+0x7a>
 80060da:	f8cd 901c 	str.w	r9, [sp, #28]
 80060de:	2230      	movs	r2, #48	@ 0x30
 80060e0:	9b07      	ldr	r3, [sp, #28]
 80060e2:	454b      	cmp	r3, r9
 80060e4:	d31e      	bcc.n	8006124 <__cvt+0xc0>
 80060e6:	4638      	mov	r0, r7
 80060e8:	9b07      	ldr	r3, [sp, #28]
 80060ea:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 80060ec:	1bdb      	subs	r3, r3, r7
 80060ee:	6013      	str	r3, [r2, #0]
 80060f0:	b008      	add	sp, #32
 80060f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80060f6:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 80060fa:	eb00 0906 	add.w	r9, r0, r6
 80060fe:	d1e5      	bne.n	80060cc <__cvt+0x68>
 8006100:	7803      	ldrb	r3, [r0, #0]
 8006102:	2b30      	cmp	r3, #48	@ 0x30
 8006104:	d10a      	bne.n	800611c <__cvt+0xb8>
 8006106:	2200      	movs	r2, #0
 8006108:	2300      	movs	r3, #0
 800610a:	4620      	mov	r0, r4
 800610c:	4629      	mov	r1, r5
 800610e:	f7fa fc4b 	bl	80009a8 <__aeabi_dcmpeq>
 8006112:	b918      	cbnz	r0, 800611c <__cvt+0xb8>
 8006114:	f1c6 0601 	rsb	r6, r6, #1
 8006118:	f8ca 6000 	str.w	r6, [sl]
 800611c:	f8da 3000 	ldr.w	r3, [sl]
 8006120:	4499      	add	r9, r3
 8006122:	e7d3      	b.n	80060cc <__cvt+0x68>
 8006124:	1c59      	adds	r1, r3, #1
 8006126:	9107      	str	r1, [sp, #28]
 8006128:	701a      	strb	r2, [r3, #0]
 800612a:	e7d9      	b.n	80060e0 <__cvt+0x7c>

0800612c <__exponent>:
 800612c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800612e:	2900      	cmp	r1, #0
 8006130:	bfb6      	itet	lt
 8006132:	232d      	movlt	r3, #45	@ 0x2d
 8006134:	232b      	movge	r3, #43	@ 0x2b
 8006136:	4249      	neglt	r1, r1
 8006138:	2909      	cmp	r1, #9
 800613a:	7002      	strb	r2, [r0, #0]
 800613c:	7043      	strb	r3, [r0, #1]
 800613e:	dd29      	ble.n	8006194 <__exponent+0x68>
 8006140:	f10d 0307 	add.w	r3, sp, #7
 8006144:	461d      	mov	r5, r3
 8006146:	270a      	movs	r7, #10
 8006148:	fbb1 f6f7 	udiv	r6, r1, r7
 800614c:	461a      	mov	r2, r3
 800614e:	fb07 1416 	mls	r4, r7, r6, r1
 8006152:	3430      	adds	r4, #48	@ 0x30
 8006154:	f802 4c01 	strb.w	r4, [r2, #-1]
 8006158:	460c      	mov	r4, r1
 800615a:	2c63      	cmp	r4, #99	@ 0x63
 800615c:	4631      	mov	r1, r6
 800615e:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
 8006162:	dcf1      	bgt.n	8006148 <__exponent+0x1c>
 8006164:	3130      	adds	r1, #48	@ 0x30
 8006166:	1e94      	subs	r4, r2, #2
 8006168:	f803 1c01 	strb.w	r1, [r3, #-1]
 800616c:	4623      	mov	r3, r4
 800616e:	1c41      	adds	r1, r0, #1
 8006170:	42ab      	cmp	r3, r5
 8006172:	d30a      	bcc.n	800618a <__exponent+0x5e>
 8006174:	f10d 0309 	add.w	r3, sp, #9
 8006178:	1a9b      	subs	r3, r3, r2
 800617a:	42ac      	cmp	r4, r5
 800617c:	bf88      	it	hi
 800617e:	2300      	movhi	r3, #0
 8006180:	3302      	adds	r3, #2
 8006182:	4403      	add	r3, r0
 8006184:	1a18      	subs	r0, r3, r0
 8006186:	b003      	add	sp, #12
 8006188:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800618a:	f813 6b01 	ldrb.w	r6, [r3], #1
 800618e:	f801 6f01 	strb.w	r6, [r1, #1]!
 8006192:	e7ed      	b.n	8006170 <__exponent+0x44>
 8006194:	2330      	movs	r3, #48	@ 0x30
 8006196:	3130      	adds	r1, #48	@ 0x30
 8006198:	7083      	strb	r3, [r0, #2]
 800619a:	70c1      	strb	r1, [r0, #3]
 800619c:	1d03      	adds	r3, r0, #4
 800619e:	e7f1      	b.n	8006184 <__exponent+0x58>

080061a0 <_printf_float>:
 80061a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80061a4:	b091      	sub	sp, #68	@ 0x44
 80061a6:	460c      	mov	r4, r1
 80061a8:	f8dd 8068 	ldr.w	r8, [sp, #104]	@ 0x68
 80061ac:	4616      	mov	r6, r2
 80061ae:	461f      	mov	r7, r3
 80061b0:	4605      	mov	r5, r0
 80061b2:	f000 ffc5 	bl	8007140 <_localeconv_r>
 80061b6:	6803      	ldr	r3, [r0, #0]
 80061b8:	4618      	mov	r0, r3
 80061ba:	9308      	str	r3, [sp, #32]
 80061bc:	f7f9 ffc8 	bl	8000150 <strlen>
 80061c0:	2300      	movs	r3, #0
 80061c2:	930e      	str	r3, [sp, #56]	@ 0x38
 80061c4:	f8d8 3000 	ldr.w	r3, [r8]
 80061c8:	9009      	str	r0, [sp, #36]	@ 0x24
 80061ca:	3307      	adds	r3, #7
 80061cc:	f023 0307 	bic.w	r3, r3, #7
 80061d0:	f103 0208 	add.w	r2, r3, #8
 80061d4:	f894 a018 	ldrb.w	sl, [r4, #24]
 80061d8:	f8d4 b000 	ldr.w	fp, [r4]
 80061dc:	f8c8 2000 	str.w	r2, [r8]
 80061e0:	e9d3 8900 	ldrd	r8, r9, [r3]
 80061e4:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 80061e8:	930b      	str	r3, [sp, #44]	@ 0x2c
 80061ea:	f8cd 8028 	str.w	r8, [sp, #40]	@ 0x28
 80061ee:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 80061f2:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 80061f6:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 80061fa:	4b9c      	ldr	r3, [pc, #624]	@ (800646c <_printf_float+0x2cc>)
 80061fc:	f7fa fc06 	bl	8000a0c <__aeabi_dcmpun>
 8006200:	bb70      	cbnz	r0, 8006260 <_printf_float+0xc0>
 8006202:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8006206:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 800620a:	4b98      	ldr	r3, [pc, #608]	@ (800646c <_printf_float+0x2cc>)
 800620c:	f7fa fbe0 	bl	80009d0 <__aeabi_dcmple>
 8006210:	bb30      	cbnz	r0, 8006260 <_printf_float+0xc0>
 8006212:	2200      	movs	r2, #0
 8006214:	2300      	movs	r3, #0
 8006216:	4640      	mov	r0, r8
 8006218:	4649      	mov	r1, r9
 800621a:	f7fa fbcf 	bl	80009bc <__aeabi_dcmplt>
 800621e:	b110      	cbz	r0, 8006226 <_printf_float+0x86>
 8006220:	232d      	movs	r3, #45	@ 0x2d
 8006222:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8006226:	4a92      	ldr	r2, [pc, #584]	@ (8006470 <_printf_float+0x2d0>)
 8006228:	4b92      	ldr	r3, [pc, #584]	@ (8006474 <_printf_float+0x2d4>)
 800622a:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 800622e:	bf8c      	ite	hi
 8006230:	4690      	movhi	r8, r2
 8006232:	4698      	movls	r8, r3
 8006234:	2303      	movs	r3, #3
 8006236:	f04f 0900 	mov.w	r9, #0
 800623a:	6123      	str	r3, [r4, #16]
 800623c:	f02b 0304 	bic.w	r3, fp, #4
 8006240:	6023      	str	r3, [r4, #0]
 8006242:	4633      	mov	r3, r6
 8006244:	4621      	mov	r1, r4
 8006246:	4628      	mov	r0, r5
 8006248:	9700      	str	r7, [sp, #0]
 800624a:	aa0f      	add	r2, sp, #60	@ 0x3c
 800624c:	f000 fa7e 	bl	800674c <_printf_common>
 8006250:	3001      	adds	r0, #1
 8006252:	f040 8090 	bne.w	8006376 <_printf_float+0x1d6>
 8006256:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800625a:	b011      	add	sp, #68	@ 0x44
 800625c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006260:	4642      	mov	r2, r8
 8006262:	464b      	mov	r3, r9
 8006264:	4640      	mov	r0, r8
 8006266:	4649      	mov	r1, r9
 8006268:	f7fa fbd0 	bl	8000a0c <__aeabi_dcmpun>
 800626c:	b148      	cbz	r0, 8006282 <_printf_float+0xe2>
 800626e:	464b      	mov	r3, r9
 8006270:	2b00      	cmp	r3, #0
 8006272:	bfb8      	it	lt
 8006274:	232d      	movlt	r3, #45	@ 0x2d
 8006276:	4a80      	ldr	r2, [pc, #512]	@ (8006478 <_printf_float+0x2d8>)
 8006278:	bfb8      	it	lt
 800627a:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 800627e:	4b7f      	ldr	r3, [pc, #508]	@ (800647c <_printf_float+0x2dc>)
 8006280:	e7d3      	b.n	800622a <_printf_float+0x8a>
 8006282:	6863      	ldr	r3, [r4, #4]
 8006284:	f00a 01df 	and.w	r1, sl, #223	@ 0xdf
 8006288:	1c5a      	adds	r2, r3, #1
 800628a:	d13f      	bne.n	800630c <_printf_float+0x16c>
 800628c:	2306      	movs	r3, #6
 800628e:	6063      	str	r3, [r4, #4]
 8006290:	2200      	movs	r2, #0
 8006292:	f44b 6380 	orr.w	r3, fp, #1024	@ 0x400
 8006296:	6023      	str	r3, [r4, #0]
 8006298:	9206      	str	r2, [sp, #24]
 800629a:	aa0e      	add	r2, sp, #56	@ 0x38
 800629c:	e9cd a204 	strd	sl, r2, [sp, #16]
 80062a0:	aa0d      	add	r2, sp, #52	@ 0x34
 80062a2:	9203      	str	r2, [sp, #12]
 80062a4:	f10d 0233 	add.w	r2, sp, #51	@ 0x33
 80062a8:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80062ac:	6863      	ldr	r3, [r4, #4]
 80062ae:	4642      	mov	r2, r8
 80062b0:	9300      	str	r3, [sp, #0]
 80062b2:	4628      	mov	r0, r5
 80062b4:	464b      	mov	r3, r9
 80062b6:	910a      	str	r1, [sp, #40]	@ 0x28
 80062b8:	f7ff fed4 	bl	8006064 <__cvt>
 80062bc:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80062be:	4680      	mov	r8, r0
 80062c0:	2947      	cmp	r1, #71	@ 0x47
 80062c2:	990d      	ldr	r1, [sp, #52]	@ 0x34
 80062c4:	d128      	bne.n	8006318 <_printf_float+0x178>
 80062c6:	1cc8      	adds	r0, r1, #3
 80062c8:	db02      	blt.n	80062d0 <_printf_float+0x130>
 80062ca:	6863      	ldr	r3, [r4, #4]
 80062cc:	4299      	cmp	r1, r3
 80062ce:	dd40      	ble.n	8006352 <_printf_float+0x1b2>
 80062d0:	f1aa 0a02 	sub.w	sl, sl, #2
 80062d4:	fa5f fa8a 	uxtb.w	sl, sl
 80062d8:	4652      	mov	r2, sl
 80062da:	3901      	subs	r1, #1
 80062dc:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 80062e0:	910d      	str	r1, [sp, #52]	@ 0x34
 80062e2:	f7ff ff23 	bl	800612c <__exponent>
 80062e6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80062e8:	4681      	mov	r9, r0
 80062ea:	1813      	adds	r3, r2, r0
 80062ec:	2a01      	cmp	r2, #1
 80062ee:	6123      	str	r3, [r4, #16]
 80062f0:	dc02      	bgt.n	80062f8 <_printf_float+0x158>
 80062f2:	6822      	ldr	r2, [r4, #0]
 80062f4:	07d2      	lsls	r2, r2, #31
 80062f6:	d501      	bpl.n	80062fc <_printf_float+0x15c>
 80062f8:	3301      	adds	r3, #1
 80062fa:	6123      	str	r3, [r4, #16]
 80062fc:	f89d 3033 	ldrb.w	r3, [sp, #51]	@ 0x33
 8006300:	2b00      	cmp	r3, #0
 8006302:	d09e      	beq.n	8006242 <_printf_float+0xa2>
 8006304:	232d      	movs	r3, #45	@ 0x2d
 8006306:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800630a:	e79a      	b.n	8006242 <_printf_float+0xa2>
 800630c:	2947      	cmp	r1, #71	@ 0x47
 800630e:	d1bf      	bne.n	8006290 <_printf_float+0xf0>
 8006310:	2b00      	cmp	r3, #0
 8006312:	d1bd      	bne.n	8006290 <_printf_float+0xf0>
 8006314:	2301      	movs	r3, #1
 8006316:	e7ba      	b.n	800628e <_printf_float+0xee>
 8006318:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 800631c:	d9dc      	bls.n	80062d8 <_printf_float+0x138>
 800631e:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8006322:	d118      	bne.n	8006356 <_printf_float+0x1b6>
 8006324:	2900      	cmp	r1, #0
 8006326:	6863      	ldr	r3, [r4, #4]
 8006328:	dd0b      	ble.n	8006342 <_printf_float+0x1a2>
 800632a:	6121      	str	r1, [r4, #16]
 800632c:	b913      	cbnz	r3, 8006334 <_printf_float+0x194>
 800632e:	6822      	ldr	r2, [r4, #0]
 8006330:	07d0      	lsls	r0, r2, #31
 8006332:	d502      	bpl.n	800633a <_printf_float+0x19a>
 8006334:	3301      	adds	r3, #1
 8006336:	440b      	add	r3, r1
 8006338:	6123      	str	r3, [r4, #16]
 800633a:	f04f 0900 	mov.w	r9, #0
 800633e:	65a1      	str	r1, [r4, #88]	@ 0x58
 8006340:	e7dc      	b.n	80062fc <_printf_float+0x15c>
 8006342:	b913      	cbnz	r3, 800634a <_printf_float+0x1aa>
 8006344:	6822      	ldr	r2, [r4, #0]
 8006346:	07d2      	lsls	r2, r2, #31
 8006348:	d501      	bpl.n	800634e <_printf_float+0x1ae>
 800634a:	3302      	adds	r3, #2
 800634c:	e7f4      	b.n	8006338 <_printf_float+0x198>
 800634e:	2301      	movs	r3, #1
 8006350:	e7f2      	b.n	8006338 <_printf_float+0x198>
 8006352:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 8006356:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8006358:	4299      	cmp	r1, r3
 800635a:	db05      	blt.n	8006368 <_printf_float+0x1c8>
 800635c:	6823      	ldr	r3, [r4, #0]
 800635e:	6121      	str	r1, [r4, #16]
 8006360:	07d8      	lsls	r0, r3, #31
 8006362:	d5ea      	bpl.n	800633a <_printf_float+0x19a>
 8006364:	1c4b      	adds	r3, r1, #1
 8006366:	e7e7      	b.n	8006338 <_printf_float+0x198>
 8006368:	2900      	cmp	r1, #0
 800636a:	bfcc      	ite	gt
 800636c:	2201      	movgt	r2, #1
 800636e:	f1c1 0202 	rsble	r2, r1, #2
 8006372:	4413      	add	r3, r2
 8006374:	e7e0      	b.n	8006338 <_printf_float+0x198>
 8006376:	6823      	ldr	r3, [r4, #0]
 8006378:	055a      	lsls	r2, r3, #21
 800637a:	d407      	bmi.n	800638c <_printf_float+0x1ec>
 800637c:	6923      	ldr	r3, [r4, #16]
 800637e:	4642      	mov	r2, r8
 8006380:	4631      	mov	r1, r6
 8006382:	4628      	mov	r0, r5
 8006384:	47b8      	blx	r7
 8006386:	3001      	adds	r0, #1
 8006388:	d12b      	bne.n	80063e2 <_printf_float+0x242>
 800638a:	e764      	b.n	8006256 <_printf_float+0xb6>
 800638c:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8006390:	f240 80dc 	bls.w	800654c <_printf_float+0x3ac>
 8006394:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8006398:	2200      	movs	r2, #0
 800639a:	2300      	movs	r3, #0
 800639c:	f7fa fb04 	bl	80009a8 <__aeabi_dcmpeq>
 80063a0:	2800      	cmp	r0, #0
 80063a2:	d033      	beq.n	800640c <_printf_float+0x26c>
 80063a4:	2301      	movs	r3, #1
 80063a6:	4631      	mov	r1, r6
 80063a8:	4628      	mov	r0, r5
 80063aa:	4a35      	ldr	r2, [pc, #212]	@ (8006480 <_printf_float+0x2e0>)
 80063ac:	47b8      	blx	r7
 80063ae:	3001      	adds	r0, #1
 80063b0:	f43f af51 	beq.w	8006256 <_printf_float+0xb6>
 80063b4:	e9dd 380d 	ldrd	r3, r8, [sp, #52]	@ 0x34
 80063b8:	4543      	cmp	r3, r8
 80063ba:	db02      	blt.n	80063c2 <_printf_float+0x222>
 80063bc:	6823      	ldr	r3, [r4, #0]
 80063be:	07d8      	lsls	r0, r3, #31
 80063c0:	d50f      	bpl.n	80063e2 <_printf_float+0x242>
 80063c2:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80063c6:	4631      	mov	r1, r6
 80063c8:	4628      	mov	r0, r5
 80063ca:	47b8      	blx	r7
 80063cc:	3001      	adds	r0, #1
 80063ce:	f43f af42 	beq.w	8006256 <_printf_float+0xb6>
 80063d2:	f04f 0900 	mov.w	r9, #0
 80063d6:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
 80063da:	f104 0a1a 	add.w	sl, r4, #26
 80063de:	45c8      	cmp	r8, r9
 80063e0:	dc09      	bgt.n	80063f6 <_printf_float+0x256>
 80063e2:	6823      	ldr	r3, [r4, #0]
 80063e4:	079b      	lsls	r3, r3, #30
 80063e6:	f100 8102 	bmi.w	80065ee <_printf_float+0x44e>
 80063ea:	68e0      	ldr	r0, [r4, #12]
 80063ec:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80063ee:	4298      	cmp	r0, r3
 80063f0:	bfb8      	it	lt
 80063f2:	4618      	movlt	r0, r3
 80063f4:	e731      	b.n	800625a <_printf_float+0xba>
 80063f6:	2301      	movs	r3, #1
 80063f8:	4652      	mov	r2, sl
 80063fa:	4631      	mov	r1, r6
 80063fc:	4628      	mov	r0, r5
 80063fe:	47b8      	blx	r7
 8006400:	3001      	adds	r0, #1
 8006402:	f43f af28 	beq.w	8006256 <_printf_float+0xb6>
 8006406:	f109 0901 	add.w	r9, r9, #1
 800640a:	e7e8      	b.n	80063de <_printf_float+0x23e>
 800640c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800640e:	2b00      	cmp	r3, #0
 8006410:	dc38      	bgt.n	8006484 <_printf_float+0x2e4>
 8006412:	2301      	movs	r3, #1
 8006414:	4631      	mov	r1, r6
 8006416:	4628      	mov	r0, r5
 8006418:	4a19      	ldr	r2, [pc, #100]	@ (8006480 <_printf_float+0x2e0>)
 800641a:	47b8      	blx	r7
 800641c:	3001      	adds	r0, #1
 800641e:	f43f af1a 	beq.w	8006256 <_printf_float+0xb6>
 8006422:	e9dd 390d 	ldrd	r3, r9, [sp, #52]	@ 0x34
 8006426:	ea59 0303 	orrs.w	r3, r9, r3
 800642a:	d102      	bne.n	8006432 <_printf_float+0x292>
 800642c:	6823      	ldr	r3, [r4, #0]
 800642e:	07d9      	lsls	r1, r3, #31
 8006430:	d5d7      	bpl.n	80063e2 <_printf_float+0x242>
 8006432:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8006436:	4631      	mov	r1, r6
 8006438:	4628      	mov	r0, r5
 800643a:	47b8      	blx	r7
 800643c:	3001      	adds	r0, #1
 800643e:	f43f af0a 	beq.w	8006256 <_printf_float+0xb6>
 8006442:	f04f 0a00 	mov.w	sl, #0
 8006446:	f104 0b1a 	add.w	fp, r4, #26
 800644a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800644c:	425b      	negs	r3, r3
 800644e:	4553      	cmp	r3, sl
 8006450:	dc01      	bgt.n	8006456 <_printf_float+0x2b6>
 8006452:	464b      	mov	r3, r9
 8006454:	e793      	b.n	800637e <_printf_float+0x1de>
 8006456:	2301      	movs	r3, #1
 8006458:	465a      	mov	r2, fp
 800645a:	4631      	mov	r1, r6
 800645c:	4628      	mov	r0, r5
 800645e:	47b8      	blx	r7
 8006460:	3001      	adds	r0, #1
 8006462:	f43f aef8 	beq.w	8006256 <_printf_float+0xb6>
 8006466:	f10a 0a01 	add.w	sl, sl, #1
 800646a:	e7ee      	b.n	800644a <_printf_float+0x2aa>
 800646c:	7fefffff 	.word	0x7fefffff
 8006470:	08009102 	.word	0x08009102
 8006474:	080090fe 	.word	0x080090fe
 8006478:	0800910a 	.word	0x0800910a
 800647c:	08009106 	.word	0x08009106
 8006480:	0800910e 	.word	0x0800910e
 8006484:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8006486:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 800648a:	4553      	cmp	r3, sl
 800648c:	bfa8      	it	ge
 800648e:	4653      	movge	r3, sl
 8006490:	2b00      	cmp	r3, #0
 8006492:	4699      	mov	r9, r3
 8006494:	dc36      	bgt.n	8006504 <_printf_float+0x364>
 8006496:	f04f 0b00 	mov.w	fp, #0
 800649a:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800649e:	f104 021a 	add.w	r2, r4, #26
 80064a2:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80064a4:	930a      	str	r3, [sp, #40]	@ 0x28
 80064a6:	eba3 0309 	sub.w	r3, r3, r9
 80064aa:	455b      	cmp	r3, fp
 80064ac:	dc31      	bgt.n	8006512 <_printf_float+0x372>
 80064ae:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80064b0:	459a      	cmp	sl, r3
 80064b2:	dc3a      	bgt.n	800652a <_printf_float+0x38a>
 80064b4:	6823      	ldr	r3, [r4, #0]
 80064b6:	07da      	lsls	r2, r3, #31
 80064b8:	d437      	bmi.n	800652a <_printf_float+0x38a>
 80064ba:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80064bc:	ebaa 0903 	sub.w	r9, sl, r3
 80064c0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80064c2:	ebaa 0303 	sub.w	r3, sl, r3
 80064c6:	4599      	cmp	r9, r3
 80064c8:	bfa8      	it	ge
 80064ca:	4699      	movge	r9, r3
 80064cc:	f1b9 0f00 	cmp.w	r9, #0
 80064d0:	dc33      	bgt.n	800653a <_printf_float+0x39a>
 80064d2:	f04f 0800 	mov.w	r8, #0
 80064d6:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80064da:	f104 0b1a 	add.w	fp, r4, #26
 80064de:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80064e0:	ebaa 0303 	sub.w	r3, sl, r3
 80064e4:	eba3 0309 	sub.w	r3, r3, r9
 80064e8:	4543      	cmp	r3, r8
 80064ea:	f77f af7a 	ble.w	80063e2 <_printf_float+0x242>
 80064ee:	2301      	movs	r3, #1
 80064f0:	465a      	mov	r2, fp
 80064f2:	4631      	mov	r1, r6
 80064f4:	4628      	mov	r0, r5
 80064f6:	47b8      	blx	r7
 80064f8:	3001      	adds	r0, #1
 80064fa:	f43f aeac 	beq.w	8006256 <_printf_float+0xb6>
 80064fe:	f108 0801 	add.w	r8, r8, #1
 8006502:	e7ec      	b.n	80064de <_printf_float+0x33e>
 8006504:	4642      	mov	r2, r8
 8006506:	4631      	mov	r1, r6
 8006508:	4628      	mov	r0, r5
 800650a:	47b8      	blx	r7
 800650c:	3001      	adds	r0, #1
 800650e:	d1c2      	bne.n	8006496 <_printf_float+0x2f6>
 8006510:	e6a1      	b.n	8006256 <_printf_float+0xb6>
 8006512:	2301      	movs	r3, #1
 8006514:	4631      	mov	r1, r6
 8006516:	4628      	mov	r0, r5
 8006518:	920a      	str	r2, [sp, #40]	@ 0x28
 800651a:	47b8      	blx	r7
 800651c:	3001      	adds	r0, #1
 800651e:	f43f ae9a 	beq.w	8006256 <_printf_float+0xb6>
 8006522:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8006524:	f10b 0b01 	add.w	fp, fp, #1
 8006528:	e7bb      	b.n	80064a2 <_printf_float+0x302>
 800652a:	4631      	mov	r1, r6
 800652c:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8006530:	4628      	mov	r0, r5
 8006532:	47b8      	blx	r7
 8006534:	3001      	adds	r0, #1
 8006536:	d1c0      	bne.n	80064ba <_printf_float+0x31a>
 8006538:	e68d      	b.n	8006256 <_printf_float+0xb6>
 800653a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800653c:	464b      	mov	r3, r9
 800653e:	4631      	mov	r1, r6
 8006540:	4628      	mov	r0, r5
 8006542:	4442      	add	r2, r8
 8006544:	47b8      	blx	r7
 8006546:	3001      	adds	r0, #1
 8006548:	d1c3      	bne.n	80064d2 <_printf_float+0x332>
 800654a:	e684      	b.n	8006256 <_printf_float+0xb6>
 800654c:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 8006550:	f1ba 0f01 	cmp.w	sl, #1
 8006554:	dc01      	bgt.n	800655a <_printf_float+0x3ba>
 8006556:	07db      	lsls	r3, r3, #31
 8006558:	d536      	bpl.n	80065c8 <_printf_float+0x428>
 800655a:	2301      	movs	r3, #1
 800655c:	4642      	mov	r2, r8
 800655e:	4631      	mov	r1, r6
 8006560:	4628      	mov	r0, r5
 8006562:	47b8      	blx	r7
 8006564:	3001      	adds	r0, #1
 8006566:	f43f ae76 	beq.w	8006256 <_printf_float+0xb6>
 800656a:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800656e:	4631      	mov	r1, r6
 8006570:	4628      	mov	r0, r5
 8006572:	47b8      	blx	r7
 8006574:	3001      	adds	r0, #1
 8006576:	f43f ae6e 	beq.w	8006256 <_printf_float+0xb6>
 800657a:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 800657e:	2200      	movs	r2, #0
 8006580:	2300      	movs	r3, #0
 8006582:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
 8006586:	f7fa fa0f 	bl	80009a8 <__aeabi_dcmpeq>
 800658a:	b9c0      	cbnz	r0, 80065be <_printf_float+0x41e>
 800658c:	4653      	mov	r3, sl
 800658e:	f108 0201 	add.w	r2, r8, #1
 8006592:	4631      	mov	r1, r6
 8006594:	4628      	mov	r0, r5
 8006596:	47b8      	blx	r7
 8006598:	3001      	adds	r0, #1
 800659a:	d10c      	bne.n	80065b6 <_printf_float+0x416>
 800659c:	e65b      	b.n	8006256 <_printf_float+0xb6>
 800659e:	2301      	movs	r3, #1
 80065a0:	465a      	mov	r2, fp
 80065a2:	4631      	mov	r1, r6
 80065a4:	4628      	mov	r0, r5
 80065a6:	47b8      	blx	r7
 80065a8:	3001      	adds	r0, #1
 80065aa:	f43f ae54 	beq.w	8006256 <_printf_float+0xb6>
 80065ae:	f108 0801 	add.w	r8, r8, #1
 80065b2:	45d0      	cmp	r8, sl
 80065b4:	dbf3      	blt.n	800659e <_printf_float+0x3fe>
 80065b6:	464b      	mov	r3, r9
 80065b8:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 80065bc:	e6e0      	b.n	8006380 <_printf_float+0x1e0>
 80065be:	f04f 0800 	mov.w	r8, #0
 80065c2:	f104 0b1a 	add.w	fp, r4, #26
 80065c6:	e7f4      	b.n	80065b2 <_printf_float+0x412>
 80065c8:	2301      	movs	r3, #1
 80065ca:	4642      	mov	r2, r8
 80065cc:	e7e1      	b.n	8006592 <_printf_float+0x3f2>
 80065ce:	2301      	movs	r3, #1
 80065d0:	464a      	mov	r2, r9
 80065d2:	4631      	mov	r1, r6
 80065d4:	4628      	mov	r0, r5
 80065d6:	47b8      	blx	r7
 80065d8:	3001      	adds	r0, #1
 80065da:	f43f ae3c 	beq.w	8006256 <_printf_float+0xb6>
 80065de:	f108 0801 	add.w	r8, r8, #1
 80065e2:	68e3      	ldr	r3, [r4, #12]
 80065e4:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80065e6:	1a5b      	subs	r3, r3, r1
 80065e8:	4543      	cmp	r3, r8
 80065ea:	dcf0      	bgt.n	80065ce <_printf_float+0x42e>
 80065ec:	e6fd      	b.n	80063ea <_printf_float+0x24a>
 80065ee:	f04f 0800 	mov.w	r8, #0
 80065f2:	f104 0919 	add.w	r9, r4, #25
 80065f6:	e7f4      	b.n	80065e2 <_printf_float+0x442>

080065f8 <malloc>:
 80065f8:	4b02      	ldr	r3, [pc, #8]	@ (8006604 <malloc+0xc>)
 80065fa:	4601      	mov	r1, r0
 80065fc:	6818      	ldr	r0, [r3, #0]
 80065fe:	f000 b825 	b.w	800664c <_malloc_r>
 8006602:	bf00      	nop
 8006604:	2000002c 	.word	0x2000002c

08006608 <sbrk_aligned>:
 8006608:	b570      	push	{r4, r5, r6, lr}
 800660a:	4e0f      	ldr	r6, [pc, #60]	@ (8006648 <sbrk_aligned+0x40>)
 800660c:	460c      	mov	r4, r1
 800660e:	6831      	ldr	r1, [r6, #0]
 8006610:	4605      	mov	r5, r0
 8006612:	b911      	cbnz	r1, 800661a <sbrk_aligned+0x12>
 8006614:	f000 fd56 	bl	80070c4 <_sbrk_r>
 8006618:	6030      	str	r0, [r6, #0]
 800661a:	4621      	mov	r1, r4
 800661c:	4628      	mov	r0, r5
 800661e:	f000 fd51 	bl	80070c4 <_sbrk_r>
 8006622:	1c43      	adds	r3, r0, #1
 8006624:	d103      	bne.n	800662e <sbrk_aligned+0x26>
 8006626:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 800662a:	4620      	mov	r0, r4
 800662c:	bd70      	pop	{r4, r5, r6, pc}
 800662e:	1cc4      	adds	r4, r0, #3
 8006630:	f024 0403 	bic.w	r4, r4, #3
 8006634:	42a0      	cmp	r0, r4
 8006636:	d0f8      	beq.n	800662a <sbrk_aligned+0x22>
 8006638:	1a21      	subs	r1, r4, r0
 800663a:	4628      	mov	r0, r5
 800663c:	f000 fd42 	bl	80070c4 <_sbrk_r>
 8006640:	3001      	adds	r0, #1
 8006642:	d1f2      	bne.n	800662a <sbrk_aligned+0x22>
 8006644:	e7ef      	b.n	8006626 <sbrk_aligned+0x1e>
 8006646:	bf00      	nop
 8006648:	200005f8 	.word	0x200005f8

0800664c <_malloc_r>:
 800664c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006650:	1ccd      	adds	r5, r1, #3
 8006652:	f025 0503 	bic.w	r5, r5, #3
 8006656:	3508      	adds	r5, #8
 8006658:	2d0c      	cmp	r5, #12
 800665a:	bf38      	it	cc
 800665c:	250c      	movcc	r5, #12
 800665e:	2d00      	cmp	r5, #0
 8006660:	4606      	mov	r6, r0
 8006662:	db01      	blt.n	8006668 <_malloc_r+0x1c>
 8006664:	42a9      	cmp	r1, r5
 8006666:	d904      	bls.n	8006672 <_malloc_r+0x26>
 8006668:	230c      	movs	r3, #12
 800666a:	6033      	str	r3, [r6, #0]
 800666c:	2000      	movs	r0, #0
 800666e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006672:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8006748 <_malloc_r+0xfc>
 8006676:	f000 faad 	bl	8006bd4 <__malloc_lock>
 800667a:	f8d8 3000 	ldr.w	r3, [r8]
 800667e:	461c      	mov	r4, r3
 8006680:	bb44      	cbnz	r4, 80066d4 <_malloc_r+0x88>
 8006682:	4629      	mov	r1, r5
 8006684:	4630      	mov	r0, r6
 8006686:	f7ff ffbf 	bl	8006608 <sbrk_aligned>
 800668a:	1c43      	adds	r3, r0, #1
 800668c:	4604      	mov	r4, r0
 800668e:	d158      	bne.n	8006742 <_malloc_r+0xf6>
 8006690:	f8d8 4000 	ldr.w	r4, [r8]
 8006694:	4627      	mov	r7, r4
 8006696:	2f00      	cmp	r7, #0
 8006698:	d143      	bne.n	8006722 <_malloc_r+0xd6>
 800669a:	2c00      	cmp	r4, #0
 800669c:	d04b      	beq.n	8006736 <_malloc_r+0xea>
 800669e:	6823      	ldr	r3, [r4, #0]
 80066a0:	4639      	mov	r1, r7
 80066a2:	4630      	mov	r0, r6
 80066a4:	eb04 0903 	add.w	r9, r4, r3
 80066a8:	f000 fd0c 	bl	80070c4 <_sbrk_r>
 80066ac:	4581      	cmp	r9, r0
 80066ae:	d142      	bne.n	8006736 <_malloc_r+0xea>
 80066b0:	6821      	ldr	r1, [r4, #0]
 80066b2:	4630      	mov	r0, r6
 80066b4:	1a6d      	subs	r5, r5, r1
 80066b6:	4629      	mov	r1, r5
 80066b8:	f7ff ffa6 	bl	8006608 <sbrk_aligned>
 80066bc:	3001      	adds	r0, #1
 80066be:	d03a      	beq.n	8006736 <_malloc_r+0xea>
 80066c0:	6823      	ldr	r3, [r4, #0]
 80066c2:	442b      	add	r3, r5
 80066c4:	6023      	str	r3, [r4, #0]
 80066c6:	f8d8 3000 	ldr.w	r3, [r8]
 80066ca:	685a      	ldr	r2, [r3, #4]
 80066cc:	bb62      	cbnz	r2, 8006728 <_malloc_r+0xdc>
 80066ce:	f8c8 7000 	str.w	r7, [r8]
 80066d2:	e00f      	b.n	80066f4 <_malloc_r+0xa8>
 80066d4:	6822      	ldr	r2, [r4, #0]
 80066d6:	1b52      	subs	r2, r2, r5
 80066d8:	d420      	bmi.n	800671c <_malloc_r+0xd0>
 80066da:	2a0b      	cmp	r2, #11
 80066dc:	d917      	bls.n	800670e <_malloc_r+0xc2>
 80066de:	1961      	adds	r1, r4, r5
 80066e0:	42a3      	cmp	r3, r4
 80066e2:	6025      	str	r5, [r4, #0]
 80066e4:	bf18      	it	ne
 80066e6:	6059      	strne	r1, [r3, #4]
 80066e8:	6863      	ldr	r3, [r4, #4]
 80066ea:	bf08      	it	eq
 80066ec:	f8c8 1000 	streq.w	r1, [r8]
 80066f0:	5162      	str	r2, [r4, r5]
 80066f2:	604b      	str	r3, [r1, #4]
 80066f4:	4630      	mov	r0, r6
 80066f6:	f000 fa73 	bl	8006be0 <__malloc_unlock>
 80066fa:	f104 000b 	add.w	r0, r4, #11
 80066fe:	1d23      	adds	r3, r4, #4
 8006700:	f020 0007 	bic.w	r0, r0, #7
 8006704:	1ac2      	subs	r2, r0, r3
 8006706:	bf1c      	itt	ne
 8006708:	1a1b      	subne	r3, r3, r0
 800670a:	50a3      	strne	r3, [r4, r2]
 800670c:	e7af      	b.n	800666e <_malloc_r+0x22>
 800670e:	6862      	ldr	r2, [r4, #4]
 8006710:	42a3      	cmp	r3, r4
 8006712:	bf0c      	ite	eq
 8006714:	f8c8 2000 	streq.w	r2, [r8]
 8006718:	605a      	strne	r2, [r3, #4]
 800671a:	e7eb      	b.n	80066f4 <_malloc_r+0xa8>
 800671c:	4623      	mov	r3, r4
 800671e:	6864      	ldr	r4, [r4, #4]
 8006720:	e7ae      	b.n	8006680 <_malloc_r+0x34>
 8006722:	463c      	mov	r4, r7
 8006724:	687f      	ldr	r7, [r7, #4]
 8006726:	e7b6      	b.n	8006696 <_malloc_r+0x4a>
 8006728:	461a      	mov	r2, r3
 800672a:	685b      	ldr	r3, [r3, #4]
 800672c:	42a3      	cmp	r3, r4
 800672e:	d1fb      	bne.n	8006728 <_malloc_r+0xdc>
 8006730:	2300      	movs	r3, #0
 8006732:	6053      	str	r3, [r2, #4]
 8006734:	e7de      	b.n	80066f4 <_malloc_r+0xa8>
 8006736:	230c      	movs	r3, #12
 8006738:	4630      	mov	r0, r6
 800673a:	6033      	str	r3, [r6, #0]
 800673c:	f000 fa50 	bl	8006be0 <__malloc_unlock>
 8006740:	e794      	b.n	800666c <_malloc_r+0x20>
 8006742:	6005      	str	r5, [r0, #0]
 8006744:	e7d6      	b.n	80066f4 <_malloc_r+0xa8>
 8006746:	bf00      	nop
 8006748:	200005fc 	.word	0x200005fc

0800674c <_printf_common>:
 800674c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006750:	4616      	mov	r6, r2
 8006752:	4698      	mov	r8, r3
 8006754:	688a      	ldr	r2, [r1, #8]
 8006756:	690b      	ldr	r3, [r1, #16]
 8006758:	4607      	mov	r7, r0
 800675a:	4293      	cmp	r3, r2
 800675c:	bfb8      	it	lt
 800675e:	4613      	movlt	r3, r2
 8006760:	6033      	str	r3, [r6, #0]
 8006762:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8006766:	460c      	mov	r4, r1
 8006768:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800676c:	b10a      	cbz	r2, 8006772 <_printf_common+0x26>
 800676e:	3301      	adds	r3, #1
 8006770:	6033      	str	r3, [r6, #0]
 8006772:	6823      	ldr	r3, [r4, #0]
 8006774:	0699      	lsls	r1, r3, #26
 8006776:	bf42      	ittt	mi
 8006778:	6833      	ldrmi	r3, [r6, #0]
 800677a:	3302      	addmi	r3, #2
 800677c:	6033      	strmi	r3, [r6, #0]
 800677e:	6825      	ldr	r5, [r4, #0]
 8006780:	f015 0506 	ands.w	r5, r5, #6
 8006784:	d106      	bne.n	8006794 <_printf_common+0x48>
 8006786:	f104 0a19 	add.w	sl, r4, #25
 800678a:	68e3      	ldr	r3, [r4, #12]
 800678c:	6832      	ldr	r2, [r6, #0]
 800678e:	1a9b      	subs	r3, r3, r2
 8006790:	42ab      	cmp	r3, r5
 8006792:	dc2b      	bgt.n	80067ec <_printf_common+0xa0>
 8006794:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8006798:	6822      	ldr	r2, [r4, #0]
 800679a:	3b00      	subs	r3, #0
 800679c:	bf18      	it	ne
 800679e:	2301      	movne	r3, #1
 80067a0:	0692      	lsls	r2, r2, #26
 80067a2:	d430      	bmi.n	8006806 <_printf_common+0xba>
 80067a4:	4641      	mov	r1, r8
 80067a6:	4638      	mov	r0, r7
 80067a8:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 80067ac:	47c8      	blx	r9
 80067ae:	3001      	adds	r0, #1
 80067b0:	d023      	beq.n	80067fa <_printf_common+0xae>
 80067b2:	6823      	ldr	r3, [r4, #0]
 80067b4:	6922      	ldr	r2, [r4, #16]
 80067b6:	f003 0306 	and.w	r3, r3, #6
 80067ba:	2b04      	cmp	r3, #4
 80067bc:	bf14      	ite	ne
 80067be:	2500      	movne	r5, #0
 80067c0:	6833      	ldreq	r3, [r6, #0]
 80067c2:	f04f 0600 	mov.w	r6, #0
 80067c6:	bf08      	it	eq
 80067c8:	68e5      	ldreq	r5, [r4, #12]
 80067ca:	f104 041a 	add.w	r4, r4, #26
 80067ce:	bf08      	it	eq
 80067d0:	1aed      	subeq	r5, r5, r3
 80067d2:	f854 3c12 	ldr.w	r3, [r4, #-18]
 80067d6:	bf08      	it	eq
 80067d8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80067dc:	4293      	cmp	r3, r2
 80067de:	bfc4      	itt	gt
 80067e0:	1a9b      	subgt	r3, r3, r2
 80067e2:	18ed      	addgt	r5, r5, r3
 80067e4:	42b5      	cmp	r5, r6
 80067e6:	d11a      	bne.n	800681e <_printf_common+0xd2>
 80067e8:	2000      	movs	r0, #0
 80067ea:	e008      	b.n	80067fe <_printf_common+0xb2>
 80067ec:	2301      	movs	r3, #1
 80067ee:	4652      	mov	r2, sl
 80067f0:	4641      	mov	r1, r8
 80067f2:	4638      	mov	r0, r7
 80067f4:	47c8      	blx	r9
 80067f6:	3001      	adds	r0, #1
 80067f8:	d103      	bne.n	8006802 <_printf_common+0xb6>
 80067fa:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80067fe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006802:	3501      	adds	r5, #1
 8006804:	e7c1      	b.n	800678a <_printf_common+0x3e>
 8006806:	2030      	movs	r0, #48	@ 0x30
 8006808:	18e1      	adds	r1, r4, r3
 800680a:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 800680e:	1c5a      	adds	r2, r3, #1
 8006810:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8006814:	4422      	add	r2, r4
 8006816:	3302      	adds	r3, #2
 8006818:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 800681c:	e7c2      	b.n	80067a4 <_printf_common+0x58>
 800681e:	2301      	movs	r3, #1
 8006820:	4622      	mov	r2, r4
 8006822:	4641      	mov	r1, r8
 8006824:	4638      	mov	r0, r7
 8006826:	47c8      	blx	r9
 8006828:	3001      	adds	r0, #1
 800682a:	d0e6      	beq.n	80067fa <_printf_common+0xae>
 800682c:	3601      	adds	r6, #1
 800682e:	e7d9      	b.n	80067e4 <_printf_common+0x98>

08006830 <_printf_i>:
 8006830:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8006834:	7e0f      	ldrb	r7, [r1, #24]
 8006836:	4691      	mov	r9, r2
 8006838:	2f78      	cmp	r7, #120	@ 0x78
 800683a:	4680      	mov	r8, r0
 800683c:	460c      	mov	r4, r1
 800683e:	469a      	mov	sl, r3
 8006840:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8006842:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8006846:	d807      	bhi.n	8006858 <_printf_i+0x28>
 8006848:	2f62      	cmp	r7, #98	@ 0x62
 800684a:	d80a      	bhi.n	8006862 <_printf_i+0x32>
 800684c:	2f00      	cmp	r7, #0
 800684e:	f000 80d1 	beq.w	80069f4 <_printf_i+0x1c4>
 8006852:	2f58      	cmp	r7, #88	@ 0x58
 8006854:	f000 80b8 	beq.w	80069c8 <_printf_i+0x198>
 8006858:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800685c:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8006860:	e03a      	b.n	80068d8 <_printf_i+0xa8>
 8006862:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8006866:	2b15      	cmp	r3, #21
 8006868:	d8f6      	bhi.n	8006858 <_printf_i+0x28>
 800686a:	a101      	add	r1, pc, #4	@ (adr r1, 8006870 <_printf_i+0x40>)
 800686c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8006870:	080068c9 	.word	0x080068c9
 8006874:	080068dd 	.word	0x080068dd
 8006878:	08006859 	.word	0x08006859
 800687c:	08006859 	.word	0x08006859
 8006880:	08006859 	.word	0x08006859
 8006884:	08006859 	.word	0x08006859
 8006888:	080068dd 	.word	0x080068dd
 800688c:	08006859 	.word	0x08006859
 8006890:	08006859 	.word	0x08006859
 8006894:	08006859 	.word	0x08006859
 8006898:	08006859 	.word	0x08006859
 800689c:	080069db 	.word	0x080069db
 80068a0:	08006907 	.word	0x08006907
 80068a4:	08006995 	.word	0x08006995
 80068a8:	08006859 	.word	0x08006859
 80068ac:	08006859 	.word	0x08006859
 80068b0:	080069fd 	.word	0x080069fd
 80068b4:	08006859 	.word	0x08006859
 80068b8:	08006907 	.word	0x08006907
 80068bc:	08006859 	.word	0x08006859
 80068c0:	08006859 	.word	0x08006859
 80068c4:	0800699d 	.word	0x0800699d
 80068c8:	6833      	ldr	r3, [r6, #0]
 80068ca:	1d1a      	adds	r2, r3, #4
 80068cc:	681b      	ldr	r3, [r3, #0]
 80068ce:	6032      	str	r2, [r6, #0]
 80068d0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80068d4:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80068d8:	2301      	movs	r3, #1
 80068da:	e09c      	b.n	8006a16 <_printf_i+0x1e6>
 80068dc:	6833      	ldr	r3, [r6, #0]
 80068de:	6820      	ldr	r0, [r4, #0]
 80068e0:	1d19      	adds	r1, r3, #4
 80068e2:	6031      	str	r1, [r6, #0]
 80068e4:	0606      	lsls	r6, r0, #24
 80068e6:	d501      	bpl.n	80068ec <_printf_i+0xbc>
 80068e8:	681d      	ldr	r5, [r3, #0]
 80068ea:	e003      	b.n	80068f4 <_printf_i+0xc4>
 80068ec:	0645      	lsls	r5, r0, #25
 80068ee:	d5fb      	bpl.n	80068e8 <_printf_i+0xb8>
 80068f0:	f9b3 5000 	ldrsh.w	r5, [r3]
 80068f4:	2d00      	cmp	r5, #0
 80068f6:	da03      	bge.n	8006900 <_printf_i+0xd0>
 80068f8:	232d      	movs	r3, #45	@ 0x2d
 80068fa:	426d      	negs	r5, r5
 80068fc:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8006900:	230a      	movs	r3, #10
 8006902:	4858      	ldr	r0, [pc, #352]	@ (8006a64 <_printf_i+0x234>)
 8006904:	e011      	b.n	800692a <_printf_i+0xfa>
 8006906:	6821      	ldr	r1, [r4, #0]
 8006908:	6833      	ldr	r3, [r6, #0]
 800690a:	0608      	lsls	r0, r1, #24
 800690c:	f853 5b04 	ldr.w	r5, [r3], #4
 8006910:	d402      	bmi.n	8006918 <_printf_i+0xe8>
 8006912:	0649      	lsls	r1, r1, #25
 8006914:	bf48      	it	mi
 8006916:	b2ad      	uxthmi	r5, r5
 8006918:	2f6f      	cmp	r7, #111	@ 0x6f
 800691a:	6033      	str	r3, [r6, #0]
 800691c:	bf14      	ite	ne
 800691e:	230a      	movne	r3, #10
 8006920:	2308      	moveq	r3, #8
 8006922:	4850      	ldr	r0, [pc, #320]	@ (8006a64 <_printf_i+0x234>)
 8006924:	2100      	movs	r1, #0
 8006926:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 800692a:	6866      	ldr	r6, [r4, #4]
 800692c:	2e00      	cmp	r6, #0
 800692e:	60a6      	str	r6, [r4, #8]
 8006930:	db05      	blt.n	800693e <_printf_i+0x10e>
 8006932:	6821      	ldr	r1, [r4, #0]
 8006934:	432e      	orrs	r6, r5
 8006936:	f021 0104 	bic.w	r1, r1, #4
 800693a:	6021      	str	r1, [r4, #0]
 800693c:	d04b      	beq.n	80069d6 <_printf_i+0x1a6>
 800693e:	4616      	mov	r6, r2
 8006940:	fbb5 f1f3 	udiv	r1, r5, r3
 8006944:	fb03 5711 	mls	r7, r3, r1, r5
 8006948:	5dc7      	ldrb	r7, [r0, r7]
 800694a:	f806 7d01 	strb.w	r7, [r6, #-1]!
 800694e:	462f      	mov	r7, r5
 8006950:	42bb      	cmp	r3, r7
 8006952:	460d      	mov	r5, r1
 8006954:	d9f4      	bls.n	8006940 <_printf_i+0x110>
 8006956:	2b08      	cmp	r3, #8
 8006958:	d10b      	bne.n	8006972 <_printf_i+0x142>
 800695a:	6823      	ldr	r3, [r4, #0]
 800695c:	07df      	lsls	r7, r3, #31
 800695e:	d508      	bpl.n	8006972 <_printf_i+0x142>
 8006960:	6923      	ldr	r3, [r4, #16]
 8006962:	6861      	ldr	r1, [r4, #4]
 8006964:	4299      	cmp	r1, r3
 8006966:	bfde      	ittt	le
 8006968:	2330      	movle	r3, #48	@ 0x30
 800696a:	f806 3c01 	strble.w	r3, [r6, #-1]
 800696e:	f106 36ff 	addle.w	r6, r6, #4294967295	@ 0xffffffff
 8006972:	1b92      	subs	r2, r2, r6
 8006974:	6122      	str	r2, [r4, #16]
 8006976:	464b      	mov	r3, r9
 8006978:	4621      	mov	r1, r4
 800697a:	4640      	mov	r0, r8
 800697c:	f8cd a000 	str.w	sl, [sp]
 8006980:	aa03      	add	r2, sp, #12
 8006982:	f7ff fee3 	bl	800674c <_printf_common>
 8006986:	3001      	adds	r0, #1
 8006988:	d14a      	bne.n	8006a20 <_printf_i+0x1f0>
 800698a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800698e:	b004      	add	sp, #16
 8006990:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006994:	6823      	ldr	r3, [r4, #0]
 8006996:	f043 0320 	orr.w	r3, r3, #32
 800699a:	6023      	str	r3, [r4, #0]
 800699c:	2778      	movs	r7, #120	@ 0x78
 800699e:	4832      	ldr	r0, [pc, #200]	@ (8006a68 <_printf_i+0x238>)
 80069a0:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 80069a4:	6823      	ldr	r3, [r4, #0]
 80069a6:	6831      	ldr	r1, [r6, #0]
 80069a8:	061f      	lsls	r7, r3, #24
 80069aa:	f851 5b04 	ldr.w	r5, [r1], #4
 80069ae:	d402      	bmi.n	80069b6 <_printf_i+0x186>
 80069b0:	065f      	lsls	r7, r3, #25
 80069b2:	bf48      	it	mi
 80069b4:	b2ad      	uxthmi	r5, r5
 80069b6:	6031      	str	r1, [r6, #0]
 80069b8:	07d9      	lsls	r1, r3, #31
 80069ba:	bf44      	itt	mi
 80069bc:	f043 0320 	orrmi.w	r3, r3, #32
 80069c0:	6023      	strmi	r3, [r4, #0]
 80069c2:	b11d      	cbz	r5, 80069cc <_printf_i+0x19c>
 80069c4:	2310      	movs	r3, #16
 80069c6:	e7ad      	b.n	8006924 <_printf_i+0xf4>
 80069c8:	4826      	ldr	r0, [pc, #152]	@ (8006a64 <_printf_i+0x234>)
 80069ca:	e7e9      	b.n	80069a0 <_printf_i+0x170>
 80069cc:	6823      	ldr	r3, [r4, #0]
 80069ce:	f023 0320 	bic.w	r3, r3, #32
 80069d2:	6023      	str	r3, [r4, #0]
 80069d4:	e7f6      	b.n	80069c4 <_printf_i+0x194>
 80069d6:	4616      	mov	r6, r2
 80069d8:	e7bd      	b.n	8006956 <_printf_i+0x126>
 80069da:	6833      	ldr	r3, [r6, #0]
 80069dc:	6825      	ldr	r5, [r4, #0]
 80069de:	1d18      	adds	r0, r3, #4
 80069e0:	6961      	ldr	r1, [r4, #20]
 80069e2:	6030      	str	r0, [r6, #0]
 80069e4:	062e      	lsls	r6, r5, #24
 80069e6:	681b      	ldr	r3, [r3, #0]
 80069e8:	d501      	bpl.n	80069ee <_printf_i+0x1be>
 80069ea:	6019      	str	r1, [r3, #0]
 80069ec:	e002      	b.n	80069f4 <_printf_i+0x1c4>
 80069ee:	0668      	lsls	r0, r5, #25
 80069f0:	d5fb      	bpl.n	80069ea <_printf_i+0x1ba>
 80069f2:	8019      	strh	r1, [r3, #0]
 80069f4:	2300      	movs	r3, #0
 80069f6:	4616      	mov	r6, r2
 80069f8:	6123      	str	r3, [r4, #16]
 80069fa:	e7bc      	b.n	8006976 <_printf_i+0x146>
 80069fc:	6833      	ldr	r3, [r6, #0]
 80069fe:	2100      	movs	r1, #0
 8006a00:	1d1a      	adds	r2, r3, #4
 8006a02:	6032      	str	r2, [r6, #0]
 8006a04:	681e      	ldr	r6, [r3, #0]
 8006a06:	6862      	ldr	r2, [r4, #4]
 8006a08:	4630      	mov	r0, r6
 8006a0a:	f000 fbaf 	bl	800716c <memchr>
 8006a0e:	b108      	cbz	r0, 8006a14 <_printf_i+0x1e4>
 8006a10:	1b80      	subs	r0, r0, r6
 8006a12:	6060      	str	r0, [r4, #4]
 8006a14:	6863      	ldr	r3, [r4, #4]
 8006a16:	6123      	str	r3, [r4, #16]
 8006a18:	2300      	movs	r3, #0
 8006a1a:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8006a1e:	e7aa      	b.n	8006976 <_printf_i+0x146>
 8006a20:	4632      	mov	r2, r6
 8006a22:	4649      	mov	r1, r9
 8006a24:	4640      	mov	r0, r8
 8006a26:	6923      	ldr	r3, [r4, #16]
 8006a28:	47d0      	blx	sl
 8006a2a:	3001      	adds	r0, #1
 8006a2c:	d0ad      	beq.n	800698a <_printf_i+0x15a>
 8006a2e:	6823      	ldr	r3, [r4, #0]
 8006a30:	079b      	lsls	r3, r3, #30
 8006a32:	d413      	bmi.n	8006a5c <_printf_i+0x22c>
 8006a34:	68e0      	ldr	r0, [r4, #12]
 8006a36:	9b03      	ldr	r3, [sp, #12]
 8006a38:	4298      	cmp	r0, r3
 8006a3a:	bfb8      	it	lt
 8006a3c:	4618      	movlt	r0, r3
 8006a3e:	e7a6      	b.n	800698e <_printf_i+0x15e>
 8006a40:	2301      	movs	r3, #1
 8006a42:	4632      	mov	r2, r6
 8006a44:	4649      	mov	r1, r9
 8006a46:	4640      	mov	r0, r8
 8006a48:	47d0      	blx	sl
 8006a4a:	3001      	adds	r0, #1
 8006a4c:	d09d      	beq.n	800698a <_printf_i+0x15a>
 8006a4e:	3501      	adds	r5, #1
 8006a50:	68e3      	ldr	r3, [r4, #12]
 8006a52:	9903      	ldr	r1, [sp, #12]
 8006a54:	1a5b      	subs	r3, r3, r1
 8006a56:	42ab      	cmp	r3, r5
 8006a58:	dcf2      	bgt.n	8006a40 <_printf_i+0x210>
 8006a5a:	e7eb      	b.n	8006a34 <_printf_i+0x204>
 8006a5c:	2500      	movs	r5, #0
 8006a5e:	f104 0619 	add.w	r6, r4, #25
 8006a62:	e7f5      	b.n	8006a50 <_printf_i+0x220>
 8006a64:	08009110 	.word	0x08009110
 8006a68:	08009121 	.word	0x08009121

08006a6c <setvbuf>:
 8006a6c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006a70:	461d      	mov	r5, r3
 8006a72:	4b57      	ldr	r3, [pc, #348]	@ (8006bd0 <setvbuf+0x164>)
 8006a74:	4604      	mov	r4, r0
 8006a76:	681f      	ldr	r7, [r3, #0]
 8006a78:	460e      	mov	r6, r1
 8006a7a:	4690      	mov	r8, r2
 8006a7c:	b127      	cbz	r7, 8006a88 <setvbuf+0x1c>
 8006a7e:	6a3b      	ldr	r3, [r7, #32]
 8006a80:	b913      	cbnz	r3, 8006a88 <setvbuf+0x1c>
 8006a82:	4638      	mov	r0, r7
 8006a84:	f000 f93e 	bl	8006d04 <__sinit>
 8006a88:	f1b8 0f02 	cmp.w	r8, #2
 8006a8c:	d006      	beq.n	8006a9c <setvbuf+0x30>
 8006a8e:	f1b8 0f01 	cmp.w	r8, #1
 8006a92:	f200 809a 	bhi.w	8006bca <setvbuf+0x15e>
 8006a96:	2d00      	cmp	r5, #0
 8006a98:	f2c0 8097 	blt.w	8006bca <setvbuf+0x15e>
 8006a9c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8006a9e:	07d9      	lsls	r1, r3, #31
 8006aa0:	d405      	bmi.n	8006aae <setvbuf+0x42>
 8006aa2:	89a3      	ldrh	r3, [r4, #12]
 8006aa4:	059a      	lsls	r2, r3, #22
 8006aa6:	d402      	bmi.n	8006aae <setvbuf+0x42>
 8006aa8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8006aaa:	f000 fb46 	bl	800713a <__retarget_lock_acquire_recursive>
 8006aae:	4621      	mov	r1, r4
 8006ab0:	4638      	mov	r0, r7
 8006ab2:	f001 fbf9 	bl	80082a8 <_fflush_r>
 8006ab6:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8006ab8:	b141      	cbz	r1, 8006acc <setvbuf+0x60>
 8006aba:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8006abe:	4299      	cmp	r1, r3
 8006ac0:	d002      	beq.n	8006ac8 <setvbuf+0x5c>
 8006ac2:	4638      	mov	r0, r7
 8006ac4:	f001 f9e8 	bl	8007e98 <_free_r>
 8006ac8:	2300      	movs	r3, #0
 8006aca:	6363      	str	r3, [r4, #52]	@ 0x34
 8006acc:	2300      	movs	r3, #0
 8006ace:	61a3      	str	r3, [r4, #24]
 8006ad0:	6063      	str	r3, [r4, #4]
 8006ad2:	89a3      	ldrh	r3, [r4, #12]
 8006ad4:	061b      	lsls	r3, r3, #24
 8006ad6:	d503      	bpl.n	8006ae0 <setvbuf+0x74>
 8006ad8:	4638      	mov	r0, r7
 8006ada:	6921      	ldr	r1, [r4, #16]
 8006adc:	f001 f9dc 	bl	8007e98 <_free_r>
 8006ae0:	89a3      	ldrh	r3, [r4, #12]
 8006ae2:	f1b8 0f02 	cmp.w	r8, #2
 8006ae6:	f423 634a 	bic.w	r3, r3, #3232	@ 0xca0
 8006aea:	f023 0303 	bic.w	r3, r3, #3
 8006aee:	81a3      	strh	r3, [r4, #12]
 8006af0:	d061      	beq.n	8006bb6 <setvbuf+0x14a>
 8006af2:	ab01      	add	r3, sp, #4
 8006af4:	466a      	mov	r2, sp
 8006af6:	4621      	mov	r1, r4
 8006af8:	4638      	mov	r0, r7
 8006afa:	f000 f993 	bl	8006e24 <__swhatbuf_r>
 8006afe:	89a3      	ldrh	r3, [r4, #12]
 8006b00:	4318      	orrs	r0, r3
 8006b02:	81a0      	strh	r0, [r4, #12]
 8006b04:	bb2d      	cbnz	r5, 8006b52 <setvbuf+0xe6>
 8006b06:	9d00      	ldr	r5, [sp, #0]
 8006b08:	4628      	mov	r0, r5
 8006b0a:	f7ff fd75 	bl	80065f8 <malloc>
 8006b0e:	4606      	mov	r6, r0
 8006b10:	2800      	cmp	r0, #0
 8006b12:	d152      	bne.n	8006bba <setvbuf+0x14e>
 8006b14:	f8dd 9000 	ldr.w	r9, [sp]
 8006b18:	45a9      	cmp	r9, r5
 8006b1a:	d140      	bne.n	8006b9e <setvbuf+0x132>
 8006b1c:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
 8006b20:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006b24:	f043 0202 	orr.w	r2, r3, #2
 8006b28:	81a2      	strh	r2, [r4, #12]
 8006b2a:	2200      	movs	r2, #0
 8006b2c:	60a2      	str	r2, [r4, #8]
 8006b2e:	f104 0247 	add.w	r2, r4, #71	@ 0x47
 8006b32:	6022      	str	r2, [r4, #0]
 8006b34:	6122      	str	r2, [r4, #16]
 8006b36:	2201      	movs	r2, #1
 8006b38:	6162      	str	r2, [r4, #20]
 8006b3a:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8006b3c:	07d6      	lsls	r6, r2, #31
 8006b3e:	d404      	bmi.n	8006b4a <setvbuf+0xde>
 8006b40:	0598      	lsls	r0, r3, #22
 8006b42:	d402      	bmi.n	8006b4a <setvbuf+0xde>
 8006b44:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8006b46:	f000 faf9 	bl	800713c <__retarget_lock_release_recursive>
 8006b4a:	4628      	mov	r0, r5
 8006b4c:	b003      	add	sp, #12
 8006b4e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006b52:	2e00      	cmp	r6, #0
 8006b54:	d0d8      	beq.n	8006b08 <setvbuf+0x9c>
 8006b56:	6a3b      	ldr	r3, [r7, #32]
 8006b58:	b913      	cbnz	r3, 8006b60 <setvbuf+0xf4>
 8006b5a:	4638      	mov	r0, r7
 8006b5c:	f000 f8d2 	bl	8006d04 <__sinit>
 8006b60:	f1b8 0f01 	cmp.w	r8, #1
 8006b64:	bf08      	it	eq
 8006b66:	89a3      	ldrheq	r3, [r4, #12]
 8006b68:	e9c4 6504 	strd	r6, r5, [r4, #16]
 8006b6c:	bf04      	itt	eq
 8006b6e:	f043 0301 	orreq.w	r3, r3, #1
 8006b72:	81a3      	strheq	r3, [r4, #12]
 8006b74:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006b78:	6026      	str	r6, [r4, #0]
 8006b7a:	f013 0208 	ands.w	r2, r3, #8
 8006b7e:	d01e      	beq.n	8006bbe <setvbuf+0x152>
 8006b80:	07d9      	lsls	r1, r3, #31
 8006b82:	bf41      	itttt	mi
 8006b84:	2200      	movmi	r2, #0
 8006b86:	426d      	negmi	r5, r5
 8006b88:	60a2      	strmi	r2, [r4, #8]
 8006b8a:	61a5      	strmi	r5, [r4, #24]
 8006b8c:	bf58      	it	pl
 8006b8e:	60a5      	strpl	r5, [r4, #8]
 8006b90:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8006b92:	07d2      	lsls	r2, r2, #31
 8006b94:	d401      	bmi.n	8006b9a <setvbuf+0x12e>
 8006b96:	059b      	lsls	r3, r3, #22
 8006b98:	d513      	bpl.n	8006bc2 <setvbuf+0x156>
 8006b9a:	2500      	movs	r5, #0
 8006b9c:	e7d5      	b.n	8006b4a <setvbuf+0xde>
 8006b9e:	4648      	mov	r0, r9
 8006ba0:	f7ff fd2a 	bl	80065f8 <malloc>
 8006ba4:	4606      	mov	r6, r0
 8006ba6:	2800      	cmp	r0, #0
 8006ba8:	d0b8      	beq.n	8006b1c <setvbuf+0xb0>
 8006baa:	89a3      	ldrh	r3, [r4, #12]
 8006bac:	464d      	mov	r5, r9
 8006bae:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8006bb2:	81a3      	strh	r3, [r4, #12]
 8006bb4:	e7cf      	b.n	8006b56 <setvbuf+0xea>
 8006bb6:	2500      	movs	r5, #0
 8006bb8:	e7b2      	b.n	8006b20 <setvbuf+0xb4>
 8006bba:	46a9      	mov	r9, r5
 8006bbc:	e7f5      	b.n	8006baa <setvbuf+0x13e>
 8006bbe:	60a2      	str	r2, [r4, #8]
 8006bc0:	e7e6      	b.n	8006b90 <setvbuf+0x124>
 8006bc2:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8006bc4:	f000 faba 	bl	800713c <__retarget_lock_release_recursive>
 8006bc8:	e7e7      	b.n	8006b9a <setvbuf+0x12e>
 8006bca:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
 8006bce:	e7bc      	b.n	8006b4a <setvbuf+0xde>
 8006bd0:	2000002c 	.word	0x2000002c

08006bd4 <__malloc_lock>:
 8006bd4:	4801      	ldr	r0, [pc, #4]	@ (8006bdc <__malloc_lock+0x8>)
 8006bd6:	f000 bab0 	b.w	800713a <__retarget_lock_acquire_recursive>
 8006bda:	bf00      	nop
 8006bdc:	2000073c 	.word	0x2000073c

08006be0 <__malloc_unlock>:
 8006be0:	4801      	ldr	r0, [pc, #4]	@ (8006be8 <__malloc_unlock+0x8>)
 8006be2:	f000 baab 	b.w	800713c <__retarget_lock_release_recursive>
 8006be6:	bf00      	nop
 8006be8:	2000073c 	.word	0x2000073c

08006bec <std>:
 8006bec:	2300      	movs	r3, #0
 8006bee:	b510      	push	{r4, lr}
 8006bf0:	4604      	mov	r4, r0
 8006bf2:	e9c0 3300 	strd	r3, r3, [r0]
 8006bf6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8006bfa:	6083      	str	r3, [r0, #8]
 8006bfc:	8181      	strh	r1, [r0, #12]
 8006bfe:	6643      	str	r3, [r0, #100]	@ 0x64
 8006c00:	81c2      	strh	r2, [r0, #14]
 8006c02:	6183      	str	r3, [r0, #24]
 8006c04:	4619      	mov	r1, r3
 8006c06:	2208      	movs	r2, #8
 8006c08:	305c      	adds	r0, #92	@ 0x5c
 8006c0a:	f000 f9ed 	bl	8006fe8 <memset>
 8006c0e:	4b0d      	ldr	r3, [pc, #52]	@ (8006c44 <std+0x58>)
 8006c10:	6224      	str	r4, [r4, #32]
 8006c12:	6263      	str	r3, [r4, #36]	@ 0x24
 8006c14:	4b0c      	ldr	r3, [pc, #48]	@ (8006c48 <std+0x5c>)
 8006c16:	62a3      	str	r3, [r4, #40]	@ 0x28
 8006c18:	4b0c      	ldr	r3, [pc, #48]	@ (8006c4c <std+0x60>)
 8006c1a:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8006c1c:	4b0c      	ldr	r3, [pc, #48]	@ (8006c50 <std+0x64>)
 8006c1e:	6323      	str	r3, [r4, #48]	@ 0x30
 8006c20:	4b0c      	ldr	r3, [pc, #48]	@ (8006c54 <std+0x68>)
 8006c22:	429c      	cmp	r4, r3
 8006c24:	d006      	beq.n	8006c34 <std+0x48>
 8006c26:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8006c2a:	4294      	cmp	r4, r2
 8006c2c:	d002      	beq.n	8006c34 <std+0x48>
 8006c2e:	33d0      	adds	r3, #208	@ 0xd0
 8006c30:	429c      	cmp	r4, r3
 8006c32:	d105      	bne.n	8006c40 <std+0x54>
 8006c34:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8006c38:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006c3c:	f000 ba7c 	b.w	8007138 <__retarget_lock_init_recursive>
 8006c40:	bd10      	pop	{r4, pc}
 8006c42:	bf00      	nop
 8006c44:	080089ed 	.word	0x080089ed
 8006c48:	08008a0f 	.word	0x08008a0f
 8006c4c:	08008a47 	.word	0x08008a47
 8006c50:	08008a6b 	.word	0x08008a6b
 8006c54:	20000600 	.word	0x20000600

08006c58 <stdio_exit_handler>:
 8006c58:	4a02      	ldr	r2, [pc, #8]	@ (8006c64 <stdio_exit_handler+0xc>)
 8006c5a:	4903      	ldr	r1, [pc, #12]	@ (8006c68 <stdio_exit_handler+0x10>)
 8006c5c:	4803      	ldr	r0, [pc, #12]	@ (8006c6c <stdio_exit_handler+0x14>)
 8006c5e:	f000 b869 	b.w	8006d34 <_fwalk_sglue>
 8006c62:	bf00      	nop
 8006c64:	20000020 	.word	0x20000020
 8006c68:	080082a9 	.word	0x080082a9
 8006c6c:	20000030 	.word	0x20000030

08006c70 <cleanup_stdio>:
 8006c70:	6841      	ldr	r1, [r0, #4]
 8006c72:	4b0c      	ldr	r3, [pc, #48]	@ (8006ca4 <cleanup_stdio+0x34>)
 8006c74:	b510      	push	{r4, lr}
 8006c76:	4299      	cmp	r1, r3
 8006c78:	4604      	mov	r4, r0
 8006c7a:	d001      	beq.n	8006c80 <cleanup_stdio+0x10>
 8006c7c:	f001 fb14 	bl	80082a8 <_fflush_r>
 8006c80:	68a1      	ldr	r1, [r4, #8]
 8006c82:	4b09      	ldr	r3, [pc, #36]	@ (8006ca8 <cleanup_stdio+0x38>)
 8006c84:	4299      	cmp	r1, r3
 8006c86:	d002      	beq.n	8006c8e <cleanup_stdio+0x1e>
 8006c88:	4620      	mov	r0, r4
 8006c8a:	f001 fb0d 	bl	80082a8 <_fflush_r>
 8006c8e:	68e1      	ldr	r1, [r4, #12]
 8006c90:	4b06      	ldr	r3, [pc, #24]	@ (8006cac <cleanup_stdio+0x3c>)
 8006c92:	4299      	cmp	r1, r3
 8006c94:	d004      	beq.n	8006ca0 <cleanup_stdio+0x30>
 8006c96:	4620      	mov	r0, r4
 8006c98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006c9c:	f001 bb04 	b.w	80082a8 <_fflush_r>
 8006ca0:	bd10      	pop	{r4, pc}
 8006ca2:	bf00      	nop
 8006ca4:	20000600 	.word	0x20000600
 8006ca8:	20000668 	.word	0x20000668
 8006cac:	200006d0 	.word	0x200006d0

08006cb0 <global_stdio_init.part.0>:
 8006cb0:	b510      	push	{r4, lr}
 8006cb2:	4b0b      	ldr	r3, [pc, #44]	@ (8006ce0 <global_stdio_init.part.0+0x30>)
 8006cb4:	4c0b      	ldr	r4, [pc, #44]	@ (8006ce4 <global_stdio_init.part.0+0x34>)
 8006cb6:	4a0c      	ldr	r2, [pc, #48]	@ (8006ce8 <global_stdio_init.part.0+0x38>)
 8006cb8:	4620      	mov	r0, r4
 8006cba:	601a      	str	r2, [r3, #0]
 8006cbc:	2104      	movs	r1, #4
 8006cbe:	2200      	movs	r2, #0
 8006cc0:	f7ff ff94 	bl	8006bec <std>
 8006cc4:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8006cc8:	2201      	movs	r2, #1
 8006cca:	2109      	movs	r1, #9
 8006ccc:	f7ff ff8e 	bl	8006bec <std>
 8006cd0:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8006cd4:	2202      	movs	r2, #2
 8006cd6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006cda:	2112      	movs	r1, #18
 8006cdc:	f7ff bf86 	b.w	8006bec <std>
 8006ce0:	20000738 	.word	0x20000738
 8006ce4:	20000600 	.word	0x20000600
 8006ce8:	08006c59 	.word	0x08006c59

08006cec <__sfp_lock_acquire>:
 8006cec:	4801      	ldr	r0, [pc, #4]	@ (8006cf4 <__sfp_lock_acquire+0x8>)
 8006cee:	f000 ba24 	b.w	800713a <__retarget_lock_acquire_recursive>
 8006cf2:	bf00      	nop
 8006cf4:	2000073d 	.word	0x2000073d

08006cf8 <__sfp_lock_release>:
 8006cf8:	4801      	ldr	r0, [pc, #4]	@ (8006d00 <__sfp_lock_release+0x8>)
 8006cfa:	f000 ba1f 	b.w	800713c <__retarget_lock_release_recursive>
 8006cfe:	bf00      	nop
 8006d00:	2000073d 	.word	0x2000073d

08006d04 <__sinit>:
 8006d04:	b510      	push	{r4, lr}
 8006d06:	4604      	mov	r4, r0
 8006d08:	f7ff fff0 	bl	8006cec <__sfp_lock_acquire>
 8006d0c:	6a23      	ldr	r3, [r4, #32]
 8006d0e:	b11b      	cbz	r3, 8006d18 <__sinit+0x14>
 8006d10:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006d14:	f7ff bff0 	b.w	8006cf8 <__sfp_lock_release>
 8006d18:	4b04      	ldr	r3, [pc, #16]	@ (8006d2c <__sinit+0x28>)
 8006d1a:	6223      	str	r3, [r4, #32]
 8006d1c:	4b04      	ldr	r3, [pc, #16]	@ (8006d30 <__sinit+0x2c>)
 8006d1e:	681b      	ldr	r3, [r3, #0]
 8006d20:	2b00      	cmp	r3, #0
 8006d22:	d1f5      	bne.n	8006d10 <__sinit+0xc>
 8006d24:	f7ff ffc4 	bl	8006cb0 <global_stdio_init.part.0>
 8006d28:	e7f2      	b.n	8006d10 <__sinit+0xc>
 8006d2a:	bf00      	nop
 8006d2c:	08006c71 	.word	0x08006c71
 8006d30:	20000738 	.word	0x20000738

08006d34 <_fwalk_sglue>:
 8006d34:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006d38:	4607      	mov	r7, r0
 8006d3a:	4688      	mov	r8, r1
 8006d3c:	4614      	mov	r4, r2
 8006d3e:	2600      	movs	r6, #0
 8006d40:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8006d44:	f1b9 0901 	subs.w	r9, r9, #1
 8006d48:	d505      	bpl.n	8006d56 <_fwalk_sglue+0x22>
 8006d4a:	6824      	ldr	r4, [r4, #0]
 8006d4c:	2c00      	cmp	r4, #0
 8006d4e:	d1f7      	bne.n	8006d40 <_fwalk_sglue+0xc>
 8006d50:	4630      	mov	r0, r6
 8006d52:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006d56:	89ab      	ldrh	r3, [r5, #12]
 8006d58:	2b01      	cmp	r3, #1
 8006d5a:	d907      	bls.n	8006d6c <_fwalk_sglue+0x38>
 8006d5c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8006d60:	3301      	adds	r3, #1
 8006d62:	d003      	beq.n	8006d6c <_fwalk_sglue+0x38>
 8006d64:	4629      	mov	r1, r5
 8006d66:	4638      	mov	r0, r7
 8006d68:	47c0      	blx	r8
 8006d6a:	4306      	orrs	r6, r0
 8006d6c:	3568      	adds	r5, #104	@ 0x68
 8006d6e:	e7e9      	b.n	8006d44 <_fwalk_sglue+0x10>

08006d70 <_fwrite_r>:
 8006d70:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006d74:	9c08      	ldr	r4, [sp, #32]
 8006d76:	468a      	mov	sl, r1
 8006d78:	4690      	mov	r8, r2
 8006d7a:	4606      	mov	r6, r0
 8006d7c:	fb02 f903 	mul.w	r9, r2, r3
 8006d80:	b118      	cbz	r0, 8006d8a <_fwrite_r+0x1a>
 8006d82:	6a03      	ldr	r3, [r0, #32]
 8006d84:	b90b      	cbnz	r3, 8006d8a <_fwrite_r+0x1a>
 8006d86:	f7ff ffbd 	bl	8006d04 <__sinit>
 8006d8a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8006d8c:	07dd      	lsls	r5, r3, #31
 8006d8e:	d405      	bmi.n	8006d9c <_fwrite_r+0x2c>
 8006d90:	89a3      	ldrh	r3, [r4, #12]
 8006d92:	0598      	lsls	r0, r3, #22
 8006d94:	d402      	bmi.n	8006d9c <_fwrite_r+0x2c>
 8006d96:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8006d98:	f000 f9cf 	bl	800713a <__retarget_lock_acquire_recursive>
 8006d9c:	89a3      	ldrh	r3, [r4, #12]
 8006d9e:	0719      	lsls	r1, r3, #28
 8006da0:	d516      	bpl.n	8006dd0 <_fwrite_r+0x60>
 8006da2:	6923      	ldr	r3, [r4, #16]
 8006da4:	b1a3      	cbz	r3, 8006dd0 <_fwrite_r+0x60>
 8006da6:	2500      	movs	r5, #0
 8006da8:	454d      	cmp	r5, r9
 8006daa:	d01f      	beq.n	8006dec <_fwrite_r+0x7c>
 8006dac:	68a7      	ldr	r7, [r4, #8]
 8006dae:	f81a 1005 	ldrb.w	r1, [sl, r5]
 8006db2:	3f01      	subs	r7, #1
 8006db4:	2f00      	cmp	r7, #0
 8006db6:	60a7      	str	r7, [r4, #8]
 8006db8:	da04      	bge.n	8006dc4 <_fwrite_r+0x54>
 8006dba:	69a3      	ldr	r3, [r4, #24]
 8006dbc:	429f      	cmp	r7, r3
 8006dbe:	db0f      	blt.n	8006de0 <_fwrite_r+0x70>
 8006dc0:	290a      	cmp	r1, #10
 8006dc2:	d00d      	beq.n	8006de0 <_fwrite_r+0x70>
 8006dc4:	6823      	ldr	r3, [r4, #0]
 8006dc6:	1c5a      	adds	r2, r3, #1
 8006dc8:	6022      	str	r2, [r4, #0]
 8006dca:	7019      	strb	r1, [r3, #0]
 8006dcc:	3501      	adds	r5, #1
 8006dce:	e7eb      	b.n	8006da8 <_fwrite_r+0x38>
 8006dd0:	4621      	mov	r1, r4
 8006dd2:	4630      	mov	r0, r6
 8006dd4:	f001 fe9e 	bl	8008b14 <__swsetup_r>
 8006dd8:	2800      	cmp	r0, #0
 8006dda:	d0e4      	beq.n	8006da6 <_fwrite_r+0x36>
 8006ddc:	2500      	movs	r5, #0
 8006dde:	e005      	b.n	8006dec <_fwrite_r+0x7c>
 8006de0:	4622      	mov	r2, r4
 8006de2:	4630      	mov	r0, r6
 8006de4:	f001 fe58 	bl	8008a98 <__swbuf_r>
 8006de8:	3001      	adds	r0, #1
 8006dea:	d1ef      	bne.n	8006dcc <_fwrite_r+0x5c>
 8006dec:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8006dee:	07da      	lsls	r2, r3, #31
 8006df0:	d405      	bmi.n	8006dfe <_fwrite_r+0x8e>
 8006df2:	89a3      	ldrh	r3, [r4, #12]
 8006df4:	059b      	lsls	r3, r3, #22
 8006df6:	d402      	bmi.n	8006dfe <_fwrite_r+0x8e>
 8006df8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8006dfa:	f000 f99f 	bl	800713c <__retarget_lock_release_recursive>
 8006dfe:	fbb5 f0f8 	udiv	r0, r5, r8
 8006e02:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

08006e08 <fwrite>:
 8006e08:	b507      	push	{r0, r1, r2, lr}
 8006e0a:	9300      	str	r3, [sp, #0]
 8006e0c:	4613      	mov	r3, r2
 8006e0e:	460a      	mov	r2, r1
 8006e10:	4601      	mov	r1, r0
 8006e12:	4803      	ldr	r0, [pc, #12]	@ (8006e20 <fwrite+0x18>)
 8006e14:	6800      	ldr	r0, [r0, #0]
 8006e16:	f7ff ffab 	bl	8006d70 <_fwrite_r>
 8006e1a:	b003      	add	sp, #12
 8006e1c:	f85d fb04 	ldr.w	pc, [sp], #4
 8006e20:	2000002c 	.word	0x2000002c

08006e24 <__swhatbuf_r>:
 8006e24:	b570      	push	{r4, r5, r6, lr}
 8006e26:	460c      	mov	r4, r1
 8006e28:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006e2c:	4615      	mov	r5, r2
 8006e2e:	2900      	cmp	r1, #0
 8006e30:	461e      	mov	r6, r3
 8006e32:	b096      	sub	sp, #88	@ 0x58
 8006e34:	da0c      	bge.n	8006e50 <__swhatbuf_r+0x2c>
 8006e36:	89a3      	ldrh	r3, [r4, #12]
 8006e38:	2100      	movs	r1, #0
 8006e3a:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8006e3e:	bf14      	ite	ne
 8006e40:	2340      	movne	r3, #64	@ 0x40
 8006e42:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8006e46:	2000      	movs	r0, #0
 8006e48:	6031      	str	r1, [r6, #0]
 8006e4a:	602b      	str	r3, [r5, #0]
 8006e4c:	b016      	add	sp, #88	@ 0x58
 8006e4e:	bd70      	pop	{r4, r5, r6, pc}
 8006e50:	466a      	mov	r2, sp
 8006e52:	f000 f979 	bl	8007148 <_fstat_r>
 8006e56:	2800      	cmp	r0, #0
 8006e58:	dbed      	blt.n	8006e36 <__swhatbuf_r+0x12>
 8006e5a:	9901      	ldr	r1, [sp, #4]
 8006e5c:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8006e60:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8006e64:	4259      	negs	r1, r3
 8006e66:	4159      	adcs	r1, r3
 8006e68:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8006e6c:	e7eb      	b.n	8006e46 <__swhatbuf_r+0x22>

08006e6e <__smakebuf_r>:
 8006e6e:	898b      	ldrh	r3, [r1, #12]
 8006e70:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006e72:	079d      	lsls	r5, r3, #30
 8006e74:	4606      	mov	r6, r0
 8006e76:	460c      	mov	r4, r1
 8006e78:	d507      	bpl.n	8006e8a <__smakebuf_r+0x1c>
 8006e7a:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8006e7e:	6023      	str	r3, [r4, #0]
 8006e80:	6123      	str	r3, [r4, #16]
 8006e82:	2301      	movs	r3, #1
 8006e84:	6163      	str	r3, [r4, #20]
 8006e86:	b003      	add	sp, #12
 8006e88:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006e8a:	466a      	mov	r2, sp
 8006e8c:	ab01      	add	r3, sp, #4
 8006e8e:	f7ff ffc9 	bl	8006e24 <__swhatbuf_r>
 8006e92:	9f00      	ldr	r7, [sp, #0]
 8006e94:	4605      	mov	r5, r0
 8006e96:	4639      	mov	r1, r7
 8006e98:	4630      	mov	r0, r6
 8006e9a:	f7ff fbd7 	bl	800664c <_malloc_r>
 8006e9e:	b948      	cbnz	r0, 8006eb4 <__smakebuf_r+0x46>
 8006ea0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006ea4:	059a      	lsls	r2, r3, #22
 8006ea6:	d4ee      	bmi.n	8006e86 <__smakebuf_r+0x18>
 8006ea8:	f023 0303 	bic.w	r3, r3, #3
 8006eac:	f043 0302 	orr.w	r3, r3, #2
 8006eb0:	81a3      	strh	r3, [r4, #12]
 8006eb2:	e7e2      	b.n	8006e7a <__smakebuf_r+0xc>
 8006eb4:	89a3      	ldrh	r3, [r4, #12]
 8006eb6:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8006eba:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8006ebe:	81a3      	strh	r3, [r4, #12]
 8006ec0:	9b01      	ldr	r3, [sp, #4]
 8006ec2:	6020      	str	r0, [r4, #0]
 8006ec4:	b15b      	cbz	r3, 8006ede <__smakebuf_r+0x70>
 8006ec6:	4630      	mov	r0, r6
 8006ec8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8006ecc:	f000 f8d6 	bl	800707c <_isatty_r>
 8006ed0:	b128      	cbz	r0, 8006ede <__smakebuf_r+0x70>
 8006ed2:	89a3      	ldrh	r3, [r4, #12]
 8006ed4:	f023 0303 	bic.w	r3, r3, #3
 8006ed8:	f043 0301 	orr.w	r3, r3, #1
 8006edc:	81a3      	strh	r3, [r4, #12]
 8006ede:	89a3      	ldrh	r3, [r4, #12]
 8006ee0:	431d      	orrs	r5, r3
 8006ee2:	81a5      	strh	r5, [r4, #12]
 8006ee4:	e7cf      	b.n	8006e86 <__smakebuf_r+0x18>
	...

08006ee8 <iprintf>:
 8006ee8:	b40f      	push	{r0, r1, r2, r3}
 8006eea:	b507      	push	{r0, r1, r2, lr}
 8006eec:	4906      	ldr	r1, [pc, #24]	@ (8006f08 <iprintf+0x20>)
 8006eee:	ab04      	add	r3, sp, #16
 8006ef0:	6808      	ldr	r0, [r1, #0]
 8006ef2:	f853 2b04 	ldr.w	r2, [r3], #4
 8006ef6:	6881      	ldr	r1, [r0, #8]
 8006ef8:	9301      	str	r3, [sp, #4]
 8006efa:	f001 f83d 	bl	8007f78 <_vfiprintf_r>
 8006efe:	b003      	add	sp, #12
 8006f00:	f85d eb04 	ldr.w	lr, [sp], #4
 8006f04:	b004      	add	sp, #16
 8006f06:	4770      	bx	lr
 8006f08:	2000002c 	.word	0x2000002c

08006f0c <_puts_r>:
 8006f0c:	6a03      	ldr	r3, [r0, #32]
 8006f0e:	b570      	push	{r4, r5, r6, lr}
 8006f10:	4605      	mov	r5, r0
 8006f12:	460e      	mov	r6, r1
 8006f14:	6884      	ldr	r4, [r0, #8]
 8006f16:	b90b      	cbnz	r3, 8006f1c <_puts_r+0x10>
 8006f18:	f7ff fef4 	bl	8006d04 <__sinit>
 8006f1c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8006f1e:	07db      	lsls	r3, r3, #31
 8006f20:	d405      	bmi.n	8006f2e <_puts_r+0x22>
 8006f22:	89a3      	ldrh	r3, [r4, #12]
 8006f24:	0598      	lsls	r0, r3, #22
 8006f26:	d402      	bmi.n	8006f2e <_puts_r+0x22>
 8006f28:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8006f2a:	f000 f906 	bl	800713a <__retarget_lock_acquire_recursive>
 8006f2e:	89a3      	ldrh	r3, [r4, #12]
 8006f30:	0719      	lsls	r1, r3, #28
 8006f32:	d502      	bpl.n	8006f3a <_puts_r+0x2e>
 8006f34:	6923      	ldr	r3, [r4, #16]
 8006f36:	2b00      	cmp	r3, #0
 8006f38:	d135      	bne.n	8006fa6 <_puts_r+0x9a>
 8006f3a:	4621      	mov	r1, r4
 8006f3c:	4628      	mov	r0, r5
 8006f3e:	f001 fde9 	bl	8008b14 <__swsetup_r>
 8006f42:	b380      	cbz	r0, 8006fa6 <_puts_r+0x9a>
 8006f44:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
 8006f48:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8006f4a:	07da      	lsls	r2, r3, #31
 8006f4c:	d405      	bmi.n	8006f5a <_puts_r+0x4e>
 8006f4e:	89a3      	ldrh	r3, [r4, #12]
 8006f50:	059b      	lsls	r3, r3, #22
 8006f52:	d402      	bmi.n	8006f5a <_puts_r+0x4e>
 8006f54:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8006f56:	f000 f8f1 	bl	800713c <__retarget_lock_release_recursive>
 8006f5a:	4628      	mov	r0, r5
 8006f5c:	bd70      	pop	{r4, r5, r6, pc}
 8006f5e:	2b00      	cmp	r3, #0
 8006f60:	da04      	bge.n	8006f6c <_puts_r+0x60>
 8006f62:	69a2      	ldr	r2, [r4, #24]
 8006f64:	429a      	cmp	r2, r3
 8006f66:	dc17      	bgt.n	8006f98 <_puts_r+0x8c>
 8006f68:	290a      	cmp	r1, #10
 8006f6a:	d015      	beq.n	8006f98 <_puts_r+0x8c>
 8006f6c:	6823      	ldr	r3, [r4, #0]
 8006f6e:	1c5a      	adds	r2, r3, #1
 8006f70:	6022      	str	r2, [r4, #0]
 8006f72:	7019      	strb	r1, [r3, #0]
 8006f74:	68a3      	ldr	r3, [r4, #8]
 8006f76:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8006f7a:	3b01      	subs	r3, #1
 8006f7c:	60a3      	str	r3, [r4, #8]
 8006f7e:	2900      	cmp	r1, #0
 8006f80:	d1ed      	bne.n	8006f5e <_puts_r+0x52>
 8006f82:	2b00      	cmp	r3, #0
 8006f84:	da11      	bge.n	8006faa <_puts_r+0x9e>
 8006f86:	4622      	mov	r2, r4
 8006f88:	210a      	movs	r1, #10
 8006f8a:	4628      	mov	r0, r5
 8006f8c:	f001 fd84 	bl	8008a98 <__swbuf_r>
 8006f90:	3001      	adds	r0, #1
 8006f92:	d0d7      	beq.n	8006f44 <_puts_r+0x38>
 8006f94:	250a      	movs	r5, #10
 8006f96:	e7d7      	b.n	8006f48 <_puts_r+0x3c>
 8006f98:	4622      	mov	r2, r4
 8006f9a:	4628      	mov	r0, r5
 8006f9c:	f001 fd7c 	bl	8008a98 <__swbuf_r>
 8006fa0:	3001      	adds	r0, #1
 8006fa2:	d1e7      	bne.n	8006f74 <_puts_r+0x68>
 8006fa4:	e7ce      	b.n	8006f44 <_puts_r+0x38>
 8006fa6:	3e01      	subs	r6, #1
 8006fa8:	e7e4      	b.n	8006f74 <_puts_r+0x68>
 8006faa:	6823      	ldr	r3, [r4, #0]
 8006fac:	1c5a      	adds	r2, r3, #1
 8006fae:	6022      	str	r2, [r4, #0]
 8006fb0:	220a      	movs	r2, #10
 8006fb2:	701a      	strb	r2, [r3, #0]
 8006fb4:	e7ee      	b.n	8006f94 <_puts_r+0x88>
	...

08006fb8 <puts>:
 8006fb8:	4b02      	ldr	r3, [pc, #8]	@ (8006fc4 <puts+0xc>)
 8006fba:	4601      	mov	r1, r0
 8006fbc:	6818      	ldr	r0, [r3, #0]
 8006fbe:	f7ff bfa5 	b.w	8006f0c <_puts_r>
 8006fc2:	bf00      	nop
 8006fc4:	2000002c 	.word	0x2000002c

08006fc8 <memcmp>:
 8006fc8:	b510      	push	{r4, lr}
 8006fca:	3901      	subs	r1, #1
 8006fcc:	4402      	add	r2, r0
 8006fce:	4290      	cmp	r0, r2
 8006fd0:	d101      	bne.n	8006fd6 <memcmp+0xe>
 8006fd2:	2000      	movs	r0, #0
 8006fd4:	e005      	b.n	8006fe2 <memcmp+0x1a>
 8006fd6:	7803      	ldrb	r3, [r0, #0]
 8006fd8:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 8006fdc:	42a3      	cmp	r3, r4
 8006fde:	d001      	beq.n	8006fe4 <memcmp+0x1c>
 8006fe0:	1b18      	subs	r0, r3, r4
 8006fe2:	bd10      	pop	{r4, pc}
 8006fe4:	3001      	adds	r0, #1
 8006fe6:	e7f2      	b.n	8006fce <memcmp+0x6>

08006fe8 <memset>:
 8006fe8:	4603      	mov	r3, r0
 8006fea:	4402      	add	r2, r0
 8006fec:	4293      	cmp	r3, r2
 8006fee:	d100      	bne.n	8006ff2 <memset+0xa>
 8006ff0:	4770      	bx	lr
 8006ff2:	f803 1b01 	strb.w	r1, [r3], #1
 8006ff6:	e7f9      	b.n	8006fec <memset+0x4>

08006ff8 <strncmp>:
 8006ff8:	b510      	push	{r4, lr}
 8006ffa:	b16a      	cbz	r2, 8007018 <strncmp+0x20>
 8006ffc:	3901      	subs	r1, #1
 8006ffe:	1884      	adds	r4, r0, r2
 8007000:	f810 2b01 	ldrb.w	r2, [r0], #1
 8007004:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8007008:	429a      	cmp	r2, r3
 800700a:	d103      	bne.n	8007014 <strncmp+0x1c>
 800700c:	42a0      	cmp	r0, r4
 800700e:	d001      	beq.n	8007014 <strncmp+0x1c>
 8007010:	2a00      	cmp	r2, #0
 8007012:	d1f5      	bne.n	8007000 <strncmp+0x8>
 8007014:	1ad0      	subs	r0, r2, r3
 8007016:	bd10      	pop	{r4, pc}
 8007018:	4610      	mov	r0, r2
 800701a:	e7fc      	b.n	8007016 <strncmp+0x1e>

0800701c <_raise_r>:
 800701c:	291f      	cmp	r1, #31
 800701e:	b538      	push	{r3, r4, r5, lr}
 8007020:	4605      	mov	r5, r0
 8007022:	460c      	mov	r4, r1
 8007024:	d904      	bls.n	8007030 <_raise_r+0x14>
 8007026:	2316      	movs	r3, #22
 8007028:	6003      	str	r3, [r0, #0]
 800702a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800702e:	bd38      	pop	{r3, r4, r5, pc}
 8007030:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8007032:	b112      	cbz	r2, 800703a <_raise_r+0x1e>
 8007034:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8007038:	b94b      	cbnz	r3, 800704e <_raise_r+0x32>
 800703a:	4628      	mov	r0, r5
 800703c:	f000 f840 	bl	80070c0 <_getpid_r>
 8007040:	4622      	mov	r2, r4
 8007042:	4601      	mov	r1, r0
 8007044:	4628      	mov	r0, r5
 8007046:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800704a:	f000 b827 	b.w	800709c <_kill_r>
 800704e:	2b01      	cmp	r3, #1
 8007050:	d00a      	beq.n	8007068 <_raise_r+0x4c>
 8007052:	1c59      	adds	r1, r3, #1
 8007054:	d103      	bne.n	800705e <_raise_r+0x42>
 8007056:	2316      	movs	r3, #22
 8007058:	6003      	str	r3, [r0, #0]
 800705a:	2001      	movs	r0, #1
 800705c:	e7e7      	b.n	800702e <_raise_r+0x12>
 800705e:	2100      	movs	r1, #0
 8007060:	4620      	mov	r0, r4
 8007062:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8007066:	4798      	blx	r3
 8007068:	2000      	movs	r0, #0
 800706a:	e7e0      	b.n	800702e <_raise_r+0x12>

0800706c <raise>:
 800706c:	4b02      	ldr	r3, [pc, #8]	@ (8007078 <raise+0xc>)
 800706e:	4601      	mov	r1, r0
 8007070:	6818      	ldr	r0, [r3, #0]
 8007072:	f7ff bfd3 	b.w	800701c <_raise_r>
 8007076:	bf00      	nop
 8007078:	2000002c 	.word	0x2000002c

0800707c <_isatty_r>:
 800707c:	b538      	push	{r3, r4, r5, lr}
 800707e:	2300      	movs	r3, #0
 8007080:	4d05      	ldr	r5, [pc, #20]	@ (8007098 <_isatty_r+0x1c>)
 8007082:	4604      	mov	r4, r0
 8007084:	4608      	mov	r0, r1
 8007086:	602b      	str	r3, [r5, #0]
 8007088:	f7fb fec2 	bl	8002e10 <_isatty>
 800708c:	1c43      	adds	r3, r0, #1
 800708e:	d102      	bne.n	8007096 <_isatty_r+0x1a>
 8007090:	682b      	ldr	r3, [r5, #0]
 8007092:	b103      	cbz	r3, 8007096 <_isatty_r+0x1a>
 8007094:	6023      	str	r3, [r4, #0]
 8007096:	bd38      	pop	{r3, r4, r5, pc}
 8007098:	20000740 	.word	0x20000740

0800709c <_kill_r>:
 800709c:	b538      	push	{r3, r4, r5, lr}
 800709e:	2300      	movs	r3, #0
 80070a0:	4d06      	ldr	r5, [pc, #24]	@ (80070bc <_kill_r+0x20>)
 80070a2:	4604      	mov	r4, r0
 80070a4:	4608      	mov	r0, r1
 80070a6:	4611      	mov	r1, r2
 80070a8:	602b      	str	r3, [r5, #0]
 80070aa:	f7fb fe7c 	bl	8002da6 <_kill>
 80070ae:	1c43      	adds	r3, r0, #1
 80070b0:	d102      	bne.n	80070b8 <_kill_r+0x1c>
 80070b2:	682b      	ldr	r3, [r5, #0]
 80070b4:	b103      	cbz	r3, 80070b8 <_kill_r+0x1c>
 80070b6:	6023      	str	r3, [r4, #0]
 80070b8:	bd38      	pop	{r3, r4, r5, pc}
 80070ba:	bf00      	nop
 80070bc:	20000740 	.word	0x20000740

080070c0 <_getpid_r>:
 80070c0:	f7fb be6a 	b.w	8002d98 <_getpid>

080070c4 <_sbrk_r>:
 80070c4:	b538      	push	{r3, r4, r5, lr}
 80070c6:	2300      	movs	r3, #0
 80070c8:	4d05      	ldr	r5, [pc, #20]	@ (80070e0 <_sbrk_r+0x1c>)
 80070ca:	4604      	mov	r4, r0
 80070cc:	4608      	mov	r0, r1
 80070ce:	602b      	str	r3, [r5, #0]
 80070d0:	f7fb feb4 	bl	8002e3c <_sbrk>
 80070d4:	1c43      	adds	r3, r0, #1
 80070d6:	d102      	bne.n	80070de <_sbrk_r+0x1a>
 80070d8:	682b      	ldr	r3, [r5, #0]
 80070da:	b103      	cbz	r3, 80070de <_sbrk_r+0x1a>
 80070dc:	6023      	str	r3, [r4, #0]
 80070de:	bd38      	pop	{r3, r4, r5, pc}
 80070e0:	20000740 	.word	0x20000740

080070e4 <__errno>:
 80070e4:	4b01      	ldr	r3, [pc, #4]	@ (80070ec <__errno+0x8>)
 80070e6:	6818      	ldr	r0, [r3, #0]
 80070e8:	4770      	bx	lr
 80070ea:	bf00      	nop
 80070ec:	2000002c 	.word	0x2000002c

080070f0 <__libc_init_array>:
 80070f0:	b570      	push	{r4, r5, r6, lr}
 80070f2:	2600      	movs	r6, #0
 80070f4:	4d0c      	ldr	r5, [pc, #48]	@ (8007128 <__libc_init_array+0x38>)
 80070f6:	4c0d      	ldr	r4, [pc, #52]	@ (800712c <__libc_init_array+0x3c>)
 80070f8:	1b64      	subs	r4, r4, r5
 80070fa:	10a4      	asrs	r4, r4, #2
 80070fc:	42a6      	cmp	r6, r4
 80070fe:	d109      	bne.n	8007114 <__libc_init_array+0x24>
 8007100:	f001 fdd8 	bl	8008cb4 <_init>
 8007104:	2600      	movs	r6, #0
 8007106:	4d0a      	ldr	r5, [pc, #40]	@ (8007130 <__libc_init_array+0x40>)
 8007108:	4c0a      	ldr	r4, [pc, #40]	@ (8007134 <__libc_init_array+0x44>)
 800710a:	1b64      	subs	r4, r4, r5
 800710c:	10a4      	asrs	r4, r4, #2
 800710e:	42a6      	cmp	r6, r4
 8007110:	d105      	bne.n	800711e <__libc_init_array+0x2e>
 8007112:	bd70      	pop	{r4, r5, r6, pc}
 8007114:	f855 3b04 	ldr.w	r3, [r5], #4
 8007118:	4798      	blx	r3
 800711a:	3601      	adds	r6, #1
 800711c:	e7ee      	b.n	80070fc <__libc_init_array+0xc>
 800711e:	f855 3b04 	ldr.w	r3, [r5], #4
 8007122:	4798      	blx	r3
 8007124:	3601      	adds	r6, #1
 8007126:	e7f2      	b.n	800710e <__libc_init_array+0x1e>
 8007128:	08009478 	.word	0x08009478
 800712c:	08009478 	.word	0x08009478
 8007130:	08009478 	.word	0x08009478
 8007134:	0800947c 	.word	0x0800947c

08007138 <__retarget_lock_init_recursive>:
 8007138:	4770      	bx	lr

0800713a <__retarget_lock_acquire_recursive>:
 800713a:	4770      	bx	lr

0800713c <__retarget_lock_release_recursive>:
 800713c:	4770      	bx	lr
	...

08007140 <_localeconv_r>:
 8007140:	4800      	ldr	r0, [pc, #0]	@ (8007144 <_localeconv_r+0x4>)
 8007142:	4770      	bx	lr
 8007144:	2000016c 	.word	0x2000016c

08007148 <_fstat_r>:
 8007148:	b538      	push	{r3, r4, r5, lr}
 800714a:	2300      	movs	r3, #0
 800714c:	4d06      	ldr	r5, [pc, #24]	@ (8007168 <_fstat_r+0x20>)
 800714e:	4604      	mov	r4, r0
 8007150:	4608      	mov	r0, r1
 8007152:	4611      	mov	r1, r2
 8007154:	602b      	str	r3, [r5, #0]
 8007156:	f7fb fe4c 	bl	8002df2 <_fstat>
 800715a:	1c43      	adds	r3, r0, #1
 800715c:	d102      	bne.n	8007164 <_fstat_r+0x1c>
 800715e:	682b      	ldr	r3, [r5, #0]
 8007160:	b103      	cbz	r3, 8007164 <_fstat_r+0x1c>
 8007162:	6023      	str	r3, [r4, #0]
 8007164:	bd38      	pop	{r3, r4, r5, pc}
 8007166:	bf00      	nop
 8007168:	20000740 	.word	0x20000740

0800716c <memchr>:
 800716c:	4603      	mov	r3, r0
 800716e:	b510      	push	{r4, lr}
 8007170:	b2c9      	uxtb	r1, r1
 8007172:	4402      	add	r2, r0
 8007174:	4293      	cmp	r3, r2
 8007176:	4618      	mov	r0, r3
 8007178:	d101      	bne.n	800717e <memchr+0x12>
 800717a:	2000      	movs	r0, #0
 800717c:	e003      	b.n	8007186 <memchr+0x1a>
 800717e:	7804      	ldrb	r4, [r0, #0]
 8007180:	3301      	adds	r3, #1
 8007182:	428c      	cmp	r4, r1
 8007184:	d1f6      	bne.n	8007174 <memchr+0x8>
 8007186:	bd10      	pop	{r4, pc}

08007188 <memcpy>:
 8007188:	440a      	add	r2, r1
 800718a:	4291      	cmp	r1, r2
 800718c:	f100 33ff 	add.w	r3, r0, #4294967295	@ 0xffffffff
 8007190:	d100      	bne.n	8007194 <memcpy+0xc>
 8007192:	4770      	bx	lr
 8007194:	b510      	push	{r4, lr}
 8007196:	f811 4b01 	ldrb.w	r4, [r1], #1
 800719a:	4291      	cmp	r1, r2
 800719c:	f803 4f01 	strb.w	r4, [r3, #1]!
 80071a0:	d1f9      	bne.n	8007196 <memcpy+0xe>
 80071a2:	bd10      	pop	{r4, pc}

080071a4 <__assert_func>:
 80071a4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80071a6:	4614      	mov	r4, r2
 80071a8:	461a      	mov	r2, r3
 80071aa:	4b09      	ldr	r3, [pc, #36]	@ (80071d0 <__assert_func+0x2c>)
 80071ac:	4605      	mov	r5, r0
 80071ae:	681b      	ldr	r3, [r3, #0]
 80071b0:	68d8      	ldr	r0, [r3, #12]
 80071b2:	b14c      	cbz	r4, 80071c8 <__assert_func+0x24>
 80071b4:	4b07      	ldr	r3, [pc, #28]	@ (80071d4 <__assert_func+0x30>)
 80071b6:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80071ba:	9100      	str	r1, [sp, #0]
 80071bc:	462b      	mov	r3, r5
 80071be:	4906      	ldr	r1, [pc, #24]	@ (80071d8 <__assert_func+0x34>)
 80071c0:	f001 fc58 	bl	8008a74 <fiprintf>
 80071c4:	f7fe ff34 	bl	8006030 <abort>
 80071c8:	4b04      	ldr	r3, [pc, #16]	@ (80071dc <__assert_func+0x38>)
 80071ca:	461c      	mov	r4, r3
 80071cc:	e7f3      	b.n	80071b6 <__assert_func+0x12>
 80071ce:	bf00      	nop
 80071d0:	2000002c 	.word	0x2000002c
 80071d4:	08009132 	.word	0x08009132
 80071d8:	0800913f 	.word	0x0800913f
 80071dc:	0800916d 	.word	0x0800916d

080071e0 <quorem>:
 80071e0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80071e4:	6903      	ldr	r3, [r0, #16]
 80071e6:	690c      	ldr	r4, [r1, #16]
 80071e8:	4607      	mov	r7, r0
 80071ea:	42a3      	cmp	r3, r4
 80071ec:	db7e      	blt.n	80072ec <quorem+0x10c>
 80071ee:	3c01      	subs	r4, #1
 80071f0:	00a3      	lsls	r3, r4, #2
 80071f2:	f100 0514 	add.w	r5, r0, #20
 80071f6:	f101 0814 	add.w	r8, r1, #20
 80071fa:	9300      	str	r3, [sp, #0]
 80071fc:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8007200:	9301      	str	r3, [sp, #4]
 8007202:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8007206:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800720a:	3301      	adds	r3, #1
 800720c:	429a      	cmp	r2, r3
 800720e:	fbb2 f6f3 	udiv	r6, r2, r3
 8007212:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8007216:	d32e      	bcc.n	8007276 <quorem+0x96>
 8007218:	f04f 0a00 	mov.w	sl, #0
 800721c:	46c4      	mov	ip, r8
 800721e:	46ae      	mov	lr, r5
 8007220:	46d3      	mov	fp, sl
 8007222:	f85c 3b04 	ldr.w	r3, [ip], #4
 8007226:	b298      	uxth	r0, r3
 8007228:	fb06 a000 	mla	r0, r6, r0, sl
 800722c:	0c1b      	lsrs	r3, r3, #16
 800722e:	0c02      	lsrs	r2, r0, #16
 8007230:	fb06 2303 	mla	r3, r6, r3, r2
 8007234:	f8de 2000 	ldr.w	r2, [lr]
 8007238:	b280      	uxth	r0, r0
 800723a:	b292      	uxth	r2, r2
 800723c:	1a12      	subs	r2, r2, r0
 800723e:	445a      	add	r2, fp
 8007240:	f8de 0000 	ldr.w	r0, [lr]
 8007244:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8007248:	b29b      	uxth	r3, r3
 800724a:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 800724e:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 8007252:	b292      	uxth	r2, r2
 8007254:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8007258:	45e1      	cmp	r9, ip
 800725a:	ea4f 4b23 	mov.w	fp, r3, asr #16
 800725e:	f84e 2b04 	str.w	r2, [lr], #4
 8007262:	d2de      	bcs.n	8007222 <quorem+0x42>
 8007264:	9b00      	ldr	r3, [sp, #0]
 8007266:	58eb      	ldr	r3, [r5, r3]
 8007268:	b92b      	cbnz	r3, 8007276 <quorem+0x96>
 800726a:	9b01      	ldr	r3, [sp, #4]
 800726c:	3b04      	subs	r3, #4
 800726e:	429d      	cmp	r5, r3
 8007270:	461a      	mov	r2, r3
 8007272:	d32f      	bcc.n	80072d4 <quorem+0xf4>
 8007274:	613c      	str	r4, [r7, #16]
 8007276:	4638      	mov	r0, r7
 8007278:	f001 fab0 	bl	80087dc <__mcmp>
 800727c:	2800      	cmp	r0, #0
 800727e:	db25      	blt.n	80072cc <quorem+0xec>
 8007280:	4629      	mov	r1, r5
 8007282:	2000      	movs	r0, #0
 8007284:	f858 2b04 	ldr.w	r2, [r8], #4
 8007288:	f8d1 c000 	ldr.w	ip, [r1]
 800728c:	fa1f fe82 	uxth.w	lr, r2
 8007290:	fa1f f38c 	uxth.w	r3, ip
 8007294:	eba3 030e 	sub.w	r3, r3, lr
 8007298:	4403      	add	r3, r0
 800729a:	0c12      	lsrs	r2, r2, #16
 800729c:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 80072a0:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 80072a4:	b29b      	uxth	r3, r3
 80072a6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80072aa:	45c1      	cmp	r9, r8
 80072ac:	ea4f 4022 	mov.w	r0, r2, asr #16
 80072b0:	f841 3b04 	str.w	r3, [r1], #4
 80072b4:	d2e6      	bcs.n	8007284 <quorem+0xa4>
 80072b6:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80072ba:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80072be:	b922      	cbnz	r2, 80072ca <quorem+0xea>
 80072c0:	3b04      	subs	r3, #4
 80072c2:	429d      	cmp	r5, r3
 80072c4:	461a      	mov	r2, r3
 80072c6:	d30b      	bcc.n	80072e0 <quorem+0x100>
 80072c8:	613c      	str	r4, [r7, #16]
 80072ca:	3601      	adds	r6, #1
 80072cc:	4630      	mov	r0, r6
 80072ce:	b003      	add	sp, #12
 80072d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80072d4:	6812      	ldr	r2, [r2, #0]
 80072d6:	3b04      	subs	r3, #4
 80072d8:	2a00      	cmp	r2, #0
 80072da:	d1cb      	bne.n	8007274 <quorem+0x94>
 80072dc:	3c01      	subs	r4, #1
 80072de:	e7c6      	b.n	800726e <quorem+0x8e>
 80072e0:	6812      	ldr	r2, [r2, #0]
 80072e2:	3b04      	subs	r3, #4
 80072e4:	2a00      	cmp	r2, #0
 80072e6:	d1ef      	bne.n	80072c8 <quorem+0xe8>
 80072e8:	3c01      	subs	r4, #1
 80072ea:	e7ea      	b.n	80072c2 <quorem+0xe2>
 80072ec:	2000      	movs	r0, #0
 80072ee:	e7ee      	b.n	80072ce <quorem+0xee>

080072f0 <_dtoa_r>:
 80072f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80072f4:	4614      	mov	r4, r2
 80072f6:	461d      	mov	r5, r3
 80072f8:	69c7      	ldr	r7, [r0, #28]
 80072fa:	b097      	sub	sp, #92	@ 0x5c
 80072fc:	4681      	mov	r9, r0
 80072fe:	e9cd 4506 	strd	r4, r5, [sp, #24]
 8007302:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 8007304:	b97f      	cbnz	r7, 8007326 <_dtoa_r+0x36>
 8007306:	2010      	movs	r0, #16
 8007308:	f7ff f976 	bl	80065f8 <malloc>
 800730c:	4602      	mov	r2, r0
 800730e:	f8c9 001c 	str.w	r0, [r9, #28]
 8007312:	b920      	cbnz	r0, 800731e <_dtoa_r+0x2e>
 8007314:	21ef      	movs	r1, #239	@ 0xef
 8007316:	4bac      	ldr	r3, [pc, #688]	@ (80075c8 <_dtoa_r+0x2d8>)
 8007318:	48ac      	ldr	r0, [pc, #688]	@ (80075cc <_dtoa_r+0x2dc>)
 800731a:	f7ff ff43 	bl	80071a4 <__assert_func>
 800731e:	e9c0 7701 	strd	r7, r7, [r0, #4]
 8007322:	6007      	str	r7, [r0, #0]
 8007324:	60c7      	str	r7, [r0, #12]
 8007326:	f8d9 301c 	ldr.w	r3, [r9, #28]
 800732a:	6819      	ldr	r1, [r3, #0]
 800732c:	b159      	cbz	r1, 8007346 <_dtoa_r+0x56>
 800732e:	685a      	ldr	r2, [r3, #4]
 8007330:	2301      	movs	r3, #1
 8007332:	4093      	lsls	r3, r2
 8007334:	604a      	str	r2, [r1, #4]
 8007336:	608b      	str	r3, [r1, #8]
 8007338:	4648      	mov	r0, r9
 800733a:	f001 f81d 	bl	8008378 <_Bfree>
 800733e:	2200      	movs	r2, #0
 8007340:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8007344:	601a      	str	r2, [r3, #0]
 8007346:	1e2b      	subs	r3, r5, #0
 8007348:	bfaf      	iteee	ge
 800734a:	2300      	movge	r3, #0
 800734c:	2201      	movlt	r2, #1
 800734e:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 8007352:	9307      	strlt	r3, [sp, #28]
 8007354:	bfa8      	it	ge
 8007356:	6033      	strge	r3, [r6, #0]
 8007358:	f8dd 801c 	ldr.w	r8, [sp, #28]
 800735c:	4b9c      	ldr	r3, [pc, #624]	@ (80075d0 <_dtoa_r+0x2e0>)
 800735e:	bfb8      	it	lt
 8007360:	6032      	strlt	r2, [r6, #0]
 8007362:	ea33 0308 	bics.w	r3, r3, r8
 8007366:	d112      	bne.n	800738e <_dtoa_r+0x9e>
 8007368:	f242 730f 	movw	r3, #9999	@ 0x270f
 800736c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 800736e:	6013      	str	r3, [r2, #0]
 8007370:	f3c8 0313 	ubfx	r3, r8, #0, #20
 8007374:	4323      	orrs	r3, r4
 8007376:	f000 855e 	beq.w	8007e36 <_dtoa_r+0xb46>
 800737a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 800737c:	f8df a254 	ldr.w	sl, [pc, #596]	@ 80075d4 <_dtoa_r+0x2e4>
 8007380:	2b00      	cmp	r3, #0
 8007382:	f000 8560 	beq.w	8007e46 <_dtoa_r+0xb56>
 8007386:	f10a 0303 	add.w	r3, sl, #3
 800738a:	f000 bd5a 	b.w	8007e42 <_dtoa_r+0xb52>
 800738e:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8007392:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 8007396:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800739a:	2200      	movs	r2, #0
 800739c:	2300      	movs	r3, #0
 800739e:	f7f9 fb03 	bl	80009a8 <__aeabi_dcmpeq>
 80073a2:	4607      	mov	r7, r0
 80073a4:	b158      	cbz	r0, 80073be <_dtoa_r+0xce>
 80073a6:	2301      	movs	r3, #1
 80073a8:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80073aa:	6013      	str	r3, [r2, #0]
 80073ac:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80073ae:	b113      	cbz	r3, 80073b6 <_dtoa_r+0xc6>
 80073b0:	4b89      	ldr	r3, [pc, #548]	@ (80075d8 <_dtoa_r+0x2e8>)
 80073b2:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 80073b4:	6013      	str	r3, [r2, #0]
 80073b6:	f8df a224 	ldr.w	sl, [pc, #548]	@ 80075dc <_dtoa_r+0x2ec>
 80073ba:	f000 bd44 	b.w	8007e46 <_dtoa_r+0xb56>
 80073be:	ab14      	add	r3, sp, #80	@ 0x50
 80073c0:	9301      	str	r3, [sp, #4]
 80073c2:	ab15      	add	r3, sp, #84	@ 0x54
 80073c4:	9300      	str	r3, [sp, #0]
 80073c6:	4648      	mov	r0, r9
 80073c8:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 80073cc:	f001 fab6 	bl	800893c <__d2b>
 80073d0:	f3c8 560a 	ubfx	r6, r8, #20, #11
 80073d4:	9003      	str	r0, [sp, #12]
 80073d6:	2e00      	cmp	r6, #0
 80073d8:	d078      	beq.n	80074cc <_dtoa_r+0x1dc>
 80073da:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80073de:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80073e0:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 80073e4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80073e8:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 80073ec:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 80073f0:	9712      	str	r7, [sp, #72]	@ 0x48
 80073f2:	4619      	mov	r1, r3
 80073f4:	2200      	movs	r2, #0
 80073f6:	4b7a      	ldr	r3, [pc, #488]	@ (80075e0 <_dtoa_r+0x2f0>)
 80073f8:	f7f8 feb6 	bl	8000168 <__aeabi_dsub>
 80073fc:	a36c      	add	r3, pc, #432	@ (adr r3, 80075b0 <_dtoa_r+0x2c0>)
 80073fe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007402:	f7f9 f869 	bl	80004d8 <__aeabi_dmul>
 8007406:	a36c      	add	r3, pc, #432	@ (adr r3, 80075b8 <_dtoa_r+0x2c8>)
 8007408:	e9d3 2300 	ldrd	r2, r3, [r3]
 800740c:	f7f8 feae 	bl	800016c <__adddf3>
 8007410:	4604      	mov	r4, r0
 8007412:	4630      	mov	r0, r6
 8007414:	460d      	mov	r5, r1
 8007416:	f7f8 fff5 	bl	8000404 <__aeabi_i2d>
 800741a:	a369      	add	r3, pc, #420	@ (adr r3, 80075c0 <_dtoa_r+0x2d0>)
 800741c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007420:	f7f9 f85a 	bl	80004d8 <__aeabi_dmul>
 8007424:	4602      	mov	r2, r0
 8007426:	460b      	mov	r3, r1
 8007428:	4620      	mov	r0, r4
 800742a:	4629      	mov	r1, r5
 800742c:	f7f8 fe9e 	bl	800016c <__adddf3>
 8007430:	4604      	mov	r4, r0
 8007432:	460d      	mov	r5, r1
 8007434:	f7f9 fb00 	bl	8000a38 <__aeabi_d2iz>
 8007438:	2200      	movs	r2, #0
 800743a:	4607      	mov	r7, r0
 800743c:	2300      	movs	r3, #0
 800743e:	4620      	mov	r0, r4
 8007440:	4629      	mov	r1, r5
 8007442:	f7f9 fabb 	bl	80009bc <__aeabi_dcmplt>
 8007446:	b140      	cbz	r0, 800745a <_dtoa_r+0x16a>
 8007448:	4638      	mov	r0, r7
 800744a:	f7f8 ffdb 	bl	8000404 <__aeabi_i2d>
 800744e:	4622      	mov	r2, r4
 8007450:	462b      	mov	r3, r5
 8007452:	f7f9 faa9 	bl	80009a8 <__aeabi_dcmpeq>
 8007456:	b900      	cbnz	r0, 800745a <_dtoa_r+0x16a>
 8007458:	3f01      	subs	r7, #1
 800745a:	2f16      	cmp	r7, #22
 800745c:	d854      	bhi.n	8007508 <_dtoa_r+0x218>
 800745e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8007462:	4b60      	ldr	r3, [pc, #384]	@ (80075e4 <_dtoa_r+0x2f4>)
 8007464:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8007468:	e9d3 2300 	ldrd	r2, r3, [r3]
 800746c:	f7f9 faa6 	bl	80009bc <__aeabi_dcmplt>
 8007470:	2800      	cmp	r0, #0
 8007472:	d04b      	beq.n	800750c <_dtoa_r+0x21c>
 8007474:	2300      	movs	r3, #0
 8007476:	3f01      	subs	r7, #1
 8007478:	930f      	str	r3, [sp, #60]	@ 0x3c
 800747a:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 800747c:	1b9b      	subs	r3, r3, r6
 800747e:	1e5a      	subs	r2, r3, #1
 8007480:	bf49      	itett	mi
 8007482:	f1c3 0301 	rsbmi	r3, r3, #1
 8007486:	2300      	movpl	r3, #0
 8007488:	9304      	strmi	r3, [sp, #16]
 800748a:	2300      	movmi	r3, #0
 800748c:	9209      	str	r2, [sp, #36]	@ 0x24
 800748e:	bf54      	ite	pl
 8007490:	9304      	strpl	r3, [sp, #16]
 8007492:	9309      	strmi	r3, [sp, #36]	@ 0x24
 8007494:	2f00      	cmp	r7, #0
 8007496:	db3b      	blt.n	8007510 <_dtoa_r+0x220>
 8007498:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800749a:	970e      	str	r7, [sp, #56]	@ 0x38
 800749c:	443b      	add	r3, r7
 800749e:	9309      	str	r3, [sp, #36]	@ 0x24
 80074a0:	2300      	movs	r3, #0
 80074a2:	930a      	str	r3, [sp, #40]	@ 0x28
 80074a4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80074a6:	2b09      	cmp	r3, #9
 80074a8:	d865      	bhi.n	8007576 <_dtoa_r+0x286>
 80074aa:	2b05      	cmp	r3, #5
 80074ac:	bfc4      	itt	gt
 80074ae:	3b04      	subgt	r3, #4
 80074b0:	9320      	strgt	r3, [sp, #128]	@ 0x80
 80074b2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80074b4:	bfc8      	it	gt
 80074b6:	2400      	movgt	r4, #0
 80074b8:	f1a3 0302 	sub.w	r3, r3, #2
 80074bc:	bfd8      	it	le
 80074be:	2401      	movle	r4, #1
 80074c0:	2b03      	cmp	r3, #3
 80074c2:	d864      	bhi.n	800758e <_dtoa_r+0x29e>
 80074c4:	e8df f003 	tbb	[pc, r3]
 80074c8:	2c385553 	.word	0x2c385553
 80074cc:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 80074d0:	441e      	add	r6, r3
 80074d2:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 80074d6:	2b20      	cmp	r3, #32
 80074d8:	bfc1      	itttt	gt
 80074da:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 80074de:	fa08 f803 	lslgt.w	r8, r8, r3
 80074e2:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 80074e6:	fa24 f303 	lsrgt.w	r3, r4, r3
 80074ea:	bfd6      	itet	le
 80074ec:	f1c3 0320 	rsble	r3, r3, #32
 80074f0:	ea48 0003 	orrgt.w	r0, r8, r3
 80074f4:	fa04 f003 	lslle.w	r0, r4, r3
 80074f8:	f7f8 ff74 	bl	80003e4 <__aeabi_ui2d>
 80074fc:	2201      	movs	r2, #1
 80074fe:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 8007502:	3e01      	subs	r6, #1
 8007504:	9212      	str	r2, [sp, #72]	@ 0x48
 8007506:	e774      	b.n	80073f2 <_dtoa_r+0x102>
 8007508:	2301      	movs	r3, #1
 800750a:	e7b5      	b.n	8007478 <_dtoa_r+0x188>
 800750c:	900f      	str	r0, [sp, #60]	@ 0x3c
 800750e:	e7b4      	b.n	800747a <_dtoa_r+0x18a>
 8007510:	9b04      	ldr	r3, [sp, #16]
 8007512:	1bdb      	subs	r3, r3, r7
 8007514:	9304      	str	r3, [sp, #16]
 8007516:	427b      	negs	r3, r7
 8007518:	930a      	str	r3, [sp, #40]	@ 0x28
 800751a:	2300      	movs	r3, #0
 800751c:	930e      	str	r3, [sp, #56]	@ 0x38
 800751e:	e7c1      	b.n	80074a4 <_dtoa_r+0x1b4>
 8007520:	2301      	movs	r3, #1
 8007522:	930b      	str	r3, [sp, #44]	@ 0x2c
 8007524:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8007526:	eb07 0b03 	add.w	fp, r7, r3
 800752a:	f10b 0301 	add.w	r3, fp, #1
 800752e:	2b01      	cmp	r3, #1
 8007530:	9308      	str	r3, [sp, #32]
 8007532:	bfb8      	it	lt
 8007534:	2301      	movlt	r3, #1
 8007536:	e006      	b.n	8007546 <_dtoa_r+0x256>
 8007538:	2301      	movs	r3, #1
 800753a:	930b      	str	r3, [sp, #44]	@ 0x2c
 800753c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 800753e:	2b00      	cmp	r3, #0
 8007540:	dd28      	ble.n	8007594 <_dtoa_r+0x2a4>
 8007542:	469b      	mov	fp, r3
 8007544:	9308      	str	r3, [sp, #32]
 8007546:	2100      	movs	r1, #0
 8007548:	2204      	movs	r2, #4
 800754a:	f8d9 001c 	ldr.w	r0, [r9, #28]
 800754e:	f102 0514 	add.w	r5, r2, #20
 8007552:	429d      	cmp	r5, r3
 8007554:	d926      	bls.n	80075a4 <_dtoa_r+0x2b4>
 8007556:	6041      	str	r1, [r0, #4]
 8007558:	4648      	mov	r0, r9
 800755a:	f000 fecd 	bl	80082f8 <_Balloc>
 800755e:	4682      	mov	sl, r0
 8007560:	2800      	cmp	r0, #0
 8007562:	d143      	bne.n	80075ec <_dtoa_r+0x2fc>
 8007564:	4602      	mov	r2, r0
 8007566:	f240 11af 	movw	r1, #431	@ 0x1af
 800756a:	4b1f      	ldr	r3, [pc, #124]	@ (80075e8 <_dtoa_r+0x2f8>)
 800756c:	e6d4      	b.n	8007318 <_dtoa_r+0x28>
 800756e:	2300      	movs	r3, #0
 8007570:	e7e3      	b.n	800753a <_dtoa_r+0x24a>
 8007572:	2300      	movs	r3, #0
 8007574:	e7d5      	b.n	8007522 <_dtoa_r+0x232>
 8007576:	2401      	movs	r4, #1
 8007578:	2300      	movs	r3, #0
 800757a:	940b      	str	r4, [sp, #44]	@ 0x2c
 800757c:	9320      	str	r3, [sp, #128]	@ 0x80
 800757e:	f04f 3bff 	mov.w	fp, #4294967295	@ 0xffffffff
 8007582:	2200      	movs	r2, #0
 8007584:	2312      	movs	r3, #18
 8007586:	f8cd b020 	str.w	fp, [sp, #32]
 800758a:	9221      	str	r2, [sp, #132]	@ 0x84
 800758c:	e7db      	b.n	8007546 <_dtoa_r+0x256>
 800758e:	2301      	movs	r3, #1
 8007590:	930b      	str	r3, [sp, #44]	@ 0x2c
 8007592:	e7f4      	b.n	800757e <_dtoa_r+0x28e>
 8007594:	f04f 0b01 	mov.w	fp, #1
 8007598:	465b      	mov	r3, fp
 800759a:	f8cd b020 	str.w	fp, [sp, #32]
 800759e:	f8cd b084 	str.w	fp, [sp, #132]	@ 0x84
 80075a2:	e7d0      	b.n	8007546 <_dtoa_r+0x256>
 80075a4:	3101      	adds	r1, #1
 80075a6:	0052      	lsls	r2, r2, #1
 80075a8:	e7d1      	b.n	800754e <_dtoa_r+0x25e>
 80075aa:	bf00      	nop
 80075ac:	f3af 8000 	nop.w
 80075b0:	636f4361 	.word	0x636f4361
 80075b4:	3fd287a7 	.word	0x3fd287a7
 80075b8:	8b60c8b3 	.word	0x8b60c8b3
 80075bc:	3fc68a28 	.word	0x3fc68a28
 80075c0:	509f79fb 	.word	0x509f79fb
 80075c4:	3fd34413 	.word	0x3fd34413
 80075c8:	0800917b 	.word	0x0800917b
 80075cc:	08009192 	.word	0x08009192
 80075d0:	7ff00000 	.word	0x7ff00000
 80075d4:	08009177 	.word	0x08009177
 80075d8:	0800910f 	.word	0x0800910f
 80075dc:	0800910e 	.word	0x0800910e
 80075e0:	3ff80000 	.word	0x3ff80000
 80075e4:	080093a8 	.word	0x080093a8
 80075e8:	080091ea 	.word	0x080091ea
 80075ec:	f8d9 301c 	ldr.w	r3, [r9, #28]
 80075f0:	6018      	str	r0, [r3, #0]
 80075f2:	9b08      	ldr	r3, [sp, #32]
 80075f4:	2b0e      	cmp	r3, #14
 80075f6:	f200 80a1 	bhi.w	800773c <_dtoa_r+0x44c>
 80075fa:	2c00      	cmp	r4, #0
 80075fc:	f000 809e 	beq.w	800773c <_dtoa_r+0x44c>
 8007600:	2f00      	cmp	r7, #0
 8007602:	dd33      	ble.n	800766c <_dtoa_r+0x37c>
 8007604:	4b9c      	ldr	r3, [pc, #624]	@ (8007878 <_dtoa_r+0x588>)
 8007606:	f007 020f 	and.w	r2, r7, #15
 800760a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800760e:	05f8      	lsls	r0, r7, #23
 8007610:	e9d3 3400 	ldrd	r3, r4, [r3]
 8007614:	e9cd 3410 	strd	r3, r4, [sp, #64]	@ 0x40
 8007618:	ea4f 1427 	mov.w	r4, r7, asr #4
 800761c:	d516      	bpl.n	800764c <_dtoa_r+0x35c>
 800761e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8007622:	4b96      	ldr	r3, [pc, #600]	@ (800787c <_dtoa_r+0x58c>)
 8007624:	2603      	movs	r6, #3
 8007626:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800762a:	f7f9 f87f 	bl	800072c <__aeabi_ddiv>
 800762e:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8007632:	f004 040f 	and.w	r4, r4, #15
 8007636:	4d91      	ldr	r5, [pc, #580]	@ (800787c <_dtoa_r+0x58c>)
 8007638:	b954      	cbnz	r4, 8007650 <_dtoa_r+0x360>
 800763a:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 800763e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8007642:	f7f9 f873 	bl	800072c <__aeabi_ddiv>
 8007646:	e9cd 0106 	strd	r0, r1, [sp, #24]
 800764a:	e028      	b.n	800769e <_dtoa_r+0x3ae>
 800764c:	2602      	movs	r6, #2
 800764e:	e7f2      	b.n	8007636 <_dtoa_r+0x346>
 8007650:	07e1      	lsls	r1, r4, #31
 8007652:	d508      	bpl.n	8007666 <_dtoa_r+0x376>
 8007654:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8007658:	e9d5 2300 	ldrd	r2, r3, [r5]
 800765c:	f7f8 ff3c 	bl	80004d8 <__aeabi_dmul>
 8007660:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8007664:	3601      	adds	r6, #1
 8007666:	1064      	asrs	r4, r4, #1
 8007668:	3508      	adds	r5, #8
 800766a:	e7e5      	b.n	8007638 <_dtoa_r+0x348>
 800766c:	f000 80af 	beq.w	80077ce <_dtoa_r+0x4de>
 8007670:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8007674:	427c      	negs	r4, r7
 8007676:	4b80      	ldr	r3, [pc, #512]	@ (8007878 <_dtoa_r+0x588>)
 8007678:	f004 020f 	and.w	r2, r4, #15
 800767c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8007680:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007684:	f7f8 ff28 	bl	80004d8 <__aeabi_dmul>
 8007688:	2602      	movs	r6, #2
 800768a:	2300      	movs	r3, #0
 800768c:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8007690:	4d7a      	ldr	r5, [pc, #488]	@ (800787c <_dtoa_r+0x58c>)
 8007692:	1124      	asrs	r4, r4, #4
 8007694:	2c00      	cmp	r4, #0
 8007696:	f040 808f 	bne.w	80077b8 <_dtoa_r+0x4c8>
 800769a:	2b00      	cmp	r3, #0
 800769c:	d1d3      	bne.n	8007646 <_dtoa_r+0x356>
 800769e:	e9dd 4506 	ldrd	r4, r5, [sp, #24]
 80076a2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80076a4:	2b00      	cmp	r3, #0
 80076a6:	f000 8094 	beq.w	80077d2 <_dtoa_r+0x4e2>
 80076aa:	2200      	movs	r2, #0
 80076ac:	4620      	mov	r0, r4
 80076ae:	4629      	mov	r1, r5
 80076b0:	4b73      	ldr	r3, [pc, #460]	@ (8007880 <_dtoa_r+0x590>)
 80076b2:	f7f9 f983 	bl	80009bc <__aeabi_dcmplt>
 80076b6:	2800      	cmp	r0, #0
 80076b8:	f000 808b 	beq.w	80077d2 <_dtoa_r+0x4e2>
 80076bc:	9b08      	ldr	r3, [sp, #32]
 80076be:	2b00      	cmp	r3, #0
 80076c0:	f000 8087 	beq.w	80077d2 <_dtoa_r+0x4e2>
 80076c4:	f1bb 0f00 	cmp.w	fp, #0
 80076c8:	dd34      	ble.n	8007734 <_dtoa_r+0x444>
 80076ca:	4620      	mov	r0, r4
 80076cc:	2200      	movs	r2, #0
 80076ce:	4629      	mov	r1, r5
 80076d0:	4b6c      	ldr	r3, [pc, #432]	@ (8007884 <_dtoa_r+0x594>)
 80076d2:	f7f8 ff01 	bl	80004d8 <__aeabi_dmul>
 80076d6:	465c      	mov	r4, fp
 80076d8:	e9cd 0106 	strd	r0, r1, [sp, #24]
 80076dc:	f107 38ff 	add.w	r8, r7, #4294967295	@ 0xffffffff
 80076e0:	3601      	adds	r6, #1
 80076e2:	4630      	mov	r0, r6
 80076e4:	f7f8 fe8e 	bl	8000404 <__aeabi_i2d>
 80076e8:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80076ec:	f7f8 fef4 	bl	80004d8 <__aeabi_dmul>
 80076f0:	2200      	movs	r2, #0
 80076f2:	4b65      	ldr	r3, [pc, #404]	@ (8007888 <_dtoa_r+0x598>)
 80076f4:	f7f8 fd3a 	bl	800016c <__adddf3>
 80076f8:	4605      	mov	r5, r0
 80076fa:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 80076fe:	2c00      	cmp	r4, #0
 8007700:	d16a      	bne.n	80077d8 <_dtoa_r+0x4e8>
 8007702:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8007706:	2200      	movs	r2, #0
 8007708:	4b60      	ldr	r3, [pc, #384]	@ (800788c <_dtoa_r+0x59c>)
 800770a:	f7f8 fd2d 	bl	8000168 <__aeabi_dsub>
 800770e:	4602      	mov	r2, r0
 8007710:	460b      	mov	r3, r1
 8007712:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8007716:	462a      	mov	r2, r5
 8007718:	4633      	mov	r3, r6
 800771a:	f7f9 f96d 	bl	80009f8 <__aeabi_dcmpgt>
 800771e:	2800      	cmp	r0, #0
 8007720:	f040 8298 	bne.w	8007c54 <_dtoa_r+0x964>
 8007724:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8007728:	462a      	mov	r2, r5
 800772a:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 800772e:	f7f9 f945 	bl	80009bc <__aeabi_dcmplt>
 8007732:	bb38      	cbnz	r0, 8007784 <_dtoa_r+0x494>
 8007734:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 8007738:	e9cd 3406 	strd	r3, r4, [sp, #24]
 800773c:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 800773e:	2b00      	cmp	r3, #0
 8007740:	f2c0 8157 	blt.w	80079f2 <_dtoa_r+0x702>
 8007744:	2f0e      	cmp	r7, #14
 8007746:	f300 8154 	bgt.w	80079f2 <_dtoa_r+0x702>
 800774a:	4b4b      	ldr	r3, [pc, #300]	@ (8007878 <_dtoa_r+0x588>)
 800774c:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8007750:	e9d3 3400 	ldrd	r3, r4, [r3]
 8007754:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8007758:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 800775a:	2b00      	cmp	r3, #0
 800775c:	f280 80e5 	bge.w	800792a <_dtoa_r+0x63a>
 8007760:	9b08      	ldr	r3, [sp, #32]
 8007762:	2b00      	cmp	r3, #0
 8007764:	f300 80e1 	bgt.w	800792a <_dtoa_r+0x63a>
 8007768:	d10c      	bne.n	8007784 <_dtoa_r+0x494>
 800776a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800776e:	2200      	movs	r2, #0
 8007770:	4b46      	ldr	r3, [pc, #280]	@ (800788c <_dtoa_r+0x59c>)
 8007772:	f7f8 feb1 	bl	80004d8 <__aeabi_dmul>
 8007776:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800777a:	f7f9 f933 	bl	80009e4 <__aeabi_dcmpge>
 800777e:	2800      	cmp	r0, #0
 8007780:	f000 8266 	beq.w	8007c50 <_dtoa_r+0x960>
 8007784:	2400      	movs	r4, #0
 8007786:	4625      	mov	r5, r4
 8007788:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 800778a:	4656      	mov	r6, sl
 800778c:	ea6f 0803 	mvn.w	r8, r3
 8007790:	2700      	movs	r7, #0
 8007792:	4621      	mov	r1, r4
 8007794:	4648      	mov	r0, r9
 8007796:	f000 fdef 	bl	8008378 <_Bfree>
 800779a:	2d00      	cmp	r5, #0
 800779c:	f000 80bd 	beq.w	800791a <_dtoa_r+0x62a>
 80077a0:	b12f      	cbz	r7, 80077ae <_dtoa_r+0x4be>
 80077a2:	42af      	cmp	r7, r5
 80077a4:	d003      	beq.n	80077ae <_dtoa_r+0x4be>
 80077a6:	4639      	mov	r1, r7
 80077a8:	4648      	mov	r0, r9
 80077aa:	f000 fde5 	bl	8008378 <_Bfree>
 80077ae:	4629      	mov	r1, r5
 80077b0:	4648      	mov	r0, r9
 80077b2:	f000 fde1 	bl	8008378 <_Bfree>
 80077b6:	e0b0      	b.n	800791a <_dtoa_r+0x62a>
 80077b8:	07e2      	lsls	r2, r4, #31
 80077ba:	d505      	bpl.n	80077c8 <_dtoa_r+0x4d8>
 80077bc:	e9d5 2300 	ldrd	r2, r3, [r5]
 80077c0:	f7f8 fe8a 	bl	80004d8 <__aeabi_dmul>
 80077c4:	2301      	movs	r3, #1
 80077c6:	3601      	adds	r6, #1
 80077c8:	1064      	asrs	r4, r4, #1
 80077ca:	3508      	adds	r5, #8
 80077cc:	e762      	b.n	8007694 <_dtoa_r+0x3a4>
 80077ce:	2602      	movs	r6, #2
 80077d0:	e765      	b.n	800769e <_dtoa_r+0x3ae>
 80077d2:	46b8      	mov	r8, r7
 80077d4:	9c08      	ldr	r4, [sp, #32]
 80077d6:	e784      	b.n	80076e2 <_dtoa_r+0x3f2>
 80077d8:	4b27      	ldr	r3, [pc, #156]	@ (8007878 <_dtoa_r+0x588>)
 80077da:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80077dc:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 80077e0:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 80077e4:	4454      	add	r4, sl
 80077e6:	2900      	cmp	r1, #0
 80077e8:	d054      	beq.n	8007894 <_dtoa_r+0x5a4>
 80077ea:	2000      	movs	r0, #0
 80077ec:	4928      	ldr	r1, [pc, #160]	@ (8007890 <_dtoa_r+0x5a0>)
 80077ee:	f7f8 ff9d 	bl	800072c <__aeabi_ddiv>
 80077f2:	4633      	mov	r3, r6
 80077f4:	462a      	mov	r2, r5
 80077f6:	f7f8 fcb7 	bl	8000168 <__aeabi_dsub>
 80077fa:	4656      	mov	r6, sl
 80077fc:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8007800:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8007804:	f7f9 f918 	bl	8000a38 <__aeabi_d2iz>
 8007808:	4605      	mov	r5, r0
 800780a:	f7f8 fdfb 	bl	8000404 <__aeabi_i2d>
 800780e:	4602      	mov	r2, r0
 8007810:	460b      	mov	r3, r1
 8007812:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8007816:	f7f8 fca7 	bl	8000168 <__aeabi_dsub>
 800781a:	4602      	mov	r2, r0
 800781c:	460b      	mov	r3, r1
 800781e:	3530      	adds	r5, #48	@ 0x30
 8007820:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8007824:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8007828:	f806 5b01 	strb.w	r5, [r6], #1
 800782c:	f7f9 f8c6 	bl	80009bc <__aeabi_dcmplt>
 8007830:	2800      	cmp	r0, #0
 8007832:	d172      	bne.n	800791a <_dtoa_r+0x62a>
 8007834:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8007838:	2000      	movs	r0, #0
 800783a:	4911      	ldr	r1, [pc, #68]	@ (8007880 <_dtoa_r+0x590>)
 800783c:	f7f8 fc94 	bl	8000168 <__aeabi_dsub>
 8007840:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8007844:	f7f9 f8ba 	bl	80009bc <__aeabi_dcmplt>
 8007848:	2800      	cmp	r0, #0
 800784a:	f040 80b4 	bne.w	80079b6 <_dtoa_r+0x6c6>
 800784e:	42a6      	cmp	r6, r4
 8007850:	f43f af70 	beq.w	8007734 <_dtoa_r+0x444>
 8007854:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8007858:	2200      	movs	r2, #0
 800785a:	4b0a      	ldr	r3, [pc, #40]	@ (8007884 <_dtoa_r+0x594>)
 800785c:	f7f8 fe3c 	bl	80004d8 <__aeabi_dmul>
 8007860:	2200      	movs	r2, #0
 8007862:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8007866:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800786a:	4b06      	ldr	r3, [pc, #24]	@ (8007884 <_dtoa_r+0x594>)
 800786c:	f7f8 fe34 	bl	80004d8 <__aeabi_dmul>
 8007870:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8007874:	e7c4      	b.n	8007800 <_dtoa_r+0x510>
 8007876:	bf00      	nop
 8007878:	080093a8 	.word	0x080093a8
 800787c:	08009380 	.word	0x08009380
 8007880:	3ff00000 	.word	0x3ff00000
 8007884:	40240000 	.word	0x40240000
 8007888:	401c0000 	.word	0x401c0000
 800788c:	40140000 	.word	0x40140000
 8007890:	3fe00000 	.word	0x3fe00000
 8007894:	4631      	mov	r1, r6
 8007896:	4628      	mov	r0, r5
 8007898:	f7f8 fe1e 	bl	80004d8 <__aeabi_dmul>
 800789c:	4656      	mov	r6, sl
 800789e:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 80078a2:	9413      	str	r4, [sp, #76]	@ 0x4c
 80078a4:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80078a8:	f7f9 f8c6 	bl	8000a38 <__aeabi_d2iz>
 80078ac:	4605      	mov	r5, r0
 80078ae:	f7f8 fda9 	bl	8000404 <__aeabi_i2d>
 80078b2:	4602      	mov	r2, r0
 80078b4:	460b      	mov	r3, r1
 80078b6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80078ba:	f7f8 fc55 	bl	8000168 <__aeabi_dsub>
 80078be:	4602      	mov	r2, r0
 80078c0:	460b      	mov	r3, r1
 80078c2:	3530      	adds	r5, #48	@ 0x30
 80078c4:	f806 5b01 	strb.w	r5, [r6], #1
 80078c8:	42a6      	cmp	r6, r4
 80078ca:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80078ce:	f04f 0200 	mov.w	r2, #0
 80078d2:	d124      	bne.n	800791e <_dtoa_r+0x62e>
 80078d4:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 80078d8:	4bae      	ldr	r3, [pc, #696]	@ (8007b94 <_dtoa_r+0x8a4>)
 80078da:	f7f8 fc47 	bl	800016c <__adddf3>
 80078de:	4602      	mov	r2, r0
 80078e0:	460b      	mov	r3, r1
 80078e2:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80078e6:	f7f9 f887 	bl	80009f8 <__aeabi_dcmpgt>
 80078ea:	2800      	cmp	r0, #0
 80078ec:	d163      	bne.n	80079b6 <_dtoa_r+0x6c6>
 80078ee:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 80078f2:	2000      	movs	r0, #0
 80078f4:	49a7      	ldr	r1, [pc, #668]	@ (8007b94 <_dtoa_r+0x8a4>)
 80078f6:	f7f8 fc37 	bl	8000168 <__aeabi_dsub>
 80078fa:	4602      	mov	r2, r0
 80078fc:	460b      	mov	r3, r1
 80078fe:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8007902:	f7f9 f85b 	bl	80009bc <__aeabi_dcmplt>
 8007906:	2800      	cmp	r0, #0
 8007908:	f43f af14 	beq.w	8007734 <_dtoa_r+0x444>
 800790c:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 800790e:	1e73      	subs	r3, r6, #1
 8007910:	9313      	str	r3, [sp, #76]	@ 0x4c
 8007912:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8007916:	2b30      	cmp	r3, #48	@ 0x30
 8007918:	d0f8      	beq.n	800790c <_dtoa_r+0x61c>
 800791a:	4647      	mov	r7, r8
 800791c:	e03b      	b.n	8007996 <_dtoa_r+0x6a6>
 800791e:	4b9e      	ldr	r3, [pc, #632]	@ (8007b98 <_dtoa_r+0x8a8>)
 8007920:	f7f8 fdda 	bl	80004d8 <__aeabi_dmul>
 8007924:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8007928:	e7bc      	b.n	80078a4 <_dtoa_r+0x5b4>
 800792a:	4656      	mov	r6, sl
 800792c:	e9dd 4506 	ldrd	r4, r5, [sp, #24]
 8007930:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8007934:	4620      	mov	r0, r4
 8007936:	4629      	mov	r1, r5
 8007938:	f7f8 fef8 	bl	800072c <__aeabi_ddiv>
 800793c:	f7f9 f87c 	bl	8000a38 <__aeabi_d2iz>
 8007940:	4680      	mov	r8, r0
 8007942:	f7f8 fd5f 	bl	8000404 <__aeabi_i2d>
 8007946:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800794a:	f7f8 fdc5 	bl	80004d8 <__aeabi_dmul>
 800794e:	4602      	mov	r2, r0
 8007950:	460b      	mov	r3, r1
 8007952:	4620      	mov	r0, r4
 8007954:	4629      	mov	r1, r5
 8007956:	f7f8 fc07 	bl	8000168 <__aeabi_dsub>
 800795a:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 800795e:	9d08      	ldr	r5, [sp, #32]
 8007960:	f806 4b01 	strb.w	r4, [r6], #1
 8007964:	eba6 040a 	sub.w	r4, r6, sl
 8007968:	42a5      	cmp	r5, r4
 800796a:	4602      	mov	r2, r0
 800796c:	460b      	mov	r3, r1
 800796e:	d133      	bne.n	80079d8 <_dtoa_r+0x6e8>
 8007970:	f7f8 fbfc 	bl	800016c <__adddf3>
 8007974:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8007978:	4604      	mov	r4, r0
 800797a:	460d      	mov	r5, r1
 800797c:	f7f9 f83c 	bl	80009f8 <__aeabi_dcmpgt>
 8007980:	b9c0      	cbnz	r0, 80079b4 <_dtoa_r+0x6c4>
 8007982:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8007986:	4620      	mov	r0, r4
 8007988:	4629      	mov	r1, r5
 800798a:	f7f9 f80d 	bl	80009a8 <__aeabi_dcmpeq>
 800798e:	b110      	cbz	r0, 8007996 <_dtoa_r+0x6a6>
 8007990:	f018 0f01 	tst.w	r8, #1
 8007994:	d10e      	bne.n	80079b4 <_dtoa_r+0x6c4>
 8007996:	4648      	mov	r0, r9
 8007998:	9903      	ldr	r1, [sp, #12]
 800799a:	f000 fced 	bl	8008378 <_Bfree>
 800799e:	2300      	movs	r3, #0
 80079a0:	7033      	strb	r3, [r6, #0]
 80079a2:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80079a4:	3701      	adds	r7, #1
 80079a6:	601f      	str	r7, [r3, #0]
 80079a8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80079aa:	2b00      	cmp	r3, #0
 80079ac:	f000 824b 	beq.w	8007e46 <_dtoa_r+0xb56>
 80079b0:	601e      	str	r6, [r3, #0]
 80079b2:	e248      	b.n	8007e46 <_dtoa_r+0xb56>
 80079b4:	46b8      	mov	r8, r7
 80079b6:	4633      	mov	r3, r6
 80079b8:	461e      	mov	r6, r3
 80079ba:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80079be:	2a39      	cmp	r2, #57	@ 0x39
 80079c0:	d106      	bne.n	80079d0 <_dtoa_r+0x6e0>
 80079c2:	459a      	cmp	sl, r3
 80079c4:	d1f8      	bne.n	80079b8 <_dtoa_r+0x6c8>
 80079c6:	2230      	movs	r2, #48	@ 0x30
 80079c8:	f108 0801 	add.w	r8, r8, #1
 80079cc:	f88a 2000 	strb.w	r2, [sl]
 80079d0:	781a      	ldrb	r2, [r3, #0]
 80079d2:	3201      	adds	r2, #1
 80079d4:	701a      	strb	r2, [r3, #0]
 80079d6:	e7a0      	b.n	800791a <_dtoa_r+0x62a>
 80079d8:	2200      	movs	r2, #0
 80079da:	4b6f      	ldr	r3, [pc, #444]	@ (8007b98 <_dtoa_r+0x8a8>)
 80079dc:	f7f8 fd7c 	bl	80004d8 <__aeabi_dmul>
 80079e0:	2200      	movs	r2, #0
 80079e2:	2300      	movs	r3, #0
 80079e4:	4604      	mov	r4, r0
 80079e6:	460d      	mov	r5, r1
 80079e8:	f7f8 ffde 	bl	80009a8 <__aeabi_dcmpeq>
 80079ec:	2800      	cmp	r0, #0
 80079ee:	d09f      	beq.n	8007930 <_dtoa_r+0x640>
 80079f0:	e7d1      	b.n	8007996 <_dtoa_r+0x6a6>
 80079f2:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80079f4:	2a00      	cmp	r2, #0
 80079f6:	f000 80ea 	beq.w	8007bce <_dtoa_r+0x8de>
 80079fa:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80079fc:	2a01      	cmp	r2, #1
 80079fe:	f300 80cd 	bgt.w	8007b9c <_dtoa_r+0x8ac>
 8007a02:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8007a04:	2a00      	cmp	r2, #0
 8007a06:	f000 80c1 	beq.w	8007b8c <_dtoa_r+0x89c>
 8007a0a:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8007a0e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8007a10:	9e04      	ldr	r6, [sp, #16]
 8007a12:	9a04      	ldr	r2, [sp, #16]
 8007a14:	2101      	movs	r1, #1
 8007a16:	441a      	add	r2, r3
 8007a18:	9204      	str	r2, [sp, #16]
 8007a1a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8007a1c:	4648      	mov	r0, r9
 8007a1e:	441a      	add	r2, r3
 8007a20:	9209      	str	r2, [sp, #36]	@ 0x24
 8007a22:	f000 fd5d 	bl	80084e0 <__i2b>
 8007a26:	4605      	mov	r5, r0
 8007a28:	b166      	cbz	r6, 8007a44 <_dtoa_r+0x754>
 8007a2a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007a2c:	2b00      	cmp	r3, #0
 8007a2e:	dd09      	ble.n	8007a44 <_dtoa_r+0x754>
 8007a30:	42b3      	cmp	r3, r6
 8007a32:	bfa8      	it	ge
 8007a34:	4633      	movge	r3, r6
 8007a36:	9a04      	ldr	r2, [sp, #16]
 8007a38:	1af6      	subs	r6, r6, r3
 8007a3a:	1ad2      	subs	r2, r2, r3
 8007a3c:	9204      	str	r2, [sp, #16]
 8007a3e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8007a40:	1ad3      	subs	r3, r2, r3
 8007a42:	9309      	str	r3, [sp, #36]	@ 0x24
 8007a44:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8007a46:	b30b      	cbz	r3, 8007a8c <_dtoa_r+0x79c>
 8007a48:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8007a4a:	2b00      	cmp	r3, #0
 8007a4c:	f000 80c6 	beq.w	8007bdc <_dtoa_r+0x8ec>
 8007a50:	2c00      	cmp	r4, #0
 8007a52:	f000 80c0 	beq.w	8007bd6 <_dtoa_r+0x8e6>
 8007a56:	4629      	mov	r1, r5
 8007a58:	4622      	mov	r2, r4
 8007a5a:	4648      	mov	r0, r9
 8007a5c:	f000 fdf8 	bl	8008650 <__pow5mult>
 8007a60:	9a03      	ldr	r2, [sp, #12]
 8007a62:	4601      	mov	r1, r0
 8007a64:	4605      	mov	r5, r0
 8007a66:	4648      	mov	r0, r9
 8007a68:	f000 fd50 	bl	800850c <__multiply>
 8007a6c:	9903      	ldr	r1, [sp, #12]
 8007a6e:	4680      	mov	r8, r0
 8007a70:	4648      	mov	r0, r9
 8007a72:	f000 fc81 	bl	8008378 <_Bfree>
 8007a76:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8007a78:	1b1b      	subs	r3, r3, r4
 8007a7a:	930a      	str	r3, [sp, #40]	@ 0x28
 8007a7c:	f000 80b1 	beq.w	8007be2 <_dtoa_r+0x8f2>
 8007a80:	4641      	mov	r1, r8
 8007a82:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8007a84:	4648      	mov	r0, r9
 8007a86:	f000 fde3 	bl	8008650 <__pow5mult>
 8007a8a:	9003      	str	r0, [sp, #12]
 8007a8c:	2101      	movs	r1, #1
 8007a8e:	4648      	mov	r0, r9
 8007a90:	f000 fd26 	bl	80084e0 <__i2b>
 8007a94:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8007a96:	4604      	mov	r4, r0
 8007a98:	2b00      	cmp	r3, #0
 8007a9a:	f000 81d8 	beq.w	8007e4e <_dtoa_r+0xb5e>
 8007a9e:	461a      	mov	r2, r3
 8007aa0:	4601      	mov	r1, r0
 8007aa2:	4648      	mov	r0, r9
 8007aa4:	f000 fdd4 	bl	8008650 <__pow5mult>
 8007aa8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8007aaa:	4604      	mov	r4, r0
 8007aac:	2b01      	cmp	r3, #1
 8007aae:	f300 809f 	bgt.w	8007bf0 <_dtoa_r+0x900>
 8007ab2:	9b06      	ldr	r3, [sp, #24]
 8007ab4:	2b00      	cmp	r3, #0
 8007ab6:	f040 8097 	bne.w	8007be8 <_dtoa_r+0x8f8>
 8007aba:	9b07      	ldr	r3, [sp, #28]
 8007abc:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8007ac0:	2b00      	cmp	r3, #0
 8007ac2:	f040 8093 	bne.w	8007bec <_dtoa_r+0x8fc>
 8007ac6:	9b07      	ldr	r3, [sp, #28]
 8007ac8:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8007acc:	0d1b      	lsrs	r3, r3, #20
 8007ace:	051b      	lsls	r3, r3, #20
 8007ad0:	b133      	cbz	r3, 8007ae0 <_dtoa_r+0x7f0>
 8007ad2:	9b04      	ldr	r3, [sp, #16]
 8007ad4:	3301      	adds	r3, #1
 8007ad6:	9304      	str	r3, [sp, #16]
 8007ad8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007ada:	3301      	adds	r3, #1
 8007adc:	9309      	str	r3, [sp, #36]	@ 0x24
 8007ade:	2301      	movs	r3, #1
 8007ae0:	930a      	str	r3, [sp, #40]	@ 0x28
 8007ae2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8007ae4:	2b00      	cmp	r3, #0
 8007ae6:	f000 81b8 	beq.w	8007e5a <_dtoa_r+0xb6a>
 8007aea:	6923      	ldr	r3, [r4, #16]
 8007aec:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8007af0:	6918      	ldr	r0, [r3, #16]
 8007af2:	f000 fca9 	bl	8008448 <__hi0bits>
 8007af6:	f1c0 0020 	rsb	r0, r0, #32
 8007afa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007afc:	4418      	add	r0, r3
 8007afe:	f010 001f 	ands.w	r0, r0, #31
 8007b02:	f000 8082 	beq.w	8007c0a <_dtoa_r+0x91a>
 8007b06:	f1c0 0320 	rsb	r3, r0, #32
 8007b0a:	2b04      	cmp	r3, #4
 8007b0c:	dd73      	ble.n	8007bf6 <_dtoa_r+0x906>
 8007b0e:	9b04      	ldr	r3, [sp, #16]
 8007b10:	f1c0 001c 	rsb	r0, r0, #28
 8007b14:	4403      	add	r3, r0
 8007b16:	9304      	str	r3, [sp, #16]
 8007b18:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007b1a:	4406      	add	r6, r0
 8007b1c:	4403      	add	r3, r0
 8007b1e:	9309      	str	r3, [sp, #36]	@ 0x24
 8007b20:	9b04      	ldr	r3, [sp, #16]
 8007b22:	2b00      	cmp	r3, #0
 8007b24:	dd05      	ble.n	8007b32 <_dtoa_r+0x842>
 8007b26:	461a      	mov	r2, r3
 8007b28:	4648      	mov	r0, r9
 8007b2a:	9903      	ldr	r1, [sp, #12]
 8007b2c:	f000 fdea 	bl	8008704 <__lshift>
 8007b30:	9003      	str	r0, [sp, #12]
 8007b32:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007b34:	2b00      	cmp	r3, #0
 8007b36:	dd05      	ble.n	8007b44 <_dtoa_r+0x854>
 8007b38:	4621      	mov	r1, r4
 8007b3a:	461a      	mov	r2, r3
 8007b3c:	4648      	mov	r0, r9
 8007b3e:	f000 fde1 	bl	8008704 <__lshift>
 8007b42:	4604      	mov	r4, r0
 8007b44:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8007b46:	2b00      	cmp	r3, #0
 8007b48:	d061      	beq.n	8007c0e <_dtoa_r+0x91e>
 8007b4a:	4621      	mov	r1, r4
 8007b4c:	9803      	ldr	r0, [sp, #12]
 8007b4e:	f000 fe45 	bl	80087dc <__mcmp>
 8007b52:	2800      	cmp	r0, #0
 8007b54:	da5b      	bge.n	8007c0e <_dtoa_r+0x91e>
 8007b56:	2300      	movs	r3, #0
 8007b58:	220a      	movs	r2, #10
 8007b5a:	4648      	mov	r0, r9
 8007b5c:	9903      	ldr	r1, [sp, #12]
 8007b5e:	f000 fc2d 	bl	80083bc <__multadd>
 8007b62:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8007b64:	f107 38ff 	add.w	r8, r7, #4294967295	@ 0xffffffff
 8007b68:	9003      	str	r0, [sp, #12]
 8007b6a:	2b00      	cmp	r3, #0
 8007b6c:	f000 8177 	beq.w	8007e5e <_dtoa_r+0xb6e>
 8007b70:	4629      	mov	r1, r5
 8007b72:	2300      	movs	r3, #0
 8007b74:	220a      	movs	r2, #10
 8007b76:	4648      	mov	r0, r9
 8007b78:	f000 fc20 	bl	80083bc <__multadd>
 8007b7c:	f1bb 0f00 	cmp.w	fp, #0
 8007b80:	4605      	mov	r5, r0
 8007b82:	dc6f      	bgt.n	8007c64 <_dtoa_r+0x974>
 8007b84:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8007b86:	2b02      	cmp	r3, #2
 8007b88:	dc49      	bgt.n	8007c1e <_dtoa_r+0x92e>
 8007b8a:	e06b      	b.n	8007c64 <_dtoa_r+0x974>
 8007b8c:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8007b8e:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8007b92:	e73c      	b.n	8007a0e <_dtoa_r+0x71e>
 8007b94:	3fe00000 	.word	0x3fe00000
 8007b98:	40240000 	.word	0x40240000
 8007b9c:	9b08      	ldr	r3, [sp, #32]
 8007b9e:	1e5c      	subs	r4, r3, #1
 8007ba0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8007ba2:	42a3      	cmp	r3, r4
 8007ba4:	db09      	blt.n	8007bba <_dtoa_r+0x8ca>
 8007ba6:	1b1c      	subs	r4, r3, r4
 8007ba8:	9b08      	ldr	r3, [sp, #32]
 8007baa:	2b00      	cmp	r3, #0
 8007bac:	f6bf af30 	bge.w	8007a10 <_dtoa_r+0x720>
 8007bb0:	9b04      	ldr	r3, [sp, #16]
 8007bb2:	9a08      	ldr	r2, [sp, #32]
 8007bb4:	1a9e      	subs	r6, r3, r2
 8007bb6:	2300      	movs	r3, #0
 8007bb8:	e72b      	b.n	8007a12 <_dtoa_r+0x722>
 8007bba:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8007bbc:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8007bbe:	1ae3      	subs	r3, r4, r3
 8007bc0:	441a      	add	r2, r3
 8007bc2:	940a      	str	r4, [sp, #40]	@ 0x28
 8007bc4:	9e04      	ldr	r6, [sp, #16]
 8007bc6:	2400      	movs	r4, #0
 8007bc8:	9b08      	ldr	r3, [sp, #32]
 8007bca:	920e      	str	r2, [sp, #56]	@ 0x38
 8007bcc:	e721      	b.n	8007a12 <_dtoa_r+0x722>
 8007bce:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8007bd0:	9e04      	ldr	r6, [sp, #16]
 8007bd2:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8007bd4:	e728      	b.n	8007a28 <_dtoa_r+0x738>
 8007bd6:	f8dd 800c 	ldr.w	r8, [sp, #12]
 8007bda:	e751      	b.n	8007a80 <_dtoa_r+0x790>
 8007bdc:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8007bde:	9903      	ldr	r1, [sp, #12]
 8007be0:	e750      	b.n	8007a84 <_dtoa_r+0x794>
 8007be2:	f8cd 800c 	str.w	r8, [sp, #12]
 8007be6:	e751      	b.n	8007a8c <_dtoa_r+0x79c>
 8007be8:	2300      	movs	r3, #0
 8007bea:	e779      	b.n	8007ae0 <_dtoa_r+0x7f0>
 8007bec:	9b06      	ldr	r3, [sp, #24]
 8007bee:	e777      	b.n	8007ae0 <_dtoa_r+0x7f0>
 8007bf0:	2300      	movs	r3, #0
 8007bf2:	930a      	str	r3, [sp, #40]	@ 0x28
 8007bf4:	e779      	b.n	8007aea <_dtoa_r+0x7fa>
 8007bf6:	d093      	beq.n	8007b20 <_dtoa_r+0x830>
 8007bf8:	9a04      	ldr	r2, [sp, #16]
 8007bfa:	331c      	adds	r3, #28
 8007bfc:	441a      	add	r2, r3
 8007bfe:	9204      	str	r2, [sp, #16]
 8007c00:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8007c02:	441e      	add	r6, r3
 8007c04:	441a      	add	r2, r3
 8007c06:	9209      	str	r2, [sp, #36]	@ 0x24
 8007c08:	e78a      	b.n	8007b20 <_dtoa_r+0x830>
 8007c0a:	4603      	mov	r3, r0
 8007c0c:	e7f4      	b.n	8007bf8 <_dtoa_r+0x908>
 8007c0e:	9b08      	ldr	r3, [sp, #32]
 8007c10:	46b8      	mov	r8, r7
 8007c12:	2b00      	cmp	r3, #0
 8007c14:	dc20      	bgt.n	8007c58 <_dtoa_r+0x968>
 8007c16:	469b      	mov	fp, r3
 8007c18:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8007c1a:	2b02      	cmp	r3, #2
 8007c1c:	dd1e      	ble.n	8007c5c <_dtoa_r+0x96c>
 8007c1e:	f1bb 0f00 	cmp.w	fp, #0
 8007c22:	f47f adb1 	bne.w	8007788 <_dtoa_r+0x498>
 8007c26:	4621      	mov	r1, r4
 8007c28:	465b      	mov	r3, fp
 8007c2a:	2205      	movs	r2, #5
 8007c2c:	4648      	mov	r0, r9
 8007c2e:	f000 fbc5 	bl	80083bc <__multadd>
 8007c32:	4601      	mov	r1, r0
 8007c34:	4604      	mov	r4, r0
 8007c36:	9803      	ldr	r0, [sp, #12]
 8007c38:	f000 fdd0 	bl	80087dc <__mcmp>
 8007c3c:	2800      	cmp	r0, #0
 8007c3e:	f77f ada3 	ble.w	8007788 <_dtoa_r+0x498>
 8007c42:	4656      	mov	r6, sl
 8007c44:	2331      	movs	r3, #49	@ 0x31
 8007c46:	f108 0801 	add.w	r8, r8, #1
 8007c4a:	f806 3b01 	strb.w	r3, [r6], #1
 8007c4e:	e59f      	b.n	8007790 <_dtoa_r+0x4a0>
 8007c50:	46b8      	mov	r8, r7
 8007c52:	9c08      	ldr	r4, [sp, #32]
 8007c54:	4625      	mov	r5, r4
 8007c56:	e7f4      	b.n	8007c42 <_dtoa_r+0x952>
 8007c58:	f8dd b020 	ldr.w	fp, [sp, #32]
 8007c5c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8007c5e:	2b00      	cmp	r3, #0
 8007c60:	f000 8101 	beq.w	8007e66 <_dtoa_r+0xb76>
 8007c64:	2e00      	cmp	r6, #0
 8007c66:	dd05      	ble.n	8007c74 <_dtoa_r+0x984>
 8007c68:	4629      	mov	r1, r5
 8007c6a:	4632      	mov	r2, r6
 8007c6c:	4648      	mov	r0, r9
 8007c6e:	f000 fd49 	bl	8008704 <__lshift>
 8007c72:	4605      	mov	r5, r0
 8007c74:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8007c76:	2b00      	cmp	r3, #0
 8007c78:	d05c      	beq.n	8007d34 <_dtoa_r+0xa44>
 8007c7a:	4648      	mov	r0, r9
 8007c7c:	6869      	ldr	r1, [r5, #4]
 8007c7e:	f000 fb3b 	bl	80082f8 <_Balloc>
 8007c82:	4606      	mov	r6, r0
 8007c84:	b928      	cbnz	r0, 8007c92 <_dtoa_r+0x9a2>
 8007c86:	4602      	mov	r2, r0
 8007c88:	f240 21ef 	movw	r1, #751	@ 0x2ef
 8007c8c:	4b80      	ldr	r3, [pc, #512]	@ (8007e90 <_dtoa_r+0xba0>)
 8007c8e:	f7ff bb43 	b.w	8007318 <_dtoa_r+0x28>
 8007c92:	692a      	ldr	r2, [r5, #16]
 8007c94:	f105 010c 	add.w	r1, r5, #12
 8007c98:	3202      	adds	r2, #2
 8007c9a:	0092      	lsls	r2, r2, #2
 8007c9c:	300c      	adds	r0, #12
 8007c9e:	f7ff fa73 	bl	8007188 <memcpy>
 8007ca2:	2201      	movs	r2, #1
 8007ca4:	4631      	mov	r1, r6
 8007ca6:	4648      	mov	r0, r9
 8007ca8:	f000 fd2c 	bl	8008704 <__lshift>
 8007cac:	462f      	mov	r7, r5
 8007cae:	4605      	mov	r5, r0
 8007cb0:	f10a 0301 	add.w	r3, sl, #1
 8007cb4:	9304      	str	r3, [sp, #16]
 8007cb6:	eb0a 030b 	add.w	r3, sl, fp
 8007cba:	930a      	str	r3, [sp, #40]	@ 0x28
 8007cbc:	9b06      	ldr	r3, [sp, #24]
 8007cbe:	f003 0301 	and.w	r3, r3, #1
 8007cc2:	9309      	str	r3, [sp, #36]	@ 0x24
 8007cc4:	9b04      	ldr	r3, [sp, #16]
 8007cc6:	4621      	mov	r1, r4
 8007cc8:	9803      	ldr	r0, [sp, #12]
 8007cca:	f103 3bff 	add.w	fp, r3, #4294967295	@ 0xffffffff
 8007cce:	f7ff fa87 	bl	80071e0 <quorem>
 8007cd2:	4603      	mov	r3, r0
 8007cd4:	4639      	mov	r1, r7
 8007cd6:	3330      	adds	r3, #48	@ 0x30
 8007cd8:	9006      	str	r0, [sp, #24]
 8007cda:	9803      	ldr	r0, [sp, #12]
 8007cdc:	930b      	str	r3, [sp, #44]	@ 0x2c
 8007cde:	f000 fd7d 	bl	80087dc <__mcmp>
 8007ce2:	462a      	mov	r2, r5
 8007ce4:	9008      	str	r0, [sp, #32]
 8007ce6:	4621      	mov	r1, r4
 8007ce8:	4648      	mov	r0, r9
 8007cea:	f000 fd93 	bl	8008814 <__mdiff>
 8007cee:	68c2      	ldr	r2, [r0, #12]
 8007cf0:	4606      	mov	r6, r0
 8007cf2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8007cf4:	bb02      	cbnz	r2, 8007d38 <_dtoa_r+0xa48>
 8007cf6:	4601      	mov	r1, r0
 8007cf8:	9803      	ldr	r0, [sp, #12]
 8007cfa:	f000 fd6f 	bl	80087dc <__mcmp>
 8007cfe:	4602      	mov	r2, r0
 8007d00:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8007d02:	4631      	mov	r1, r6
 8007d04:	4648      	mov	r0, r9
 8007d06:	e9cd 320b 	strd	r3, r2, [sp, #44]	@ 0x2c
 8007d0a:	f000 fb35 	bl	8008378 <_Bfree>
 8007d0e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8007d10:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8007d12:	9e04      	ldr	r6, [sp, #16]
 8007d14:	ea42 0103 	orr.w	r1, r2, r3
 8007d18:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007d1a:	4319      	orrs	r1, r3
 8007d1c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8007d1e:	d10d      	bne.n	8007d3c <_dtoa_r+0xa4c>
 8007d20:	2b39      	cmp	r3, #57	@ 0x39
 8007d22:	d027      	beq.n	8007d74 <_dtoa_r+0xa84>
 8007d24:	9a08      	ldr	r2, [sp, #32]
 8007d26:	2a00      	cmp	r2, #0
 8007d28:	dd01      	ble.n	8007d2e <_dtoa_r+0xa3e>
 8007d2a:	9b06      	ldr	r3, [sp, #24]
 8007d2c:	3331      	adds	r3, #49	@ 0x31
 8007d2e:	f88b 3000 	strb.w	r3, [fp]
 8007d32:	e52e      	b.n	8007792 <_dtoa_r+0x4a2>
 8007d34:	4628      	mov	r0, r5
 8007d36:	e7b9      	b.n	8007cac <_dtoa_r+0x9bc>
 8007d38:	2201      	movs	r2, #1
 8007d3a:	e7e2      	b.n	8007d02 <_dtoa_r+0xa12>
 8007d3c:	9908      	ldr	r1, [sp, #32]
 8007d3e:	2900      	cmp	r1, #0
 8007d40:	db04      	blt.n	8007d4c <_dtoa_r+0xa5c>
 8007d42:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8007d44:	4301      	orrs	r1, r0
 8007d46:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8007d48:	4301      	orrs	r1, r0
 8007d4a:	d120      	bne.n	8007d8e <_dtoa_r+0xa9e>
 8007d4c:	2a00      	cmp	r2, #0
 8007d4e:	ddee      	ble.n	8007d2e <_dtoa_r+0xa3e>
 8007d50:	2201      	movs	r2, #1
 8007d52:	9903      	ldr	r1, [sp, #12]
 8007d54:	4648      	mov	r0, r9
 8007d56:	9304      	str	r3, [sp, #16]
 8007d58:	f000 fcd4 	bl	8008704 <__lshift>
 8007d5c:	4621      	mov	r1, r4
 8007d5e:	9003      	str	r0, [sp, #12]
 8007d60:	f000 fd3c 	bl	80087dc <__mcmp>
 8007d64:	2800      	cmp	r0, #0
 8007d66:	9b04      	ldr	r3, [sp, #16]
 8007d68:	dc02      	bgt.n	8007d70 <_dtoa_r+0xa80>
 8007d6a:	d1e0      	bne.n	8007d2e <_dtoa_r+0xa3e>
 8007d6c:	07da      	lsls	r2, r3, #31
 8007d6e:	d5de      	bpl.n	8007d2e <_dtoa_r+0xa3e>
 8007d70:	2b39      	cmp	r3, #57	@ 0x39
 8007d72:	d1da      	bne.n	8007d2a <_dtoa_r+0xa3a>
 8007d74:	2339      	movs	r3, #57	@ 0x39
 8007d76:	f88b 3000 	strb.w	r3, [fp]
 8007d7a:	4633      	mov	r3, r6
 8007d7c:	461e      	mov	r6, r3
 8007d7e:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 8007d82:	3b01      	subs	r3, #1
 8007d84:	2a39      	cmp	r2, #57	@ 0x39
 8007d86:	d04e      	beq.n	8007e26 <_dtoa_r+0xb36>
 8007d88:	3201      	adds	r2, #1
 8007d8a:	701a      	strb	r2, [r3, #0]
 8007d8c:	e501      	b.n	8007792 <_dtoa_r+0x4a2>
 8007d8e:	2a00      	cmp	r2, #0
 8007d90:	dd03      	ble.n	8007d9a <_dtoa_r+0xaaa>
 8007d92:	2b39      	cmp	r3, #57	@ 0x39
 8007d94:	d0ee      	beq.n	8007d74 <_dtoa_r+0xa84>
 8007d96:	3301      	adds	r3, #1
 8007d98:	e7c9      	b.n	8007d2e <_dtoa_r+0xa3e>
 8007d9a:	9a04      	ldr	r2, [sp, #16]
 8007d9c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8007d9e:	f802 3c01 	strb.w	r3, [r2, #-1]
 8007da2:	428a      	cmp	r2, r1
 8007da4:	d028      	beq.n	8007df8 <_dtoa_r+0xb08>
 8007da6:	2300      	movs	r3, #0
 8007da8:	220a      	movs	r2, #10
 8007daa:	9903      	ldr	r1, [sp, #12]
 8007dac:	4648      	mov	r0, r9
 8007dae:	f000 fb05 	bl	80083bc <__multadd>
 8007db2:	42af      	cmp	r7, r5
 8007db4:	9003      	str	r0, [sp, #12]
 8007db6:	f04f 0300 	mov.w	r3, #0
 8007dba:	f04f 020a 	mov.w	r2, #10
 8007dbe:	4639      	mov	r1, r7
 8007dc0:	4648      	mov	r0, r9
 8007dc2:	d107      	bne.n	8007dd4 <_dtoa_r+0xae4>
 8007dc4:	f000 fafa 	bl	80083bc <__multadd>
 8007dc8:	4607      	mov	r7, r0
 8007dca:	4605      	mov	r5, r0
 8007dcc:	9b04      	ldr	r3, [sp, #16]
 8007dce:	3301      	adds	r3, #1
 8007dd0:	9304      	str	r3, [sp, #16]
 8007dd2:	e777      	b.n	8007cc4 <_dtoa_r+0x9d4>
 8007dd4:	f000 faf2 	bl	80083bc <__multadd>
 8007dd8:	4629      	mov	r1, r5
 8007dda:	4607      	mov	r7, r0
 8007ddc:	2300      	movs	r3, #0
 8007dde:	220a      	movs	r2, #10
 8007de0:	4648      	mov	r0, r9
 8007de2:	f000 faeb 	bl	80083bc <__multadd>
 8007de6:	4605      	mov	r5, r0
 8007de8:	e7f0      	b.n	8007dcc <_dtoa_r+0xadc>
 8007dea:	f1bb 0f00 	cmp.w	fp, #0
 8007dee:	bfcc      	ite	gt
 8007df0:	465e      	movgt	r6, fp
 8007df2:	2601      	movle	r6, #1
 8007df4:	2700      	movs	r7, #0
 8007df6:	4456      	add	r6, sl
 8007df8:	2201      	movs	r2, #1
 8007dfa:	9903      	ldr	r1, [sp, #12]
 8007dfc:	4648      	mov	r0, r9
 8007dfe:	9304      	str	r3, [sp, #16]
 8007e00:	f000 fc80 	bl	8008704 <__lshift>
 8007e04:	4621      	mov	r1, r4
 8007e06:	9003      	str	r0, [sp, #12]
 8007e08:	f000 fce8 	bl	80087dc <__mcmp>
 8007e0c:	2800      	cmp	r0, #0
 8007e0e:	dcb4      	bgt.n	8007d7a <_dtoa_r+0xa8a>
 8007e10:	d102      	bne.n	8007e18 <_dtoa_r+0xb28>
 8007e12:	9b04      	ldr	r3, [sp, #16]
 8007e14:	07db      	lsls	r3, r3, #31
 8007e16:	d4b0      	bmi.n	8007d7a <_dtoa_r+0xa8a>
 8007e18:	4633      	mov	r3, r6
 8007e1a:	461e      	mov	r6, r3
 8007e1c:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8007e20:	2a30      	cmp	r2, #48	@ 0x30
 8007e22:	d0fa      	beq.n	8007e1a <_dtoa_r+0xb2a>
 8007e24:	e4b5      	b.n	8007792 <_dtoa_r+0x4a2>
 8007e26:	459a      	cmp	sl, r3
 8007e28:	d1a8      	bne.n	8007d7c <_dtoa_r+0xa8c>
 8007e2a:	2331      	movs	r3, #49	@ 0x31
 8007e2c:	f108 0801 	add.w	r8, r8, #1
 8007e30:	f88a 3000 	strb.w	r3, [sl]
 8007e34:	e4ad      	b.n	8007792 <_dtoa_r+0x4a2>
 8007e36:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8007e38:	f8df a058 	ldr.w	sl, [pc, #88]	@ 8007e94 <_dtoa_r+0xba4>
 8007e3c:	b11b      	cbz	r3, 8007e46 <_dtoa_r+0xb56>
 8007e3e:	f10a 0308 	add.w	r3, sl, #8
 8007e42:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8007e44:	6013      	str	r3, [r2, #0]
 8007e46:	4650      	mov	r0, sl
 8007e48:	b017      	add	sp, #92	@ 0x5c
 8007e4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007e4e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8007e50:	2b01      	cmp	r3, #1
 8007e52:	f77f ae2e 	ble.w	8007ab2 <_dtoa_r+0x7c2>
 8007e56:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8007e58:	930a      	str	r3, [sp, #40]	@ 0x28
 8007e5a:	2001      	movs	r0, #1
 8007e5c:	e64d      	b.n	8007afa <_dtoa_r+0x80a>
 8007e5e:	f1bb 0f00 	cmp.w	fp, #0
 8007e62:	f77f aed9 	ble.w	8007c18 <_dtoa_r+0x928>
 8007e66:	4656      	mov	r6, sl
 8007e68:	4621      	mov	r1, r4
 8007e6a:	9803      	ldr	r0, [sp, #12]
 8007e6c:	f7ff f9b8 	bl	80071e0 <quorem>
 8007e70:	f100 0330 	add.w	r3, r0, #48	@ 0x30
 8007e74:	f806 3b01 	strb.w	r3, [r6], #1
 8007e78:	eba6 020a 	sub.w	r2, r6, sl
 8007e7c:	4593      	cmp	fp, r2
 8007e7e:	ddb4      	ble.n	8007dea <_dtoa_r+0xafa>
 8007e80:	2300      	movs	r3, #0
 8007e82:	220a      	movs	r2, #10
 8007e84:	4648      	mov	r0, r9
 8007e86:	9903      	ldr	r1, [sp, #12]
 8007e88:	f000 fa98 	bl	80083bc <__multadd>
 8007e8c:	9003      	str	r0, [sp, #12]
 8007e8e:	e7eb      	b.n	8007e68 <_dtoa_r+0xb78>
 8007e90:	080091ea 	.word	0x080091ea
 8007e94:	0800916e 	.word	0x0800916e

08007e98 <_free_r>:
 8007e98:	b538      	push	{r3, r4, r5, lr}
 8007e9a:	4605      	mov	r5, r0
 8007e9c:	2900      	cmp	r1, #0
 8007e9e:	d040      	beq.n	8007f22 <_free_r+0x8a>
 8007ea0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8007ea4:	1f0c      	subs	r4, r1, #4
 8007ea6:	2b00      	cmp	r3, #0
 8007ea8:	bfb8      	it	lt
 8007eaa:	18e4      	addlt	r4, r4, r3
 8007eac:	f7fe fe92 	bl	8006bd4 <__malloc_lock>
 8007eb0:	4a1c      	ldr	r2, [pc, #112]	@ (8007f24 <_free_r+0x8c>)
 8007eb2:	6813      	ldr	r3, [r2, #0]
 8007eb4:	b933      	cbnz	r3, 8007ec4 <_free_r+0x2c>
 8007eb6:	6063      	str	r3, [r4, #4]
 8007eb8:	6014      	str	r4, [r2, #0]
 8007eba:	4628      	mov	r0, r5
 8007ebc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007ec0:	f7fe be8e 	b.w	8006be0 <__malloc_unlock>
 8007ec4:	42a3      	cmp	r3, r4
 8007ec6:	d908      	bls.n	8007eda <_free_r+0x42>
 8007ec8:	6820      	ldr	r0, [r4, #0]
 8007eca:	1821      	adds	r1, r4, r0
 8007ecc:	428b      	cmp	r3, r1
 8007ece:	bf01      	itttt	eq
 8007ed0:	6819      	ldreq	r1, [r3, #0]
 8007ed2:	685b      	ldreq	r3, [r3, #4]
 8007ed4:	1809      	addeq	r1, r1, r0
 8007ed6:	6021      	streq	r1, [r4, #0]
 8007ed8:	e7ed      	b.n	8007eb6 <_free_r+0x1e>
 8007eda:	461a      	mov	r2, r3
 8007edc:	685b      	ldr	r3, [r3, #4]
 8007ede:	b10b      	cbz	r3, 8007ee4 <_free_r+0x4c>
 8007ee0:	42a3      	cmp	r3, r4
 8007ee2:	d9fa      	bls.n	8007eda <_free_r+0x42>
 8007ee4:	6811      	ldr	r1, [r2, #0]
 8007ee6:	1850      	adds	r0, r2, r1
 8007ee8:	42a0      	cmp	r0, r4
 8007eea:	d10b      	bne.n	8007f04 <_free_r+0x6c>
 8007eec:	6820      	ldr	r0, [r4, #0]
 8007eee:	4401      	add	r1, r0
 8007ef0:	1850      	adds	r0, r2, r1
 8007ef2:	4283      	cmp	r3, r0
 8007ef4:	6011      	str	r1, [r2, #0]
 8007ef6:	d1e0      	bne.n	8007eba <_free_r+0x22>
 8007ef8:	6818      	ldr	r0, [r3, #0]
 8007efa:	685b      	ldr	r3, [r3, #4]
 8007efc:	4408      	add	r0, r1
 8007efe:	6010      	str	r0, [r2, #0]
 8007f00:	6053      	str	r3, [r2, #4]
 8007f02:	e7da      	b.n	8007eba <_free_r+0x22>
 8007f04:	d902      	bls.n	8007f0c <_free_r+0x74>
 8007f06:	230c      	movs	r3, #12
 8007f08:	602b      	str	r3, [r5, #0]
 8007f0a:	e7d6      	b.n	8007eba <_free_r+0x22>
 8007f0c:	6820      	ldr	r0, [r4, #0]
 8007f0e:	1821      	adds	r1, r4, r0
 8007f10:	428b      	cmp	r3, r1
 8007f12:	bf01      	itttt	eq
 8007f14:	6819      	ldreq	r1, [r3, #0]
 8007f16:	685b      	ldreq	r3, [r3, #4]
 8007f18:	1809      	addeq	r1, r1, r0
 8007f1a:	6021      	streq	r1, [r4, #0]
 8007f1c:	6063      	str	r3, [r4, #4]
 8007f1e:	6054      	str	r4, [r2, #4]
 8007f20:	e7cb      	b.n	8007eba <_free_r+0x22>
 8007f22:	bd38      	pop	{r3, r4, r5, pc}
 8007f24:	200005fc 	.word	0x200005fc

08007f28 <__sfputc_r>:
 8007f28:	6893      	ldr	r3, [r2, #8]
 8007f2a:	b410      	push	{r4}
 8007f2c:	3b01      	subs	r3, #1
 8007f2e:	2b00      	cmp	r3, #0
 8007f30:	6093      	str	r3, [r2, #8]
 8007f32:	da07      	bge.n	8007f44 <__sfputc_r+0x1c>
 8007f34:	6994      	ldr	r4, [r2, #24]
 8007f36:	42a3      	cmp	r3, r4
 8007f38:	db01      	blt.n	8007f3e <__sfputc_r+0x16>
 8007f3a:	290a      	cmp	r1, #10
 8007f3c:	d102      	bne.n	8007f44 <__sfputc_r+0x1c>
 8007f3e:	bc10      	pop	{r4}
 8007f40:	f000 bdaa 	b.w	8008a98 <__swbuf_r>
 8007f44:	6813      	ldr	r3, [r2, #0]
 8007f46:	1c58      	adds	r0, r3, #1
 8007f48:	6010      	str	r0, [r2, #0]
 8007f4a:	7019      	strb	r1, [r3, #0]
 8007f4c:	4608      	mov	r0, r1
 8007f4e:	bc10      	pop	{r4}
 8007f50:	4770      	bx	lr

08007f52 <__sfputs_r>:
 8007f52:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007f54:	4606      	mov	r6, r0
 8007f56:	460f      	mov	r7, r1
 8007f58:	4614      	mov	r4, r2
 8007f5a:	18d5      	adds	r5, r2, r3
 8007f5c:	42ac      	cmp	r4, r5
 8007f5e:	d101      	bne.n	8007f64 <__sfputs_r+0x12>
 8007f60:	2000      	movs	r0, #0
 8007f62:	e007      	b.n	8007f74 <__sfputs_r+0x22>
 8007f64:	463a      	mov	r2, r7
 8007f66:	4630      	mov	r0, r6
 8007f68:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007f6c:	f7ff ffdc 	bl	8007f28 <__sfputc_r>
 8007f70:	1c43      	adds	r3, r0, #1
 8007f72:	d1f3      	bne.n	8007f5c <__sfputs_r+0xa>
 8007f74:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08007f78 <_vfiprintf_r>:
 8007f78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007f7c:	460d      	mov	r5, r1
 8007f7e:	4614      	mov	r4, r2
 8007f80:	4698      	mov	r8, r3
 8007f82:	4606      	mov	r6, r0
 8007f84:	b09d      	sub	sp, #116	@ 0x74
 8007f86:	b118      	cbz	r0, 8007f90 <_vfiprintf_r+0x18>
 8007f88:	6a03      	ldr	r3, [r0, #32]
 8007f8a:	b90b      	cbnz	r3, 8007f90 <_vfiprintf_r+0x18>
 8007f8c:	f7fe feba 	bl	8006d04 <__sinit>
 8007f90:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8007f92:	07d9      	lsls	r1, r3, #31
 8007f94:	d405      	bmi.n	8007fa2 <_vfiprintf_r+0x2a>
 8007f96:	89ab      	ldrh	r3, [r5, #12]
 8007f98:	059a      	lsls	r2, r3, #22
 8007f9a:	d402      	bmi.n	8007fa2 <_vfiprintf_r+0x2a>
 8007f9c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8007f9e:	f7ff f8cc 	bl	800713a <__retarget_lock_acquire_recursive>
 8007fa2:	89ab      	ldrh	r3, [r5, #12]
 8007fa4:	071b      	lsls	r3, r3, #28
 8007fa6:	d501      	bpl.n	8007fac <_vfiprintf_r+0x34>
 8007fa8:	692b      	ldr	r3, [r5, #16]
 8007faa:	b99b      	cbnz	r3, 8007fd4 <_vfiprintf_r+0x5c>
 8007fac:	4629      	mov	r1, r5
 8007fae:	4630      	mov	r0, r6
 8007fb0:	f000 fdb0 	bl	8008b14 <__swsetup_r>
 8007fb4:	b170      	cbz	r0, 8007fd4 <_vfiprintf_r+0x5c>
 8007fb6:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8007fb8:	07dc      	lsls	r4, r3, #31
 8007fba:	d504      	bpl.n	8007fc6 <_vfiprintf_r+0x4e>
 8007fbc:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8007fc0:	b01d      	add	sp, #116	@ 0x74
 8007fc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007fc6:	89ab      	ldrh	r3, [r5, #12]
 8007fc8:	0598      	lsls	r0, r3, #22
 8007fca:	d4f7      	bmi.n	8007fbc <_vfiprintf_r+0x44>
 8007fcc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8007fce:	f7ff f8b5 	bl	800713c <__retarget_lock_release_recursive>
 8007fd2:	e7f3      	b.n	8007fbc <_vfiprintf_r+0x44>
 8007fd4:	2300      	movs	r3, #0
 8007fd6:	9309      	str	r3, [sp, #36]	@ 0x24
 8007fd8:	2320      	movs	r3, #32
 8007fda:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8007fde:	2330      	movs	r3, #48	@ 0x30
 8007fe0:	f04f 0901 	mov.w	r9, #1
 8007fe4:	f8cd 800c 	str.w	r8, [sp, #12]
 8007fe8:	f8df 81a8 	ldr.w	r8, [pc, #424]	@ 8008194 <_vfiprintf_r+0x21c>
 8007fec:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8007ff0:	4623      	mov	r3, r4
 8007ff2:	469a      	mov	sl, r3
 8007ff4:	f813 2b01 	ldrb.w	r2, [r3], #1
 8007ff8:	b10a      	cbz	r2, 8007ffe <_vfiprintf_r+0x86>
 8007ffa:	2a25      	cmp	r2, #37	@ 0x25
 8007ffc:	d1f9      	bne.n	8007ff2 <_vfiprintf_r+0x7a>
 8007ffe:	ebba 0b04 	subs.w	fp, sl, r4
 8008002:	d00b      	beq.n	800801c <_vfiprintf_r+0xa4>
 8008004:	465b      	mov	r3, fp
 8008006:	4622      	mov	r2, r4
 8008008:	4629      	mov	r1, r5
 800800a:	4630      	mov	r0, r6
 800800c:	f7ff ffa1 	bl	8007f52 <__sfputs_r>
 8008010:	3001      	adds	r0, #1
 8008012:	f000 80a7 	beq.w	8008164 <_vfiprintf_r+0x1ec>
 8008016:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8008018:	445a      	add	r2, fp
 800801a:	9209      	str	r2, [sp, #36]	@ 0x24
 800801c:	f89a 3000 	ldrb.w	r3, [sl]
 8008020:	2b00      	cmp	r3, #0
 8008022:	f000 809f 	beq.w	8008164 <_vfiprintf_r+0x1ec>
 8008026:	2300      	movs	r3, #0
 8008028:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 800802c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8008030:	f10a 0a01 	add.w	sl, sl, #1
 8008034:	9304      	str	r3, [sp, #16]
 8008036:	9307      	str	r3, [sp, #28]
 8008038:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800803c:	931a      	str	r3, [sp, #104]	@ 0x68
 800803e:	4654      	mov	r4, sl
 8008040:	2205      	movs	r2, #5
 8008042:	f814 1b01 	ldrb.w	r1, [r4], #1
 8008046:	4853      	ldr	r0, [pc, #332]	@ (8008194 <_vfiprintf_r+0x21c>)
 8008048:	f7ff f890 	bl	800716c <memchr>
 800804c:	9a04      	ldr	r2, [sp, #16]
 800804e:	b9d8      	cbnz	r0, 8008088 <_vfiprintf_r+0x110>
 8008050:	06d1      	lsls	r1, r2, #27
 8008052:	bf44      	itt	mi
 8008054:	2320      	movmi	r3, #32
 8008056:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800805a:	0713      	lsls	r3, r2, #28
 800805c:	bf44      	itt	mi
 800805e:	232b      	movmi	r3, #43	@ 0x2b
 8008060:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8008064:	f89a 3000 	ldrb.w	r3, [sl]
 8008068:	2b2a      	cmp	r3, #42	@ 0x2a
 800806a:	d015      	beq.n	8008098 <_vfiprintf_r+0x120>
 800806c:	4654      	mov	r4, sl
 800806e:	2000      	movs	r0, #0
 8008070:	f04f 0c0a 	mov.w	ip, #10
 8008074:	9a07      	ldr	r2, [sp, #28]
 8008076:	4621      	mov	r1, r4
 8008078:	f811 3b01 	ldrb.w	r3, [r1], #1
 800807c:	3b30      	subs	r3, #48	@ 0x30
 800807e:	2b09      	cmp	r3, #9
 8008080:	d94b      	bls.n	800811a <_vfiprintf_r+0x1a2>
 8008082:	b1b0      	cbz	r0, 80080b2 <_vfiprintf_r+0x13a>
 8008084:	9207      	str	r2, [sp, #28]
 8008086:	e014      	b.n	80080b2 <_vfiprintf_r+0x13a>
 8008088:	eba0 0308 	sub.w	r3, r0, r8
 800808c:	fa09 f303 	lsl.w	r3, r9, r3
 8008090:	4313      	orrs	r3, r2
 8008092:	46a2      	mov	sl, r4
 8008094:	9304      	str	r3, [sp, #16]
 8008096:	e7d2      	b.n	800803e <_vfiprintf_r+0xc6>
 8008098:	9b03      	ldr	r3, [sp, #12]
 800809a:	1d19      	adds	r1, r3, #4
 800809c:	681b      	ldr	r3, [r3, #0]
 800809e:	9103      	str	r1, [sp, #12]
 80080a0:	2b00      	cmp	r3, #0
 80080a2:	bfbb      	ittet	lt
 80080a4:	425b      	neglt	r3, r3
 80080a6:	f042 0202 	orrlt.w	r2, r2, #2
 80080aa:	9307      	strge	r3, [sp, #28]
 80080ac:	9307      	strlt	r3, [sp, #28]
 80080ae:	bfb8      	it	lt
 80080b0:	9204      	strlt	r2, [sp, #16]
 80080b2:	7823      	ldrb	r3, [r4, #0]
 80080b4:	2b2e      	cmp	r3, #46	@ 0x2e
 80080b6:	d10a      	bne.n	80080ce <_vfiprintf_r+0x156>
 80080b8:	7863      	ldrb	r3, [r4, #1]
 80080ba:	2b2a      	cmp	r3, #42	@ 0x2a
 80080bc:	d132      	bne.n	8008124 <_vfiprintf_r+0x1ac>
 80080be:	9b03      	ldr	r3, [sp, #12]
 80080c0:	3402      	adds	r4, #2
 80080c2:	1d1a      	adds	r2, r3, #4
 80080c4:	681b      	ldr	r3, [r3, #0]
 80080c6:	9203      	str	r2, [sp, #12]
 80080c8:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80080cc:	9305      	str	r3, [sp, #20]
 80080ce:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 8008198 <_vfiprintf_r+0x220>
 80080d2:	2203      	movs	r2, #3
 80080d4:	4650      	mov	r0, sl
 80080d6:	7821      	ldrb	r1, [r4, #0]
 80080d8:	f7ff f848 	bl	800716c <memchr>
 80080dc:	b138      	cbz	r0, 80080ee <_vfiprintf_r+0x176>
 80080de:	2240      	movs	r2, #64	@ 0x40
 80080e0:	9b04      	ldr	r3, [sp, #16]
 80080e2:	eba0 000a 	sub.w	r0, r0, sl
 80080e6:	4082      	lsls	r2, r0
 80080e8:	4313      	orrs	r3, r2
 80080ea:	3401      	adds	r4, #1
 80080ec:	9304      	str	r3, [sp, #16]
 80080ee:	f814 1b01 	ldrb.w	r1, [r4], #1
 80080f2:	2206      	movs	r2, #6
 80080f4:	4829      	ldr	r0, [pc, #164]	@ (800819c <_vfiprintf_r+0x224>)
 80080f6:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80080fa:	f7ff f837 	bl	800716c <memchr>
 80080fe:	2800      	cmp	r0, #0
 8008100:	d03f      	beq.n	8008182 <_vfiprintf_r+0x20a>
 8008102:	4b27      	ldr	r3, [pc, #156]	@ (80081a0 <_vfiprintf_r+0x228>)
 8008104:	bb1b      	cbnz	r3, 800814e <_vfiprintf_r+0x1d6>
 8008106:	9b03      	ldr	r3, [sp, #12]
 8008108:	3307      	adds	r3, #7
 800810a:	f023 0307 	bic.w	r3, r3, #7
 800810e:	3308      	adds	r3, #8
 8008110:	9303      	str	r3, [sp, #12]
 8008112:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008114:	443b      	add	r3, r7
 8008116:	9309      	str	r3, [sp, #36]	@ 0x24
 8008118:	e76a      	b.n	8007ff0 <_vfiprintf_r+0x78>
 800811a:	460c      	mov	r4, r1
 800811c:	2001      	movs	r0, #1
 800811e:	fb0c 3202 	mla	r2, ip, r2, r3
 8008122:	e7a8      	b.n	8008076 <_vfiprintf_r+0xfe>
 8008124:	2300      	movs	r3, #0
 8008126:	f04f 0c0a 	mov.w	ip, #10
 800812a:	4619      	mov	r1, r3
 800812c:	3401      	adds	r4, #1
 800812e:	9305      	str	r3, [sp, #20]
 8008130:	4620      	mov	r0, r4
 8008132:	f810 2b01 	ldrb.w	r2, [r0], #1
 8008136:	3a30      	subs	r2, #48	@ 0x30
 8008138:	2a09      	cmp	r2, #9
 800813a:	d903      	bls.n	8008144 <_vfiprintf_r+0x1cc>
 800813c:	2b00      	cmp	r3, #0
 800813e:	d0c6      	beq.n	80080ce <_vfiprintf_r+0x156>
 8008140:	9105      	str	r1, [sp, #20]
 8008142:	e7c4      	b.n	80080ce <_vfiprintf_r+0x156>
 8008144:	4604      	mov	r4, r0
 8008146:	2301      	movs	r3, #1
 8008148:	fb0c 2101 	mla	r1, ip, r1, r2
 800814c:	e7f0      	b.n	8008130 <_vfiprintf_r+0x1b8>
 800814e:	ab03      	add	r3, sp, #12
 8008150:	9300      	str	r3, [sp, #0]
 8008152:	462a      	mov	r2, r5
 8008154:	4630      	mov	r0, r6
 8008156:	4b13      	ldr	r3, [pc, #76]	@ (80081a4 <_vfiprintf_r+0x22c>)
 8008158:	a904      	add	r1, sp, #16
 800815a:	f7fe f821 	bl	80061a0 <_printf_float>
 800815e:	4607      	mov	r7, r0
 8008160:	1c78      	adds	r0, r7, #1
 8008162:	d1d6      	bne.n	8008112 <_vfiprintf_r+0x19a>
 8008164:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8008166:	07d9      	lsls	r1, r3, #31
 8008168:	d405      	bmi.n	8008176 <_vfiprintf_r+0x1fe>
 800816a:	89ab      	ldrh	r3, [r5, #12]
 800816c:	059a      	lsls	r2, r3, #22
 800816e:	d402      	bmi.n	8008176 <_vfiprintf_r+0x1fe>
 8008170:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8008172:	f7fe ffe3 	bl	800713c <__retarget_lock_release_recursive>
 8008176:	89ab      	ldrh	r3, [r5, #12]
 8008178:	065b      	lsls	r3, r3, #25
 800817a:	f53f af1f 	bmi.w	8007fbc <_vfiprintf_r+0x44>
 800817e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8008180:	e71e      	b.n	8007fc0 <_vfiprintf_r+0x48>
 8008182:	ab03      	add	r3, sp, #12
 8008184:	9300      	str	r3, [sp, #0]
 8008186:	462a      	mov	r2, r5
 8008188:	4630      	mov	r0, r6
 800818a:	4b06      	ldr	r3, [pc, #24]	@ (80081a4 <_vfiprintf_r+0x22c>)
 800818c:	a904      	add	r1, sp, #16
 800818e:	f7fe fb4f 	bl	8006830 <_printf_i>
 8008192:	e7e4      	b.n	800815e <_vfiprintf_r+0x1e6>
 8008194:	080091fb 	.word	0x080091fb
 8008198:	08009201 	.word	0x08009201
 800819c:	08009205 	.word	0x08009205
 80081a0:	080061a1 	.word	0x080061a1
 80081a4:	08007f53 	.word	0x08007f53

080081a8 <__sflush_r>:
 80081a8:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80081ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80081ae:	0716      	lsls	r6, r2, #28
 80081b0:	4605      	mov	r5, r0
 80081b2:	460c      	mov	r4, r1
 80081b4:	d454      	bmi.n	8008260 <__sflush_r+0xb8>
 80081b6:	684b      	ldr	r3, [r1, #4]
 80081b8:	2b00      	cmp	r3, #0
 80081ba:	dc02      	bgt.n	80081c2 <__sflush_r+0x1a>
 80081bc:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 80081be:	2b00      	cmp	r3, #0
 80081c0:	dd48      	ble.n	8008254 <__sflush_r+0xac>
 80081c2:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80081c4:	2e00      	cmp	r6, #0
 80081c6:	d045      	beq.n	8008254 <__sflush_r+0xac>
 80081c8:	2300      	movs	r3, #0
 80081ca:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 80081ce:	682f      	ldr	r7, [r5, #0]
 80081d0:	6a21      	ldr	r1, [r4, #32]
 80081d2:	602b      	str	r3, [r5, #0]
 80081d4:	d030      	beq.n	8008238 <__sflush_r+0x90>
 80081d6:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80081d8:	89a3      	ldrh	r3, [r4, #12]
 80081da:	0759      	lsls	r1, r3, #29
 80081dc:	d505      	bpl.n	80081ea <__sflush_r+0x42>
 80081de:	6863      	ldr	r3, [r4, #4]
 80081e0:	1ad2      	subs	r2, r2, r3
 80081e2:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80081e4:	b10b      	cbz	r3, 80081ea <__sflush_r+0x42>
 80081e6:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80081e8:	1ad2      	subs	r2, r2, r3
 80081ea:	2300      	movs	r3, #0
 80081ec:	4628      	mov	r0, r5
 80081ee:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80081f0:	6a21      	ldr	r1, [r4, #32]
 80081f2:	47b0      	blx	r6
 80081f4:	1c43      	adds	r3, r0, #1
 80081f6:	89a3      	ldrh	r3, [r4, #12]
 80081f8:	d106      	bne.n	8008208 <__sflush_r+0x60>
 80081fa:	6829      	ldr	r1, [r5, #0]
 80081fc:	291d      	cmp	r1, #29
 80081fe:	d82b      	bhi.n	8008258 <__sflush_r+0xb0>
 8008200:	4a28      	ldr	r2, [pc, #160]	@ (80082a4 <__sflush_r+0xfc>)
 8008202:	40ca      	lsrs	r2, r1
 8008204:	07d6      	lsls	r6, r2, #31
 8008206:	d527      	bpl.n	8008258 <__sflush_r+0xb0>
 8008208:	2200      	movs	r2, #0
 800820a:	6062      	str	r2, [r4, #4]
 800820c:	6922      	ldr	r2, [r4, #16]
 800820e:	04d9      	lsls	r1, r3, #19
 8008210:	6022      	str	r2, [r4, #0]
 8008212:	d504      	bpl.n	800821e <__sflush_r+0x76>
 8008214:	1c42      	adds	r2, r0, #1
 8008216:	d101      	bne.n	800821c <__sflush_r+0x74>
 8008218:	682b      	ldr	r3, [r5, #0]
 800821a:	b903      	cbnz	r3, 800821e <__sflush_r+0x76>
 800821c:	6560      	str	r0, [r4, #84]	@ 0x54
 800821e:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8008220:	602f      	str	r7, [r5, #0]
 8008222:	b1b9      	cbz	r1, 8008254 <__sflush_r+0xac>
 8008224:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8008228:	4299      	cmp	r1, r3
 800822a:	d002      	beq.n	8008232 <__sflush_r+0x8a>
 800822c:	4628      	mov	r0, r5
 800822e:	f7ff fe33 	bl	8007e98 <_free_r>
 8008232:	2300      	movs	r3, #0
 8008234:	6363      	str	r3, [r4, #52]	@ 0x34
 8008236:	e00d      	b.n	8008254 <__sflush_r+0xac>
 8008238:	2301      	movs	r3, #1
 800823a:	4628      	mov	r0, r5
 800823c:	47b0      	blx	r6
 800823e:	4602      	mov	r2, r0
 8008240:	1c50      	adds	r0, r2, #1
 8008242:	d1c9      	bne.n	80081d8 <__sflush_r+0x30>
 8008244:	682b      	ldr	r3, [r5, #0]
 8008246:	2b00      	cmp	r3, #0
 8008248:	d0c6      	beq.n	80081d8 <__sflush_r+0x30>
 800824a:	2b1d      	cmp	r3, #29
 800824c:	d001      	beq.n	8008252 <__sflush_r+0xaa>
 800824e:	2b16      	cmp	r3, #22
 8008250:	d11d      	bne.n	800828e <__sflush_r+0xe6>
 8008252:	602f      	str	r7, [r5, #0]
 8008254:	2000      	movs	r0, #0
 8008256:	e021      	b.n	800829c <__sflush_r+0xf4>
 8008258:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800825c:	b21b      	sxth	r3, r3
 800825e:	e01a      	b.n	8008296 <__sflush_r+0xee>
 8008260:	690f      	ldr	r7, [r1, #16]
 8008262:	2f00      	cmp	r7, #0
 8008264:	d0f6      	beq.n	8008254 <__sflush_r+0xac>
 8008266:	0793      	lsls	r3, r2, #30
 8008268:	bf18      	it	ne
 800826a:	2300      	movne	r3, #0
 800826c:	680e      	ldr	r6, [r1, #0]
 800826e:	bf08      	it	eq
 8008270:	694b      	ldreq	r3, [r1, #20]
 8008272:	1bf6      	subs	r6, r6, r7
 8008274:	600f      	str	r7, [r1, #0]
 8008276:	608b      	str	r3, [r1, #8]
 8008278:	2e00      	cmp	r6, #0
 800827a:	ddeb      	ble.n	8008254 <__sflush_r+0xac>
 800827c:	4633      	mov	r3, r6
 800827e:	463a      	mov	r2, r7
 8008280:	4628      	mov	r0, r5
 8008282:	6a21      	ldr	r1, [r4, #32]
 8008284:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 8008288:	47e0      	blx	ip
 800828a:	2800      	cmp	r0, #0
 800828c:	dc07      	bgt.n	800829e <__sflush_r+0xf6>
 800828e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8008292:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8008296:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800829a:	81a3      	strh	r3, [r4, #12]
 800829c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800829e:	4407      	add	r7, r0
 80082a0:	1a36      	subs	r6, r6, r0
 80082a2:	e7e9      	b.n	8008278 <__sflush_r+0xd0>
 80082a4:	20400001 	.word	0x20400001

080082a8 <_fflush_r>:
 80082a8:	b538      	push	{r3, r4, r5, lr}
 80082aa:	690b      	ldr	r3, [r1, #16]
 80082ac:	4605      	mov	r5, r0
 80082ae:	460c      	mov	r4, r1
 80082b0:	b913      	cbnz	r3, 80082b8 <_fflush_r+0x10>
 80082b2:	2500      	movs	r5, #0
 80082b4:	4628      	mov	r0, r5
 80082b6:	bd38      	pop	{r3, r4, r5, pc}
 80082b8:	b118      	cbz	r0, 80082c2 <_fflush_r+0x1a>
 80082ba:	6a03      	ldr	r3, [r0, #32]
 80082bc:	b90b      	cbnz	r3, 80082c2 <_fflush_r+0x1a>
 80082be:	f7fe fd21 	bl	8006d04 <__sinit>
 80082c2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80082c6:	2b00      	cmp	r3, #0
 80082c8:	d0f3      	beq.n	80082b2 <_fflush_r+0xa>
 80082ca:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80082cc:	07d0      	lsls	r0, r2, #31
 80082ce:	d404      	bmi.n	80082da <_fflush_r+0x32>
 80082d0:	0599      	lsls	r1, r3, #22
 80082d2:	d402      	bmi.n	80082da <_fflush_r+0x32>
 80082d4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80082d6:	f7fe ff30 	bl	800713a <__retarget_lock_acquire_recursive>
 80082da:	4628      	mov	r0, r5
 80082dc:	4621      	mov	r1, r4
 80082de:	f7ff ff63 	bl	80081a8 <__sflush_r>
 80082e2:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80082e4:	4605      	mov	r5, r0
 80082e6:	07da      	lsls	r2, r3, #31
 80082e8:	d4e4      	bmi.n	80082b4 <_fflush_r+0xc>
 80082ea:	89a3      	ldrh	r3, [r4, #12]
 80082ec:	059b      	lsls	r3, r3, #22
 80082ee:	d4e1      	bmi.n	80082b4 <_fflush_r+0xc>
 80082f0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80082f2:	f7fe ff23 	bl	800713c <__retarget_lock_release_recursive>
 80082f6:	e7dd      	b.n	80082b4 <_fflush_r+0xc>

080082f8 <_Balloc>:
 80082f8:	b570      	push	{r4, r5, r6, lr}
 80082fa:	69c6      	ldr	r6, [r0, #28]
 80082fc:	4604      	mov	r4, r0
 80082fe:	460d      	mov	r5, r1
 8008300:	b976      	cbnz	r6, 8008320 <_Balloc+0x28>
 8008302:	2010      	movs	r0, #16
 8008304:	f7fe f978 	bl	80065f8 <malloc>
 8008308:	4602      	mov	r2, r0
 800830a:	61e0      	str	r0, [r4, #28]
 800830c:	b920      	cbnz	r0, 8008318 <_Balloc+0x20>
 800830e:	216b      	movs	r1, #107	@ 0x6b
 8008310:	4b17      	ldr	r3, [pc, #92]	@ (8008370 <_Balloc+0x78>)
 8008312:	4818      	ldr	r0, [pc, #96]	@ (8008374 <_Balloc+0x7c>)
 8008314:	f7fe ff46 	bl	80071a4 <__assert_func>
 8008318:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800831c:	6006      	str	r6, [r0, #0]
 800831e:	60c6      	str	r6, [r0, #12]
 8008320:	69e6      	ldr	r6, [r4, #28]
 8008322:	68f3      	ldr	r3, [r6, #12]
 8008324:	b183      	cbz	r3, 8008348 <_Balloc+0x50>
 8008326:	69e3      	ldr	r3, [r4, #28]
 8008328:	68db      	ldr	r3, [r3, #12]
 800832a:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800832e:	b9b8      	cbnz	r0, 8008360 <_Balloc+0x68>
 8008330:	2101      	movs	r1, #1
 8008332:	fa01 f605 	lsl.w	r6, r1, r5
 8008336:	1d72      	adds	r2, r6, #5
 8008338:	4620      	mov	r0, r4
 800833a:	0092      	lsls	r2, r2, #2
 800833c:	f000 fc86 	bl	8008c4c <_calloc_r>
 8008340:	b160      	cbz	r0, 800835c <_Balloc+0x64>
 8008342:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8008346:	e00e      	b.n	8008366 <_Balloc+0x6e>
 8008348:	2221      	movs	r2, #33	@ 0x21
 800834a:	2104      	movs	r1, #4
 800834c:	4620      	mov	r0, r4
 800834e:	f000 fc7d 	bl	8008c4c <_calloc_r>
 8008352:	69e3      	ldr	r3, [r4, #28]
 8008354:	60f0      	str	r0, [r6, #12]
 8008356:	68db      	ldr	r3, [r3, #12]
 8008358:	2b00      	cmp	r3, #0
 800835a:	d1e4      	bne.n	8008326 <_Balloc+0x2e>
 800835c:	2000      	movs	r0, #0
 800835e:	bd70      	pop	{r4, r5, r6, pc}
 8008360:	6802      	ldr	r2, [r0, #0]
 8008362:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8008366:	2300      	movs	r3, #0
 8008368:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800836c:	e7f7      	b.n	800835e <_Balloc+0x66>
 800836e:	bf00      	nop
 8008370:	0800917b 	.word	0x0800917b
 8008374:	0800920c 	.word	0x0800920c

08008378 <_Bfree>:
 8008378:	b570      	push	{r4, r5, r6, lr}
 800837a:	69c6      	ldr	r6, [r0, #28]
 800837c:	4605      	mov	r5, r0
 800837e:	460c      	mov	r4, r1
 8008380:	b976      	cbnz	r6, 80083a0 <_Bfree+0x28>
 8008382:	2010      	movs	r0, #16
 8008384:	f7fe f938 	bl	80065f8 <malloc>
 8008388:	4602      	mov	r2, r0
 800838a:	61e8      	str	r0, [r5, #28]
 800838c:	b920      	cbnz	r0, 8008398 <_Bfree+0x20>
 800838e:	218f      	movs	r1, #143	@ 0x8f
 8008390:	4b08      	ldr	r3, [pc, #32]	@ (80083b4 <_Bfree+0x3c>)
 8008392:	4809      	ldr	r0, [pc, #36]	@ (80083b8 <_Bfree+0x40>)
 8008394:	f7fe ff06 	bl	80071a4 <__assert_func>
 8008398:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800839c:	6006      	str	r6, [r0, #0]
 800839e:	60c6      	str	r6, [r0, #12]
 80083a0:	b13c      	cbz	r4, 80083b2 <_Bfree+0x3a>
 80083a2:	69eb      	ldr	r3, [r5, #28]
 80083a4:	6862      	ldr	r2, [r4, #4]
 80083a6:	68db      	ldr	r3, [r3, #12]
 80083a8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80083ac:	6021      	str	r1, [r4, #0]
 80083ae:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 80083b2:	bd70      	pop	{r4, r5, r6, pc}
 80083b4:	0800917b 	.word	0x0800917b
 80083b8:	0800920c 	.word	0x0800920c

080083bc <__multadd>:
 80083bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80083c0:	4607      	mov	r7, r0
 80083c2:	460c      	mov	r4, r1
 80083c4:	461e      	mov	r6, r3
 80083c6:	2000      	movs	r0, #0
 80083c8:	690d      	ldr	r5, [r1, #16]
 80083ca:	f101 0c14 	add.w	ip, r1, #20
 80083ce:	f8dc 3000 	ldr.w	r3, [ip]
 80083d2:	3001      	adds	r0, #1
 80083d4:	b299      	uxth	r1, r3
 80083d6:	fb02 6101 	mla	r1, r2, r1, r6
 80083da:	0c1e      	lsrs	r6, r3, #16
 80083dc:	0c0b      	lsrs	r3, r1, #16
 80083de:	fb02 3306 	mla	r3, r2, r6, r3
 80083e2:	b289      	uxth	r1, r1
 80083e4:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 80083e8:	4285      	cmp	r5, r0
 80083ea:	ea4f 4613 	mov.w	r6, r3, lsr #16
 80083ee:	f84c 1b04 	str.w	r1, [ip], #4
 80083f2:	dcec      	bgt.n	80083ce <__multadd+0x12>
 80083f4:	b30e      	cbz	r6, 800843a <__multadd+0x7e>
 80083f6:	68a3      	ldr	r3, [r4, #8]
 80083f8:	42ab      	cmp	r3, r5
 80083fa:	dc19      	bgt.n	8008430 <__multadd+0x74>
 80083fc:	6861      	ldr	r1, [r4, #4]
 80083fe:	4638      	mov	r0, r7
 8008400:	3101      	adds	r1, #1
 8008402:	f7ff ff79 	bl	80082f8 <_Balloc>
 8008406:	4680      	mov	r8, r0
 8008408:	b928      	cbnz	r0, 8008416 <__multadd+0x5a>
 800840a:	4602      	mov	r2, r0
 800840c:	21ba      	movs	r1, #186	@ 0xba
 800840e:	4b0c      	ldr	r3, [pc, #48]	@ (8008440 <__multadd+0x84>)
 8008410:	480c      	ldr	r0, [pc, #48]	@ (8008444 <__multadd+0x88>)
 8008412:	f7fe fec7 	bl	80071a4 <__assert_func>
 8008416:	6922      	ldr	r2, [r4, #16]
 8008418:	f104 010c 	add.w	r1, r4, #12
 800841c:	3202      	adds	r2, #2
 800841e:	0092      	lsls	r2, r2, #2
 8008420:	300c      	adds	r0, #12
 8008422:	f7fe feb1 	bl	8007188 <memcpy>
 8008426:	4621      	mov	r1, r4
 8008428:	4638      	mov	r0, r7
 800842a:	f7ff ffa5 	bl	8008378 <_Bfree>
 800842e:	4644      	mov	r4, r8
 8008430:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8008434:	3501      	adds	r5, #1
 8008436:	615e      	str	r6, [r3, #20]
 8008438:	6125      	str	r5, [r4, #16]
 800843a:	4620      	mov	r0, r4
 800843c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008440:	080091ea 	.word	0x080091ea
 8008444:	0800920c 	.word	0x0800920c

08008448 <__hi0bits>:
 8008448:	4603      	mov	r3, r0
 800844a:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 800844e:	bf3a      	itte	cc
 8008450:	0403      	lslcc	r3, r0, #16
 8008452:	2010      	movcc	r0, #16
 8008454:	2000      	movcs	r0, #0
 8008456:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800845a:	bf3c      	itt	cc
 800845c:	021b      	lslcc	r3, r3, #8
 800845e:	3008      	addcc	r0, #8
 8008460:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8008464:	bf3c      	itt	cc
 8008466:	011b      	lslcc	r3, r3, #4
 8008468:	3004      	addcc	r0, #4
 800846a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800846e:	bf3c      	itt	cc
 8008470:	009b      	lslcc	r3, r3, #2
 8008472:	3002      	addcc	r0, #2
 8008474:	2b00      	cmp	r3, #0
 8008476:	db05      	blt.n	8008484 <__hi0bits+0x3c>
 8008478:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 800847c:	f100 0001 	add.w	r0, r0, #1
 8008480:	bf08      	it	eq
 8008482:	2020      	moveq	r0, #32
 8008484:	4770      	bx	lr

08008486 <__lo0bits>:
 8008486:	6803      	ldr	r3, [r0, #0]
 8008488:	4602      	mov	r2, r0
 800848a:	f013 0007 	ands.w	r0, r3, #7
 800848e:	d00b      	beq.n	80084a8 <__lo0bits+0x22>
 8008490:	07d9      	lsls	r1, r3, #31
 8008492:	d421      	bmi.n	80084d8 <__lo0bits+0x52>
 8008494:	0798      	lsls	r0, r3, #30
 8008496:	bf49      	itett	mi
 8008498:	085b      	lsrmi	r3, r3, #1
 800849a:	089b      	lsrpl	r3, r3, #2
 800849c:	2001      	movmi	r0, #1
 800849e:	6013      	strmi	r3, [r2, #0]
 80084a0:	bf5c      	itt	pl
 80084a2:	2002      	movpl	r0, #2
 80084a4:	6013      	strpl	r3, [r2, #0]
 80084a6:	4770      	bx	lr
 80084a8:	b299      	uxth	r1, r3
 80084aa:	b909      	cbnz	r1, 80084b0 <__lo0bits+0x2a>
 80084ac:	2010      	movs	r0, #16
 80084ae:	0c1b      	lsrs	r3, r3, #16
 80084b0:	b2d9      	uxtb	r1, r3
 80084b2:	b909      	cbnz	r1, 80084b8 <__lo0bits+0x32>
 80084b4:	3008      	adds	r0, #8
 80084b6:	0a1b      	lsrs	r3, r3, #8
 80084b8:	0719      	lsls	r1, r3, #28
 80084ba:	bf04      	itt	eq
 80084bc:	091b      	lsreq	r3, r3, #4
 80084be:	3004      	addeq	r0, #4
 80084c0:	0799      	lsls	r1, r3, #30
 80084c2:	bf04      	itt	eq
 80084c4:	089b      	lsreq	r3, r3, #2
 80084c6:	3002      	addeq	r0, #2
 80084c8:	07d9      	lsls	r1, r3, #31
 80084ca:	d403      	bmi.n	80084d4 <__lo0bits+0x4e>
 80084cc:	085b      	lsrs	r3, r3, #1
 80084ce:	f100 0001 	add.w	r0, r0, #1
 80084d2:	d003      	beq.n	80084dc <__lo0bits+0x56>
 80084d4:	6013      	str	r3, [r2, #0]
 80084d6:	4770      	bx	lr
 80084d8:	2000      	movs	r0, #0
 80084da:	4770      	bx	lr
 80084dc:	2020      	movs	r0, #32
 80084de:	4770      	bx	lr

080084e0 <__i2b>:
 80084e0:	b510      	push	{r4, lr}
 80084e2:	460c      	mov	r4, r1
 80084e4:	2101      	movs	r1, #1
 80084e6:	f7ff ff07 	bl	80082f8 <_Balloc>
 80084ea:	4602      	mov	r2, r0
 80084ec:	b928      	cbnz	r0, 80084fa <__i2b+0x1a>
 80084ee:	f240 1145 	movw	r1, #325	@ 0x145
 80084f2:	4b04      	ldr	r3, [pc, #16]	@ (8008504 <__i2b+0x24>)
 80084f4:	4804      	ldr	r0, [pc, #16]	@ (8008508 <__i2b+0x28>)
 80084f6:	f7fe fe55 	bl	80071a4 <__assert_func>
 80084fa:	2301      	movs	r3, #1
 80084fc:	6144      	str	r4, [r0, #20]
 80084fe:	6103      	str	r3, [r0, #16]
 8008500:	bd10      	pop	{r4, pc}
 8008502:	bf00      	nop
 8008504:	080091ea 	.word	0x080091ea
 8008508:	0800920c 	.word	0x0800920c

0800850c <__multiply>:
 800850c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008510:	4617      	mov	r7, r2
 8008512:	690a      	ldr	r2, [r1, #16]
 8008514:	693b      	ldr	r3, [r7, #16]
 8008516:	4689      	mov	r9, r1
 8008518:	429a      	cmp	r2, r3
 800851a:	bfa2      	ittt	ge
 800851c:	463b      	movge	r3, r7
 800851e:	460f      	movge	r7, r1
 8008520:	4699      	movge	r9, r3
 8008522:	693d      	ldr	r5, [r7, #16]
 8008524:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8008528:	68bb      	ldr	r3, [r7, #8]
 800852a:	6879      	ldr	r1, [r7, #4]
 800852c:	eb05 060a 	add.w	r6, r5, sl
 8008530:	42b3      	cmp	r3, r6
 8008532:	b085      	sub	sp, #20
 8008534:	bfb8      	it	lt
 8008536:	3101      	addlt	r1, #1
 8008538:	f7ff fede 	bl	80082f8 <_Balloc>
 800853c:	b930      	cbnz	r0, 800854c <__multiply+0x40>
 800853e:	4602      	mov	r2, r0
 8008540:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8008544:	4b40      	ldr	r3, [pc, #256]	@ (8008648 <__multiply+0x13c>)
 8008546:	4841      	ldr	r0, [pc, #260]	@ (800864c <__multiply+0x140>)
 8008548:	f7fe fe2c 	bl	80071a4 <__assert_func>
 800854c:	f100 0414 	add.w	r4, r0, #20
 8008550:	4623      	mov	r3, r4
 8008552:	2200      	movs	r2, #0
 8008554:	eb04 0e86 	add.w	lr, r4, r6, lsl #2
 8008558:	4573      	cmp	r3, lr
 800855a:	d320      	bcc.n	800859e <__multiply+0x92>
 800855c:	f107 0814 	add.w	r8, r7, #20
 8008560:	f109 0114 	add.w	r1, r9, #20
 8008564:	eb08 0585 	add.w	r5, r8, r5, lsl #2
 8008568:	eb01 038a 	add.w	r3, r1, sl, lsl #2
 800856c:	9302      	str	r3, [sp, #8]
 800856e:	1beb      	subs	r3, r5, r7
 8008570:	3b15      	subs	r3, #21
 8008572:	f023 0303 	bic.w	r3, r3, #3
 8008576:	3304      	adds	r3, #4
 8008578:	3715      	adds	r7, #21
 800857a:	42bd      	cmp	r5, r7
 800857c:	bf38      	it	cc
 800857e:	2304      	movcc	r3, #4
 8008580:	9301      	str	r3, [sp, #4]
 8008582:	9b02      	ldr	r3, [sp, #8]
 8008584:	9103      	str	r1, [sp, #12]
 8008586:	428b      	cmp	r3, r1
 8008588:	d80c      	bhi.n	80085a4 <__multiply+0x98>
 800858a:	2e00      	cmp	r6, #0
 800858c:	dd03      	ble.n	8008596 <__multiply+0x8a>
 800858e:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 8008592:	2b00      	cmp	r3, #0
 8008594:	d055      	beq.n	8008642 <__multiply+0x136>
 8008596:	6106      	str	r6, [r0, #16]
 8008598:	b005      	add	sp, #20
 800859a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800859e:	f843 2b04 	str.w	r2, [r3], #4
 80085a2:	e7d9      	b.n	8008558 <__multiply+0x4c>
 80085a4:	f8b1 a000 	ldrh.w	sl, [r1]
 80085a8:	f1ba 0f00 	cmp.w	sl, #0
 80085ac:	d01f      	beq.n	80085ee <__multiply+0xe2>
 80085ae:	46c4      	mov	ip, r8
 80085b0:	46a1      	mov	r9, r4
 80085b2:	2700      	movs	r7, #0
 80085b4:	f85c 2b04 	ldr.w	r2, [ip], #4
 80085b8:	f8d9 3000 	ldr.w	r3, [r9]
 80085bc:	fa1f fb82 	uxth.w	fp, r2
 80085c0:	b29b      	uxth	r3, r3
 80085c2:	fb0a 330b 	mla	r3, sl, fp, r3
 80085c6:	443b      	add	r3, r7
 80085c8:	f8d9 7000 	ldr.w	r7, [r9]
 80085cc:	0c12      	lsrs	r2, r2, #16
 80085ce:	0c3f      	lsrs	r7, r7, #16
 80085d0:	fb0a 7202 	mla	r2, sl, r2, r7
 80085d4:	eb02 4213 	add.w	r2, r2, r3, lsr #16
 80085d8:	b29b      	uxth	r3, r3
 80085da:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80085de:	4565      	cmp	r5, ip
 80085e0:	ea4f 4712 	mov.w	r7, r2, lsr #16
 80085e4:	f849 3b04 	str.w	r3, [r9], #4
 80085e8:	d8e4      	bhi.n	80085b4 <__multiply+0xa8>
 80085ea:	9b01      	ldr	r3, [sp, #4]
 80085ec:	50e7      	str	r7, [r4, r3]
 80085ee:	9b03      	ldr	r3, [sp, #12]
 80085f0:	3104      	adds	r1, #4
 80085f2:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 80085f6:	f1b9 0f00 	cmp.w	r9, #0
 80085fa:	d020      	beq.n	800863e <__multiply+0x132>
 80085fc:	4647      	mov	r7, r8
 80085fe:	46a4      	mov	ip, r4
 8008600:	f04f 0a00 	mov.w	sl, #0
 8008604:	6823      	ldr	r3, [r4, #0]
 8008606:	f8b7 b000 	ldrh.w	fp, [r7]
 800860a:	f8bc 2002 	ldrh.w	r2, [ip, #2]
 800860e:	b29b      	uxth	r3, r3
 8008610:	fb09 220b 	mla	r2, r9, fp, r2
 8008614:	4452      	add	r2, sl
 8008616:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800861a:	f84c 3b04 	str.w	r3, [ip], #4
 800861e:	f857 3b04 	ldr.w	r3, [r7], #4
 8008622:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8008626:	f8bc 3000 	ldrh.w	r3, [ip]
 800862a:	42bd      	cmp	r5, r7
 800862c:	fb09 330a 	mla	r3, r9, sl, r3
 8008630:	eb03 4312 	add.w	r3, r3, r2, lsr #16
 8008634:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8008638:	d8e5      	bhi.n	8008606 <__multiply+0xfa>
 800863a:	9a01      	ldr	r2, [sp, #4]
 800863c:	50a3      	str	r3, [r4, r2]
 800863e:	3404      	adds	r4, #4
 8008640:	e79f      	b.n	8008582 <__multiply+0x76>
 8008642:	3e01      	subs	r6, #1
 8008644:	e7a1      	b.n	800858a <__multiply+0x7e>
 8008646:	bf00      	nop
 8008648:	080091ea 	.word	0x080091ea
 800864c:	0800920c 	.word	0x0800920c

08008650 <__pow5mult>:
 8008650:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008654:	4615      	mov	r5, r2
 8008656:	f012 0203 	ands.w	r2, r2, #3
 800865a:	4607      	mov	r7, r0
 800865c:	460e      	mov	r6, r1
 800865e:	d007      	beq.n	8008670 <__pow5mult+0x20>
 8008660:	4c25      	ldr	r4, [pc, #148]	@ (80086f8 <__pow5mult+0xa8>)
 8008662:	3a01      	subs	r2, #1
 8008664:	2300      	movs	r3, #0
 8008666:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800866a:	f7ff fea7 	bl	80083bc <__multadd>
 800866e:	4606      	mov	r6, r0
 8008670:	10ad      	asrs	r5, r5, #2
 8008672:	d03d      	beq.n	80086f0 <__pow5mult+0xa0>
 8008674:	69fc      	ldr	r4, [r7, #28]
 8008676:	b97c      	cbnz	r4, 8008698 <__pow5mult+0x48>
 8008678:	2010      	movs	r0, #16
 800867a:	f7fd ffbd 	bl	80065f8 <malloc>
 800867e:	4602      	mov	r2, r0
 8008680:	61f8      	str	r0, [r7, #28]
 8008682:	b928      	cbnz	r0, 8008690 <__pow5mult+0x40>
 8008684:	f240 11b3 	movw	r1, #435	@ 0x1b3
 8008688:	4b1c      	ldr	r3, [pc, #112]	@ (80086fc <__pow5mult+0xac>)
 800868a:	481d      	ldr	r0, [pc, #116]	@ (8008700 <__pow5mult+0xb0>)
 800868c:	f7fe fd8a 	bl	80071a4 <__assert_func>
 8008690:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8008694:	6004      	str	r4, [r0, #0]
 8008696:	60c4      	str	r4, [r0, #12]
 8008698:	f8d7 801c 	ldr.w	r8, [r7, #28]
 800869c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 80086a0:	b94c      	cbnz	r4, 80086b6 <__pow5mult+0x66>
 80086a2:	f240 2171 	movw	r1, #625	@ 0x271
 80086a6:	4638      	mov	r0, r7
 80086a8:	f7ff ff1a 	bl	80084e0 <__i2b>
 80086ac:	2300      	movs	r3, #0
 80086ae:	4604      	mov	r4, r0
 80086b0:	f8c8 0008 	str.w	r0, [r8, #8]
 80086b4:	6003      	str	r3, [r0, #0]
 80086b6:	f04f 0900 	mov.w	r9, #0
 80086ba:	07eb      	lsls	r3, r5, #31
 80086bc:	d50a      	bpl.n	80086d4 <__pow5mult+0x84>
 80086be:	4631      	mov	r1, r6
 80086c0:	4622      	mov	r2, r4
 80086c2:	4638      	mov	r0, r7
 80086c4:	f7ff ff22 	bl	800850c <__multiply>
 80086c8:	4680      	mov	r8, r0
 80086ca:	4631      	mov	r1, r6
 80086cc:	4638      	mov	r0, r7
 80086ce:	f7ff fe53 	bl	8008378 <_Bfree>
 80086d2:	4646      	mov	r6, r8
 80086d4:	106d      	asrs	r5, r5, #1
 80086d6:	d00b      	beq.n	80086f0 <__pow5mult+0xa0>
 80086d8:	6820      	ldr	r0, [r4, #0]
 80086da:	b938      	cbnz	r0, 80086ec <__pow5mult+0x9c>
 80086dc:	4622      	mov	r2, r4
 80086de:	4621      	mov	r1, r4
 80086e0:	4638      	mov	r0, r7
 80086e2:	f7ff ff13 	bl	800850c <__multiply>
 80086e6:	6020      	str	r0, [r4, #0]
 80086e8:	f8c0 9000 	str.w	r9, [r0]
 80086ec:	4604      	mov	r4, r0
 80086ee:	e7e4      	b.n	80086ba <__pow5mult+0x6a>
 80086f0:	4630      	mov	r0, r6
 80086f2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80086f6:	bf00      	nop
 80086f8:	08009370 	.word	0x08009370
 80086fc:	0800917b 	.word	0x0800917b
 8008700:	0800920c 	.word	0x0800920c

08008704 <__lshift>:
 8008704:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008708:	460c      	mov	r4, r1
 800870a:	4607      	mov	r7, r0
 800870c:	4691      	mov	r9, r2
 800870e:	6923      	ldr	r3, [r4, #16]
 8008710:	6849      	ldr	r1, [r1, #4]
 8008712:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8008716:	68a3      	ldr	r3, [r4, #8]
 8008718:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800871c:	f108 0601 	add.w	r6, r8, #1
 8008720:	42b3      	cmp	r3, r6
 8008722:	db0b      	blt.n	800873c <__lshift+0x38>
 8008724:	4638      	mov	r0, r7
 8008726:	f7ff fde7 	bl	80082f8 <_Balloc>
 800872a:	4605      	mov	r5, r0
 800872c:	b948      	cbnz	r0, 8008742 <__lshift+0x3e>
 800872e:	4602      	mov	r2, r0
 8008730:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8008734:	4b27      	ldr	r3, [pc, #156]	@ (80087d4 <__lshift+0xd0>)
 8008736:	4828      	ldr	r0, [pc, #160]	@ (80087d8 <__lshift+0xd4>)
 8008738:	f7fe fd34 	bl	80071a4 <__assert_func>
 800873c:	3101      	adds	r1, #1
 800873e:	005b      	lsls	r3, r3, #1
 8008740:	e7ee      	b.n	8008720 <__lshift+0x1c>
 8008742:	2300      	movs	r3, #0
 8008744:	f100 0114 	add.w	r1, r0, #20
 8008748:	f100 0210 	add.w	r2, r0, #16
 800874c:	4618      	mov	r0, r3
 800874e:	4553      	cmp	r3, sl
 8008750:	db33      	blt.n	80087ba <__lshift+0xb6>
 8008752:	6920      	ldr	r0, [r4, #16]
 8008754:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8008758:	f104 0314 	add.w	r3, r4, #20
 800875c:	f019 091f 	ands.w	r9, r9, #31
 8008760:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8008764:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8008768:	d02b      	beq.n	80087c2 <__lshift+0xbe>
 800876a:	468a      	mov	sl, r1
 800876c:	2200      	movs	r2, #0
 800876e:	f1c9 0e20 	rsb	lr, r9, #32
 8008772:	6818      	ldr	r0, [r3, #0]
 8008774:	fa00 f009 	lsl.w	r0, r0, r9
 8008778:	4310      	orrs	r0, r2
 800877a:	f84a 0b04 	str.w	r0, [sl], #4
 800877e:	f853 2b04 	ldr.w	r2, [r3], #4
 8008782:	459c      	cmp	ip, r3
 8008784:	fa22 f20e 	lsr.w	r2, r2, lr
 8008788:	d8f3      	bhi.n	8008772 <__lshift+0x6e>
 800878a:	ebac 0304 	sub.w	r3, ip, r4
 800878e:	3b15      	subs	r3, #21
 8008790:	f023 0303 	bic.w	r3, r3, #3
 8008794:	3304      	adds	r3, #4
 8008796:	f104 0015 	add.w	r0, r4, #21
 800879a:	4560      	cmp	r0, ip
 800879c:	bf88      	it	hi
 800879e:	2304      	movhi	r3, #4
 80087a0:	50ca      	str	r2, [r1, r3]
 80087a2:	b10a      	cbz	r2, 80087a8 <__lshift+0xa4>
 80087a4:	f108 0602 	add.w	r6, r8, #2
 80087a8:	3e01      	subs	r6, #1
 80087aa:	4638      	mov	r0, r7
 80087ac:	4621      	mov	r1, r4
 80087ae:	612e      	str	r6, [r5, #16]
 80087b0:	f7ff fde2 	bl	8008378 <_Bfree>
 80087b4:	4628      	mov	r0, r5
 80087b6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80087ba:	f842 0f04 	str.w	r0, [r2, #4]!
 80087be:	3301      	adds	r3, #1
 80087c0:	e7c5      	b.n	800874e <__lshift+0x4a>
 80087c2:	3904      	subs	r1, #4
 80087c4:	f853 2b04 	ldr.w	r2, [r3], #4
 80087c8:	459c      	cmp	ip, r3
 80087ca:	f841 2f04 	str.w	r2, [r1, #4]!
 80087ce:	d8f9      	bhi.n	80087c4 <__lshift+0xc0>
 80087d0:	e7ea      	b.n	80087a8 <__lshift+0xa4>
 80087d2:	bf00      	nop
 80087d4:	080091ea 	.word	0x080091ea
 80087d8:	0800920c 	.word	0x0800920c

080087dc <__mcmp>:
 80087dc:	4603      	mov	r3, r0
 80087de:	690a      	ldr	r2, [r1, #16]
 80087e0:	6900      	ldr	r0, [r0, #16]
 80087e2:	b530      	push	{r4, r5, lr}
 80087e4:	1a80      	subs	r0, r0, r2
 80087e6:	d10e      	bne.n	8008806 <__mcmp+0x2a>
 80087e8:	3314      	adds	r3, #20
 80087ea:	3114      	adds	r1, #20
 80087ec:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 80087f0:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 80087f4:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 80087f8:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 80087fc:	4295      	cmp	r5, r2
 80087fe:	d003      	beq.n	8008808 <__mcmp+0x2c>
 8008800:	d205      	bcs.n	800880e <__mcmp+0x32>
 8008802:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8008806:	bd30      	pop	{r4, r5, pc}
 8008808:	42a3      	cmp	r3, r4
 800880a:	d3f3      	bcc.n	80087f4 <__mcmp+0x18>
 800880c:	e7fb      	b.n	8008806 <__mcmp+0x2a>
 800880e:	2001      	movs	r0, #1
 8008810:	e7f9      	b.n	8008806 <__mcmp+0x2a>
	...

08008814 <__mdiff>:
 8008814:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008818:	4689      	mov	r9, r1
 800881a:	4606      	mov	r6, r0
 800881c:	4611      	mov	r1, r2
 800881e:	4648      	mov	r0, r9
 8008820:	4614      	mov	r4, r2
 8008822:	f7ff ffdb 	bl	80087dc <__mcmp>
 8008826:	1e05      	subs	r5, r0, #0
 8008828:	d112      	bne.n	8008850 <__mdiff+0x3c>
 800882a:	4629      	mov	r1, r5
 800882c:	4630      	mov	r0, r6
 800882e:	f7ff fd63 	bl	80082f8 <_Balloc>
 8008832:	4602      	mov	r2, r0
 8008834:	b928      	cbnz	r0, 8008842 <__mdiff+0x2e>
 8008836:	f240 2137 	movw	r1, #567	@ 0x237
 800883a:	4b3e      	ldr	r3, [pc, #248]	@ (8008934 <__mdiff+0x120>)
 800883c:	483e      	ldr	r0, [pc, #248]	@ (8008938 <__mdiff+0x124>)
 800883e:	f7fe fcb1 	bl	80071a4 <__assert_func>
 8008842:	2301      	movs	r3, #1
 8008844:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8008848:	4610      	mov	r0, r2
 800884a:	b003      	add	sp, #12
 800884c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008850:	bfbc      	itt	lt
 8008852:	464b      	movlt	r3, r9
 8008854:	46a1      	movlt	r9, r4
 8008856:	4630      	mov	r0, r6
 8008858:	f8d9 1004 	ldr.w	r1, [r9, #4]
 800885c:	bfba      	itte	lt
 800885e:	461c      	movlt	r4, r3
 8008860:	2501      	movlt	r5, #1
 8008862:	2500      	movge	r5, #0
 8008864:	f7ff fd48 	bl	80082f8 <_Balloc>
 8008868:	4602      	mov	r2, r0
 800886a:	b918      	cbnz	r0, 8008874 <__mdiff+0x60>
 800886c:	f240 2145 	movw	r1, #581	@ 0x245
 8008870:	4b30      	ldr	r3, [pc, #192]	@ (8008934 <__mdiff+0x120>)
 8008872:	e7e3      	b.n	800883c <__mdiff+0x28>
 8008874:	f100 0b14 	add.w	fp, r0, #20
 8008878:	f8d9 7010 	ldr.w	r7, [r9, #16]
 800887c:	f109 0310 	add.w	r3, r9, #16
 8008880:	60c5      	str	r5, [r0, #12]
 8008882:	f04f 0c00 	mov.w	ip, #0
 8008886:	f109 0514 	add.w	r5, r9, #20
 800888a:	46d9      	mov	r9, fp
 800888c:	6926      	ldr	r6, [r4, #16]
 800888e:	f104 0e14 	add.w	lr, r4, #20
 8008892:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8008896:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 800889a:	9301      	str	r3, [sp, #4]
 800889c:	9b01      	ldr	r3, [sp, #4]
 800889e:	f85e 0b04 	ldr.w	r0, [lr], #4
 80088a2:	f853 af04 	ldr.w	sl, [r3, #4]!
 80088a6:	b281      	uxth	r1, r0
 80088a8:	9301      	str	r3, [sp, #4]
 80088aa:	fa1f f38a 	uxth.w	r3, sl
 80088ae:	1a5b      	subs	r3, r3, r1
 80088b0:	0c00      	lsrs	r0, r0, #16
 80088b2:	4463      	add	r3, ip
 80088b4:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 80088b8:	eb00 4023 	add.w	r0, r0, r3, asr #16
 80088bc:	b29b      	uxth	r3, r3
 80088be:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 80088c2:	4576      	cmp	r6, lr
 80088c4:	ea4f 4c20 	mov.w	ip, r0, asr #16
 80088c8:	f849 3b04 	str.w	r3, [r9], #4
 80088cc:	d8e6      	bhi.n	800889c <__mdiff+0x88>
 80088ce:	1b33      	subs	r3, r6, r4
 80088d0:	3b15      	subs	r3, #21
 80088d2:	f023 0303 	bic.w	r3, r3, #3
 80088d6:	3415      	adds	r4, #21
 80088d8:	3304      	adds	r3, #4
 80088da:	42a6      	cmp	r6, r4
 80088dc:	bf38      	it	cc
 80088de:	2304      	movcc	r3, #4
 80088e0:	441d      	add	r5, r3
 80088e2:	445b      	add	r3, fp
 80088e4:	461e      	mov	r6, r3
 80088e6:	462c      	mov	r4, r5
 80088e8:	4544      	cmp	r4, r8
 80088ea:	d30e      	bcc.n	800890a <__mdiff+0xf6>
 80088ec:	f108 0103 	add.w	r1, r8, #3
 80088f0:	1b49      	subs	r1, r1, r5
 80088f2:	f021 0103 	bic.w	r1, r1, #3
 80088f6:	3d03      	subs	r5, #3
 80088f8:	45a8      	cmp	r8, r5
 80088fa:	bf38      	it	cc
 80088fc:	2100      	movcc	r1, #0
 80088fe:	440b      	add	r3, r1
 8008900:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8008904:	b199      	cbz	r1, 800892e <__mdiff+0x11a>
 8008906:	6117      	str	r7, [r2, #16]
 8008908:	e79e      	b.n	8008848 <__mdiff+0x34>
 800890a:	46e6      	mov	lr, ip
 800890c:	f854 1b04 	ldr.w	r1, [r4], #4
 8008910:	fa1f fc81 	uxth.w	ip, r1
 8008914:	44f4      	add	ip, lr
 8008916:	0c08      	lsrs	r0, r1, #16
 8008918:	4471      	add	r1, lr
 800891a:	eb00 402c 	add.w	r0, r0, ip, asr #16
 800891e:	b289      	uxth	r1, r1
 8008920:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8008924:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8008928:	f846 1b04 	str.w	r1, [r6], #4
 800892c:	e7dc      	b.n	80088e8 <__mdiff+0xd4>
 800892e:	3f01      	subs	r7, #1
 8008930:	e7e6      	b.n	8008900 <__mdiff+0xec>
 8008932:	bf00      	nop
 8008934:	080091ea 	.word	0x080091ea
 8008938:	0800920c 	.word	0x0800920c

0800893c <__d2b>:
 800893c:	e92d 4373 	stmdb	sp!, {r0, r1, r4, r5, r6, r8, r9, lr}
 8008940:	2101      	movs	r1, #1
 8008942:	4690      	mov	r8, r2
 8008944:	4699      	mov	r9, r3
 8008946:	9e08      	ldr	r6, [sp, #32]
 8008948:	f7ff fcd6 	bl	80082f8 <_Balloc>
 800894c:	4604      	mov	r4, r0
 800894e:	b930      	cbnz	r0, 800895e <__d2b+0x22>
 8008950:	4602      	mov	r2, r0
 8008952:	f240 310f 	movw	r1, #783	@ 0x30f
 8008956:	4b23      	ldr	r3, [pc, #140]	@ (80089e4 <__d2b+0xa8>)
 8008958:	4823      	ldr	r0, [pc, #140]	@ (80089e8 <__d2b+0xac>)
 800895a:	f7fe fc23 	bl	80071a4 <__assert_func>
 800895e:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8008962:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8008966:	b10d      	cbz	r5, 800896c <__d2b+0x30>
 8008968:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800896c:	9301      	str	r3, [sp, #4]
 800896e:	f1b8 0300 	subs.w	r3, r8, #0
 8008972:	d024      	beq.n	80089be <__d2b+0x82>
 8008974:	4668      	mov	r0, sp
 8008976:	9300      	str	r3, [sp, #0]
 8008978:	f7ff fd85 	bl	8008486 <__lo0bits>
 800897c:	e9dd 1200 	ldrd	r1, r2, [sp]
 8008980:	b1d8      	cbz	r0, 80089ba <__d2b+0x7e>
 8008982:	f1c0 0320 	rsb	r3, r0, #32
 8008986:	fa02 f303 	lsl.w	r3, r2, r3
 800898a:	430b      	orrs	r3, r1
 800898c:	40c2      	lsrs	r2, r0
 800898e:	6163      	str	r3, [r4, #20]
 8008990:	9201      	str	r2, [sp, #4]
 8008992:	9b01      	ldr	r3, [sp, #4]
 8008994:	2b00      	cmp	r3, #0
 8008996:	bf0c      	ite	eq
 8008998:	2201      	moveq	r2, #1
 800899a:	2202      	movne	r2, #2
 800899c:	61a3      	str	r3, [r4, #24]
 800899e:	6122      	str	r2, [r4, #16]
 80089a0:	b1ad      	cbz	r5, 80089ce <__d2b+0x92>
 80089a2:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 80089a6:	4405      	add	r5, r0
 80089a8:	6035      	str	r5, [r6, #0]
 80089aa:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 80089ae:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80089b0:	6018      	str	r0, [r3, #0]
 80089b2:	4620      	mov	r0, r4
 80089b4:	b002      	add	sp, #8
 80089b6:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 80089ba:	6161      	str	r1, [r4, #20]
 80089bc:	e7e9      	b.n	8008992 <__d2b+0x56>
 80089be:	a801      	add	r0, sp, #4
 80089c0:	f7ff fd61 	bl	8008486 <__lo0bits>
 80089c4:	9b01      	ldr	r3, [sp, #4]
 80089c6:	2201      	movs	r2, #1
 80089c8:	6163      	str	r3, [r4, #20]
 80089ca:	3020      	adds	r0, #32
 80089cc:	e7e7      	b.n	800899e <__d2b+0x62>
 80089ce:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 80089d2:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 80089d6:	6030      	str	r0, [r6, #0]
 80089d8:	6918      	ldr	r0, [r3, #16]
 80089da:	f7ff fd35 	bl	8008448 <__hi0bits>
 80089de:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 80089e2:	e7e4      	b.n	80089ae <__d2b+0x72>
 80089e4:	080091ea 	.word	0x080091ea
 80089e8:	0800920c 	.word	0x0800920c

080089ec <__sread>:
 80089ec:	b510      	push	{r4, lr}
 80089ee:	460c      	mov	r4, r1
 80089f0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80089f4:	f000 f8f6 	bl	8008be4 <_read_r>
 80089f8:	2800      	cmp	r0, #0
 80089fa:	bfab      	itete	ge
 80089fc:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80089fe:	89a3      	ldrhlt	r3, [r4, #12]
 8008a00:	181b      	addge	r3, r3, r0
 8008a02:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8008a06:	bfac      	ite	ge
 8008a08:	6563      	strge	r3, [r4, #84]	@ 0x54
 8008a0a:	81a3      	strhlt	r3, [r4, #12]
 8008a0c:	bd10      	pop	{r4, pc}

08008a0e <__swrite>:
 8008a0e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008a12:	461f      	mov	r7, r3
 8008a14:	898b      	ldrh	r3, [r1, #12]
 8008a16:	4605      	mov	r5, r0
 8008a18:	05db      	lsls	r3, r3, #23
 8008a1a:	460c      	mov	r4, r1
 8008a1c:	4616      	mov	r6, r2
 8008a1e:	d505      	bpl.n	8008a2c <__swrite+0x1e>
 8008a20:	2302      	movs	r3, #2
 8008a22:	2200      	movs	r2, #0
 8008a24:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8008a28:	f000 f8ca 	bl	8008bc0 <_lseek_r>
 8008a2c:	89a3      	ldrh	r3, [r4, #12]
 8008a2e:	4632      	mov	r2, r6
 8008a30:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8008a34:	81a3      	strh	r3, [r4, #12]
 8008a36:	4628      	mov	r0, r5
 8008a38:	463b      	mov	r3, r7
 8008a3a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8008a3e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8008a42:	f000 b8e1 	b.w	8008c08 <_write_r>

08008a46 <__sseek>:
 8008a46:	b510      	push	{r4, lr}
 8008a48:	460c      	mov	r4, r1
 8008a4a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8008a4e:	f000 f8b7 	bl	8008bc0 <_lseek_r>
 8008a52:	1c43      	adds	r3, r0, #1
 8008a54:	89a3      	ldrh	r3, [r4, #12]
 8008a56:	bf15      	itete	ne
 8008a58:	6560      	strne	r0, [r4, #84]	@ 0x54
 8008a5a:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8008a5e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8008a62:	81a3      	strheq	r3, [r4, #12]
 8008a64:	bf18      	it	ne
 8008a66:	81a3      	strhne	r3, [r4, #12]
 8008a68:	bd10      	pop	{r4, pc}

08008a6a <__sclose>:
 8008a6a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8008a6e:	f000 b8dd 	b.w	8008c2c <_close_r>
	...

08008a74 <fiprintf>:
 8008a74:	b40e      	push	{r1, r2, r3}
 8008a76:	b503      	push	{r0, r1, lr}
 8008a78:	4601      	mov	r1, r0
 8008a7a:	ab03      	add	r3, sp, #12
 8008a7c:	4805      	ldr	r0, [pc, #20]	@ (8008a94 <fiprintf+0x20>)
 8008a7e:	f853 2b04 	ldr.w	r2, [r3], #4
 8008a82:	6800      	ldr	r0, [r0, #0]
 8008a84:	9301      	str	r3, [sp, #4]
 8008a86:	f7ff fa77 	bl	8007f78 <_vfiprintf_r>
 8008a8a:	b002      	add	sp, #8
 8008a8c:	f85d eb04 	ldr.w	lr, [sp], #4
 8008a90:	b003      	add	sp, #12
 8008a92:	4770      	bx	lr
 8008a94:	2000002c 	.word	0x2000002c

08008a98 <__swbuf_r>:
 8008a98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008a9a:	460e      	mov	r6, r1
 8008a9c:	4614      	mov	r4, r2
 8008a9e:	4605      	mov	r5, r0
 8008aa0:	b118      	cbz	r0, 8008aaa <__swbuf_r+0x12>
 8008aa2:	6a03      	ldr	r3, [r0, #32]
 8008aa4:	b90b      	cbnz	r3, 8008aaa <__swbuf_r+0x12>
 8008aa6:	f7fe f92d 	bl	8006d04 <__sinit>
 8008aaa:	69a3      	ldr	r3, [r4, #24]
 8008aac:	60a3      	str	r3, [r4, #8]
 8008aae:	89a3      	ldrh	r3, [r4, #12]
 8008ab0:	071a      	lsls	r2, r3, #28
 8008ab2:	d501      	bpl.n	8008ab8 <__swbuf_r+0x20>
 8008ab4:	6923      	ldr	r3, [r4, #16]
 8008ab6:	b943      	cbnz	r3, 8008aca <__swbuf_r+0x32>
 8008ab8:	4621      	mov	r1, r4
 8008aba:	4628      	mov	r0, r5
 8008abc:	f000 f82a 	bl	8008b14 <__swsetup_r>
 8008ac0:	b118      	cbz	r0, 8008aca <__swbuf_r+0x32>
 8008ac2:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
 8008ac6:	4638      	mov	r0, r7
 8008ac8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008aca:	6823      	ldr	r3, [r4, #0]
 8008acc:	6922      	ldr	r2, [r4, #16]
 8008ace:	b2f6      	uxtb	r6, r6
 8008ad0:	1a98      	subs	r0, r3, r2
 8008ad2:	6963      	ldr	r3, [r4, #20]
 8008ad4:	4637      	mov	r7, r6
 8008ad6:	4283      	cmp	r3, r0
 8008ad8:	dc05      	bgt.n	8008ae6 <__swbuf_r+0x4e>
 8008ada:	4621      	mov	r1, r4
 8008adc:	4628      	mov	r0, r5
 8008ade:	f7ff fbe3 	bl	80082a8 <_fflush_r>
 8008ae2:	2800      	cmp	r0, #0
 8008ae4:	d1ed      	bne.n	8008ac2 <__swbuf_r+0x2a>
 8008ae6:	68a3      	ldr	r3, [r4, #8]
 8008ae8:	3b01      	subs	r3, #1
 8008aea:	60a3      	str	r3, [r4, #8]
 8008aec:	6823      	ldr	r3, [r4, #0]
 8008aee:	1c5a      	adds	r2, r3, #1
 8008af0:	6022      	str	r2, [r4, #0]
 8008af2:	701e      	strb	r6, [r3, #0]
 8008af4:	6962      	ldr	r2, [r4, #20]
 8008af6:	1c43      	adds	r3, r0, #1
 8008af8:	429a      	cmp	r2, r3
 8008afa:	d004      	beq.n	8008b06 <__swbuf_r+0x6e>
 8008afc:	89a3      	ldrh	r3, [r4, #12]
 8008afe:	07db      	lsls	r3, r3, #31
 8008b00:	d5e1      	bpl.n	8008ac6 <__swbuf_r+0x2e>
 8008b02:	2e0a      	cmp	r6, #10
 8008b04:	d1df      	bne.n	8008ac6 <__swbuf_r+0x2e>
 8008b06:	4621      	mov	r1, r4
 8008b08:	4628      	mov	r0, r5
 8008b0a:	f7ff fbcd 	bl	80082a8 <_fflush_r>
 8008b0e:	2800      	cmp	r0, #0
 8008b10:	d0d9      	beq.n	8008ac6 <__swbuf_r+0x2e>
 8008b12:	e7d6      	b.n	8008ac2 <__swbuf_r+0x2a>

08008b14 <__swsetup_r>:
 8008b14:	b538      	push	{r3, r4, r5, lr}
 8008b16:	4b29      	ldr	r3, [pc, #164]	@ (8008bbc <__swsetup_r+0xa8>)
 8008b18:	4605      	mov	r5, r0
 8008b1a:	6818      	ldr	r0, [r3, #0]
 8008b1c:	460c      	mov	r4, r1
 8008b1e:	b118      	cbz	r0, 8008b28 <__swsetup_r+0x14>
 8008b20:	6a03      	ldr	r3, [r0, #32]
 8008b22:	b90b      	cbnz	r3, 8008b28 <__swsetup_r+0x14>
 8008b24:	f7fe f8ee 	bl	8006d04 <__sinit>
 8008b28:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8008b2c:	0719      	lsls	r1, r3, #28
 8008b2e:	d422      	bmi.n	8008b76 <__swsetup_r+0x62>
 8008b30:	06da      	lsls	r2, r3, #27
 8008b32:	d407      	bmi.n	8008b44 <__swsetup_r+0x30>
 8008b34:	2209      	movs	r2, #9
 8008b36:	602a      	str	r2, [r5, #0]
 8008b38:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8008b3c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8008b40:	81a3      	strh	r3, [r4, #12]
 8008b42:	e033      	b.n	8008bac <__swsetup_r+0x98>
 8008b44:	0758      	lsls	r0, r3, #29
 8008b46:	d512      	bpl.n	8008b6e <__swsetup_r+0x5a>
 8008b48:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8008b4a:	b141      	cbz	r1, 8008b5e <__swsetup_r+0x4a>
 8008b4c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8008b50:	4299      	cmp	r1, r3
 8008b52:	d002      	beq.n	8008b5a <__swsetup_r+0x46>
 8008b54:	4628      	mov	r0, r5
 8008b56:	f7ff f99f 	bl	8007e98 <_free_r>
 8008b5a:	2300      	movs	r3, #0
 8008b5c:	6363      	str	r3, [r4, #52]	@ 0x34
 8008b5e:	89a3      	ldrh	r3, [r4, #12]
 8008b60:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8008b64:	81a3      	strh	r3, [r4, #12]
 8008b66:	2300      	movs	r3, #0
 8008b68:	6063      	str	r3, [r4, #4]
 8008b6a:	6923      	ldr	r3, [r4, #16]
 8008b6c:	6023      	str	r3, [r4, #0]
 8008b6e:	89a3      	ldrh	r3, [r4, #12]
 8008b70:	f043 0308 	orr.w	r3, r3, #8
 8008b74:	81a3      	strh	r3, [r4, #12]
 8008b76:	6923      	ldr	r3, [r4, #16]
 8008b78:	b94b      	cbnz	r3, 8008b8e <__swsetup_r+0x7a>
 8008b7a:	89a3      	ldrh	r3, [r4, #12]
 8008b7c:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8008b80:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8008b84:	d003      	beq.n	8008b8e <__swsetup_r+0x7a>
 8008b86:	4621      	mov	r1, r4
 8008b88:	4628      	mov	r0, r5
 8008b8a:	f7fe f970 	bl	8006e6e <__smakebuf_r>
 8008b8e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8008b92:	f013 0201 	ands.w	r2, r3, #1
 8008b96:	d00a      	beq.n	8008bae <__swsetup_r+0x9a>
 8008b98:	2200      	movs	r2, #0
 8008b9a:	60a2      	str	r2, [r4, #8]
 8008b9c:	6962      	ldr	r2, [r4, #20]
 8008b9e:	4252      	negs	r2, r2
 8008ba0:	61a2      	str	r2, [r4, #24]
 8008ba2:	6922      	ldr	r2, [r4, #16]
 8008ba4:	b942      	cbnz	r2, 8008bb8 <__swsetup_r+0xa4>
 8008ba6:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8008baa:	d1c5      	bne.n	8008b38 <__swsetup_r+0x24>
 8008bac:	bd38      	pop	{r3, r4, r5, pc}
 8008bae:	0799      	lsls	r1, r3, #30
 8008bb0:	bf58      	it	pl
 8008bb2:	6962      	ldrpl	r2, [r4, #20]
 8008bb4:	60a2      	str	r2, [r4, #8]
 8008bb6:	e7f4      	b.n	8008ba2 <__swsetup_r+0x8e>
 8008bb8:	2000      	movs	r0, #0
 8008bba:	e7f7      	b.n	8008bac <__swsetup_r+0x98>
 8008bbc:	2000002c 	.word	0x2000002c

08008bc0 <_lseek_r>:
 8008bc0:	b538      	push	{r3, r4, r5, lr}
 8008bc2:	4604      	mov	r4, r0
 8008bc4:	4608      	mov	r0, r1
 8008bc6:	4611      	mov	r1, r2
 8008bc8:	2200      	movs	r2, #0
 8008bca:	4d05      	ldr	r5, [pc, #20]	@ (8008be0 <_lseek_r+0x20>)
 8008bcc:	602a      	str	r2, [r5, #0]
 8008bce:	461a      	mov	r2, r3
 8008bd0:	f7fa f928 	bl	8002e24 <_lseek>
 8008bd4:	1c43      	adds	r3, r0, #1
 8008bd6:	d102      	bne.n	8008bde <_lseek_r+0x1e>
 8008bd8:	682b      	ldr	r3, [r5, #0]
 8008bda:	b103      	cbz	r3, 8008bde <_lseek_r+0x1e>
 8008bdc:	6023      	str	r3, [r4, #0]
 8008bde:	bd38      	pop	{r3, r4, r5, pc}
 8008be0:	20000740 	.word	0x20000740

08008be4 <_read_r>:
 8008be4:	b538      	push	{r3, r4, r5, lr}
 8008be6:	4604      	mov	r4, r0
 8008be8:	4608      	mov	r0, r1
 8008bea:	4611      	mov	r1, r2
 8008bec:	2200      	movs	r2, #0
 8008bee:	4d05      	ldr	r5, [pc, #20]	@ (8008c04 <_read_r+0x20>)
 8008bf0:	602a      	str	r2, [r5, #0]
 8008bf2:	461a      	mov	r2, r3
 8008bf4:	f7f9 fe90 	bl	8002918 <_read>
 8008bf8:	1c43      	adds	r3, r0, #1
 8008bfa:	d102      	bne.n	8008c02 <_read_r+0x1e>
 8008bfc:	682b      	ldr	r3, [r5, #0]
 8008bfe:	b103      	cbz	r3, 8008c02 <_read_r+0x1e>
 8008c00:	6023      	str	r3, [r4, #0]
 8008c02:	bd38      	pop	{r3, r4, r5, pc}
 8008c04:	20000740 	.word	0x20000740

08008c08 <_write_r>:
 8008c08:	b538      	push	{r3, r4, r5, lr}
 8008c0a:	4604      	mov	r4, r0
 8008c0c:	4608      	mov	r0, r1
 8008c0e:	4611      	mov	r1, r2
 8008c10:	2200      	movs	r2, #0
 8008c12:	4d05      	ldr	r5, [pc, #20]	@ (8008c28 <_write_r+0x20>)
 8008c14:	602a      	str	r2, [r5, #0]
 8008c16:	461a      	mov	r2, r3
 8008c18:	f7f9 fe6a 	bl	80028f0 <_write>
 8008c1c:	1c43      	adds	r3, r0, #1
 8008c1e:	d102      	bne.n	8008c26 <_write_r+0x1e>
 8008c20:	682b      	ldr	r3, [r5, #0]
 8008c22:	b103      	cbz	r3, 8008c26 <_write_r+0x1e>
 8008c24:	6023      	str	r3, [r4, #0]
 8008c26:	bd38      	pop	{r3, r4, r5, pc}
 8008c28:	20000740 	.word	0x20000740

08008c2c <_close_r>:
 8008c2c:	b538      	push	{r3, r4, r5, lr}
 8008c2e:	2300      	movs	r3, #0
 8008c30:	4d05      	ldr	r5, [pc, #20]	@ (8008c48 <_close_r+0x1c>)
 8008c32:	4604      	mov	r4, r0
 8008c34:	4608      	mov	r0, r1
 8008c36:	602b      	str	r3, [r5, #0]
 8008c38:	f7fa f8d0 	bl	8002ddc <_close>
 8008c3c:	1c43      	adds	r3, r0, #1
 8008c3e:	d102      	bne.n	8008c46 <_close_r+0x1a>
 8008c40:	682b      	ldr	r3, [r5, #0]
 8008c42:	b103      	cbz	r3, 8008c46 <_close_r+0x1a>
 8008c44:	6023      	str	r3, [r4, #0]
 8008c46:	bd38      	pop	{r3, r4, r5, pc}
 8008c48:	20000740 	.word	0x20000740

08008c4c <_calloc_r>:
 8008c4c:	b570      	push	{r4, r5, r6, lr}
 8008c4e:	fba1 5402 	umull	r5, r4, r1, r2
 8008c52:	b934      	cbnz	r4, 8008c62 <_calloc_r+0x16>
 8008c54:	4629      	mov	r1, r5
 8008c56:	f7fd fcf9 	bl	800664c <_malloc_r>
 8008c5a:	4606      	mov	r6, r0
 8008c5c:	b928      	cbnz	r0, 8008c6a <_calloc_r+0x1e>
 8008c5e:	4630      	mov	r0, r6
 8008c60:	bd70      	pop	{r4, r5, r6, pc}
 8008c62:	220c      	movs	r2, #12
 8008c64:	2600      	movs	r6, #0
 8008c66:	6002      	str	r2, [r0, #0]
 8008c68:	e7f9      	b.n	8008c5e <_calloc_r+0x12>
 8008c6a:	462a      	mov	r2, r5
 8008c6c:	4621      	mov	r1, r4
 8008c6e:	f7fe f9bb 	bl	8006fe8 <memset>
 8008c72:	e7f4      	b.n	8008c5e <_calloc_r+0x12>

08008c74 <__ascii_mbtowc>:
 8008c74:	b082      	sub	sp, #8
 8008c76:	b901      	cbnz	r1, 8008c7a <__ascii_mbtowc+0x6>
 8008c78:	a901      	add	r1, sp, #4
 8008c7a:	b142      	cbz	r2, 8008c8e <__ascii_mbtowc+0x1a>
 8008c7c:	b14b      	cbz	r3, 8008c92 <__ascii_mbtowc+0x1e>
 8008c7e:	7813      	ldrb	r3, [r2, #0]
 8008c80:	600b      	str	r3, [r1, #0]
 8008c82:	7812      	ldrb	r2, [r2, #0]
 8008c84:	1e10      	subs	r0, r2, #0
 8008c86:	bf18      	it	ne
 8008c88:	2001      	movne	r0, #1
 8008c8a:	b002      	add	sp, #8
 8008c8c:	4770      	bx	lr
 8008c8e:	4610      	mov	r0, r2
 8008c90:	e7fb      	b.n	8008c8a <__ascii_mbtowc+0x16>
 8008c92:	f06f 0001 	mvn.w	r0, #1
 8008c96:	e7f8      	b.n	8008c8a <__ascii_mbtowc+0x16>

08008c98 <__ascii_wctomb>:
 8008c98:	4603      	mov	r3, r0
 8008c9a:	4608      	mov	r0, r1
 8008c9c:	b141      	cbz	r1, 8008cb0 <__ascii_wctomb+0x18>
 8008c9e:	2aff      	cmp	r2, #255	@ 0xff
 8008ca0:	d904      	bls.n	8008cac <__ascii_wctomb+0x14>
 8008ca2:	228a      	movs	r2, #138	@ 0x8a
 8008ca4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8008ca8:	601a      	str	r2, [r3, #0]
 8008caa:	4770      	bx	lr
 8008cac:	2001      	movs	r0, #1
 8008cae:	700a      	strb	r2, [r1, #0]
 8008cb0:	4770      	bx	lr
	...

08008cb4 <_init>:
 8008cb4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008cb6:	bf00      	nop
 8008cb8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008cba:	bc08      	pop	{r3}
 8008cbc:	469e      	mov	lr, r3
 8008cbe:	4770      	bx	lr

08008cc0 <_fini>:
 8008cc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008cc2:	bf00      	nop
 8008cc4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008cc6:	bc08      	pop	{r3}
 8008cc8:	469e      	mov	lr, r3
 8008cca:	4770      	bx	lr
